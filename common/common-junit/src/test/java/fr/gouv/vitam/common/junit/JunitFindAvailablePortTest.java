/*
 * This file was automatically generated by EvoSuite Fri Jun 24 15:47:09 CEST 2016
 */

package fr.gouv.vitam.common.junit;

import static org.junit.Assert.assertFalse;
import static org.junit.Assert.assertTrue;
import static org.junit.Assert.fail;

import java.net.ServerSocket;

import org.junit.Test;

import fr.gouv.vitam.common.junit.JunitFindAvailablePort;

public class JunitFindAvailablePortTest {

    @Test
    public void testArgumentError() throws Throwable {
        JunitFindAvailablePort junitFindAvailablePort0 = new JunitFindAvailablePort();
        try {
            junitFindAvailablePort0.isListeningOn("znN>", -4608);
            fail("Expecting exception: IllegalArgumentException");
        } catch (IllegalArgumentException e) {}
        try {
            junitFindAvailablePort0.isListeningOn("znN>", 65536);
            fail("Expecting exception: IllegalArgumentException");

        } catch (IllegalArgumentException e) {}
        try {
            junitFindAvailablePort0.isListeningOn(-4608);
            fail("Expecting exception: IllegalArgumentException");

        } catch (IllegalArgumentException e) {}
        try {
            junitFindAvailablePort0.isListeningOn(65536);
            fail("Expecting exception: IllegalArgumentException");

        } catch (IllegalArgumentException e) {}
        assertFalse(junitFindAvailablePort0.isListeningOn("znN>", 1025));
    }

    @Test
    public void testActivatePort() throws Throwable {
        JunitFindAvailablePort junitFindAvailablePort0 = new JunitFindAvailablePort();
        int port = junitFindAvailablePort0.findAvailablePort();
        try (ServerSocket serverSocket = new ServerSocket(port)) {
            serverSocket.setReuseAddress(true);
            assertTrue(junitFindAvailablePort0.isListeningOn(port));
            assertTrue(junitFindAvailablePort0.isListeningOn(null, port));
        }
        port = junitFindAvailablePort0.findAvailablePort();
        assertFalse(junitFindAvailablePort0.isListeningOn(port));
        assertFalse(junitFindAvailablePort0.isListeningOn(null, port));
    }
}
