/*
 * This file was automatically generated by EvoSuite
 * Tue Jun 07 14:35:08 CEST 2016
 */

package fr.gouv.vitam.common.server.application.configuration;

import org.junit.Test;
import static org.junit.Assert.*;
import fr.gouv.vitam.common.server.application.configuration.ClientConfigurationImpl;

public class ClientConfigurationImplTest {

  @Test
  public void testFailed() {
      ClientConfigurationImpl clientConfigurationImpl0 =
          new ClientConfigurationImpl();
      try { 
        clientConfigurationImpl0.setServerPort(0);
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
      }
      try { 
          clientConfigurationImpl0.setServerPort(-1);
          fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
      }
      try { 
          clientConfigurationImpl0.setServerHost(null);
          fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
      }
      try { 
          clientConfigurationImpl0.setServerHost("");
          fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
      }
      try { 
          clientConfigurationImpl0 =
              new ClientConfigurationImpl(null, 10);
          fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
      }
      try { 
          clientConfigurationImpl0 =
              new ClientConfigurationImpl("", 10);
          fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
      }
      try { 
          clientConfigurationImpl0 =
              new ClientConfigurationImpl("test", -10);
          fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
      }
  }

  @Test
  public void testBuildOk() {
      ClientConfigurationImpl clientConfigurationImpl0 = 
          new ClientConfigurationImpl("H.Y", 75);
      assertEquals(75, clientConfigurationImpl0.getServerPort());
      clientConfigurationImpl0 = new ClientConfigurationImpl();
      int int0 = clientConfigurationImpl0.getServerPort();
      assertEquals(0, int0);
  }

  @Test
  public void testSetterPort() {
      ClientConfigurationImpl clientConfigurationImpl0 = 
          new ClientConfigurationImpl();
      ClientConfigurationImpl clientConfigurationImpl1 = 
          clientConfigurationImpl0.setServerPort(470);
      int int0 = clientConfigurationImpl1.getServerPort();
      assertEquals(470, int0);
  }

  @Test
  public void testSetterHost() {
      ClientConfigurationImpl clientConfigurationImpl0 = 
          new ClientConfigurationImpl();
      String string0 = clientConfigurationImpl0.getServerHost();
      assertNull(string0);
      clientConfigurationImpl0.setServerHost("test");
      assertEquals("test", clientConfigurationImpl0.getServerHost());
  }
}
