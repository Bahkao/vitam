---

- name: Compute the mongos server list
  set_fact: mongos_item="{{ item }}"
  when:
    - "mongo_cluster_name == hostvars[item]['mongo_cluster_name']"
  with_items:
    - "{{ groups[mongo_group] }}"
  register: mongos_result

- name: make a list from the result
  set_fact:
    mongos_list: "{{ mongos_result.results | remove_skipped_servers | map(attribute='ansible_facts.mongos_item') | list }}"
  when: "inventory_hostname != 'localhost'"

- name: make a list from the result (localhost deploy)
  set_fact:
    mongos_list: [ 'localhost' ]
  when: "inventory_hostname == 'localhost'"

- block:

  - name: Wait for the service port to be open
    wait_for: host={{ ip_service }} port={{ mongodb.mongos_port }} timeout="{{ vitam_defaults.services.start_timeout }}"

  - name: Copy the database scripts files
    template:
      src: "{{ item }}"
      dest: "{{ vitam_defaults.folder.root_path }}/app/mongos/{{ item | basename | regex_replace('\\.j2$') }}"
      owner: "{{ vitam_defaults.users.vitamdb }}"
      group: "{{ vitam_defaults.users.group }}"
      mode: "{{ vitam_defaults.folder.conf_permission }}"
    with_fileglob:
      - "{{ role_path }}/templates/*"

  - name: Start the balancer
    shell: "mongo {{ ip_service }}:{{ mongodb.mongos_port }}/admin -u {{ mongodb[mongo_cluster_name].admin.user }} -p {{ mongodb[mongo_cluster_name].admin.password }} --quiet < {{ vitam_defaults.folder.root_path }}/app/mongos/start_balancer.js"
    no_log: false
    when: state == "started"

  - name: Stop the balancer
    shell: "mongo {{ ip_service }}:{{ mongodb.mongos_port }}/admin -u {{ mongodb[mongo_cluster_name].admin.user }} -p {{ mongodb[mongo_cluster_name].admin.password }} --quiet < {{ vitam_defaults.folder.root_path }}/app/mongos/stop_balancer.js"
    no_log: false
    when: state == "stopped"

  when: mongos_list |last == inventory_hostname
