---

# - name: create temporary pem file to connect to access-external
#   local_action: shell openssl pkcs12 -in {{inventory_dir}}/keystores/client-external/keystore_vitam-admin-int.p12 -out {{inventory_dir}}/keystores/client-external/keystore_vitam-admin-int.pem  -passin pass:{{ keystores.client_external.vitam_admin_int }} -passout pass:{{ keystores.client_external.vitam_admin_int }} -nodes

# - name: copy temporary PEM certificate 
#   copy:
#     src: "{{inventory_dir}}/keystores/client-external/keystore_vitam-admin-int.pem"
#     dest: "{{ vitam_defaults.folder.root_path }}/tmp/access-external/keystore_vitam-admin-int.pem"
#     remote_src: no
#     owner: "{{ vitam_defaults.users.vitam }}"
#     group: "{{ vitam_defaults.users.group }}"
#     mode: "{{ vitam_defaults.folder.conf_permission }}"


# - name: Ensure service is started 
#   service:
#     name: "vitam-access-external"
#     state: started

# - name: "Wait until service access-external is up"
#   wait_for:
#       host: "{{hostvars[groups['hosts-access-external'][0]]['ip_service']}}"
#       port: "{{ vitam.accessexternal.port_service }}"
#       state: "started"
#       timeout: "{{ vitam_defaults.services.start_timeout }}"
#   run_once: true

# - name: get contexts list
#   uri:
#     url: "https://{{ hostvars[groups['hosts-access-external'][0]]['ip_service'] }}:{{ vitam.accessexternal.port_service }}/admin-external/v1/contexts"
#     method: GET
#     client_cert: "{{ vitam_defaults.folder.root_path }}/tmp/access-external/keystore_vitam-admin-int.pem"
#     headers:
#       Connection: "keep-alive"
#       X-Tenant-Id: "{{ vitam_tenant_ids|first }}"
#     body: "{\"$query\": { \"$exists\": \"#id\" }, \"$projection\": {}}"
#     body_format: "json"
#     validate_certs: false
#     return_content: yes
#   register: contexts
#   run_once: true # Limit as this upload is not related to tenants
#   #no_log: true

# - name: Modify json
#   set_fact:
#     contextes: "{{ contexts.json |regex_replace('\\$results', 'results')|regex_replace('#id', 'id')|regex_replace('_tenant', 'tenant') }}"
#   run_once: true

# # - debug:
# #     var:  contextes.results

# - name: upgrade contexts
#   uri:
#     url: "https://{{ hostvars[groups['hosts-access-external'][0]]['ip_service'] }}:{{ vitam.accessexternal.port_service }}/admin-external/v1/contexts/{{item.Identifier}}"
#     method: PUT
#     client_cert: "{{ vitam_defaults.folder.root_path }}/tmp/access-external/keystore_vitam-admin-int.pem"
#     headers:
#       Connection: "keep-alive"
#       X-Tenant-Id: "{{ vitam_tenant_admin }}"
#     body: "{ \"$action\": [ { \"$set\": { \"Permissions\":  {{ item.Permissions }}  } } ] }"
#     body_format: "json"
#     validate_certs: false
#     status_code: 200,400 # 400 when no change
#   run_once: true # Limit as this upload is not related to tenants
#   with_items:
#     - "{{contextes.results}}"

# - name: remove temporary PEM certificate 
#   file:
#     path: "{{ vitam_defaults.folder.root_path }}/tmp/access-external/keystore_vitam-admin-int.pem"
#     state: absent

# - name: remove temporary pem file in ansible
#   local_action:
#     module: file
#     path:  "{{inventory_dir}}/keystores/client-external/keystore_vitam-admin-int.pem"
#     state: absent

- name: Copy the database scripts files
  template:
    src: "update-contexts.js.j2"
    dest: "{{ vitam_defaults.folder.root_path }}/app/mongos/update-contexts.js"
    owner: "{{ vitam_defaults.users.vitamdb }}"
    group: "{{ vitam_defaults.users.group }}"
    mode: "{{ vitam_defaults.folder.conf_permission }}"
  when:
    - "mongo_cluster_name == 'mongo-data'"

- name: update contexts tenant directive directly in mongo
  command: "mongo {{ ip_service }}:{{ mongodb.mongos_port }}/admin -u {{ mongodb[mongo_cluster_name].admin.user }} -p {{ mongodb[mongo_cluster_name].admin.password }} --quiet {{ vitam_defaults.folder.root_path }}/app/mongos/update-contexts.js"
  when: "mongo_cluster_name == 'mongo-data'"
  run_once: true

