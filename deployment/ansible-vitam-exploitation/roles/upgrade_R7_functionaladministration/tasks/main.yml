---
- name: Ensure service is started 
  service:
    name: "vitam-functional-administration"
    state: started

- name: "Wait until service functional-admin is up"
  wait_for:
      host: "{{hostvars[groups['hosts-functional-administration'][0]]['ip_admin']}}"
      port: "{{vitam.functional_administration.port_admin}}"
      state: "started"
      timeout: "{{ vitam_defaults.services.start_timeout }}"
  run_once: true

- set_fact:
    primary_site_accession_registers_migrate_uri: "http://{{hostvars[groups['hosts-functional-administration'][0]]['ip_admin']}}:{{vitam.functional_administration.port_admin}}/adminmanagement/v1/migration/accessionregister/migrate"
    secondary_site_accession_registers_purge_uri: "http://{{hostvars[groups['hosts-functional-administration'][0]]['ip_admin']}}:{{vitam.functional_administration.port_admin}}/adminmanagement/v1/migration/accessionregister/purge"

- name: functional-administration upgrade in primary site or purge in secondary site of Accession Register (Detail and Summary)
  uri:
    method: POST
    status_code: 202
    force_basic_auth: yes
    user: "{{ admin_basic_auth_user }}"
    password: "{{ admin_basic_auth_password }}"
    url: "{% if primary_site | lower == 'true' %}{{primary_site_accession_registers_migrate_uri}}{% else %}{{secondary_site_accession_registers_purge_uri}}{% endif %}"
    headers:
      Accept: application/json
  run_once: true

## curl -X HEAD -u adminUser:adminPassword    http://localhost:18004/adminmanagement/v1/migration/accessionregister/status
##- try until 200 not found

- name: check upgrade is finished
  command: "curl -I --silent -u {{ admin_basic_auth_user }}:{{ admin_basic_auth_password }} -k -X HEAD http://{{hostvars[groups['hosts-functional-administration'][0]]['ip_admin']}}:{{vitam.functional_administration.port_admin}}/adminmanagement/v1/migration/accessionregister/status"
  register: result
  until: result.stdout.find("200 OK") != -1
  retries: "{{ nb_retries }}"
  delay: 60
  run_once: true