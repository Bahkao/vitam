---
### HOSTS NETWORK VARS CHECK ###
- hosts: hosts
  roles:
    - checks

### consul servers
- hosts: hosts-consul-server
  any_errors_fatal: false
  roles:
    - vitam_check_port
  vars:
    vitam_component: "consul"
    hote: "{{ hostvars[inventory_hostname][consul.network] }}"
    check_port: "8500"
  gather_facts: no

### consul agents
- hosts: vitam
  any_errors_fatal: false
  roles:
    - { role: vitam_check_port, when: consul_disabled is not defined or consul_disabled |lower != 'true' }
  vars:
    vitam_component: "consul"
    hote: "{{ hostvars[inventory_hostname][consul.network] }}"
    check_port: "8301"
  gather_facts: no

### ES data
- hosts: hosts-elasticsearch-data
  any_errors_fatal: false
  roles:
    - vitam_check_port
  vars:
    vitam_component: "elasticsearch-data"
    hote: "{{ ip_service }}"
    check_port: "{{ elasticsearch.data.port_http }}"
  gather_facts: no

- hosts: hosts-elasticsearch-data
  any_errors_fatal: false
  roles:
    - vitam_check_port
  vars:
    vitam_component: "elasticsearch-data"
    hote: "{{ ip_service }}"
    check_port: "{{ elasticsearch.data.port_tcp }}"
  gather_facts: no

### ES log
- hosts: hosts-elasticsearch-log
  any_errors_fatal: false
  roles:
    - vitam_check_port
  vars:
    vitam_component: "elasticsearch-log"
    hote: "{{ ip_admin }}"
    check_port: "{{ elasticsearch.log.port_http }}"
  gather_facts: no

- hosts: hosts-elasticsearch-log
  any_errors_fatal: false
  roles:
    - vitam_check_port
  vars:
    vitam_component: "elasticsearch-log"
    hote: "{{ ip_admin }}"
    check_port: "{{ elasticsearch.log.port_tcp }}"
  gather_facts: no

### mongoDB data
- hosts: hosts-mongoc-data
  any_errors_fatal: false
  roles:
    - vitam_check_port
  vars:
    vitam_component: "mongoc"
    hote: "{{ ip_service }}"
    check_port: "{{ mongodb.mongoc_port }}"
  gather_facts: no

- hosts: hosts-mongod-data
  any_errors_fatal: false
  roles:
    - vitam_check_port
  vars:
    vitam_component: "mongod"
    hote: "{{ ip_service }}"
    check_port: "{{ mongodb.mongod_port }}"
  gather_facts: no

- hosts: hosts-mongos-data
  any_errors_fatal: false
  roles:
    - vitam_check_port
  vars:
    vitam_component: "mongos"
    hote: "{{ ip_service }}"
    check_port: "{{ mongodb.mongos_port }}"
  gather_facts: no

### mongoDB offer

- hosts: hosts-mongoc-offer
  any_errors_fatal: false
  roles:
    - vitam_check_port
  vars:
    vitam_component: "mongoc"
    hote: "{{ ip_service }}"
    check_port: "{{ mongodb.mongoc_port }}"
  gather_facts: no

- hosts: hosts-mongod-offer
  any_errors_fatal: false
  roles:
    - vitam_check_port
  vars:
    vitam_component: "mongod"
    hote: "{{ ip_service }}"
    check_port: "{{ mongodb.mongod_port }}"
  gather_facts: no

- hosts: hosts-mongos-offer
  any_errors_fatal: false
  roles:
    - vitam_check_port
  vars:
    vitam_component: "mongos"
    hote: "{{ ip_service }}"
    check_port: "{{ mongodb.mongos_port }}"
  gather_facts: no

### offer
- hosts: hosts-storage-offer-default
  any_errors_fatal: false
  roles:
    - { role: vitam_autotest, when: ( primary_site | lower == "true" ) or ( vitam_component in vitam_secondary_site_components ) }
  vars:
    vitam_component: "{{ vitam.storageofferdefault.vitam_component }}"
    hote: "{{ ip_admin }}"
    hote_service: "{{ ip_service }}"
    check_port: "{{ vitam.storageofferdefault.port_admin }}"
    check_port_service: "{{ vitam.storageofferdefault.port_service }}"
  gather_facts: no

### storage engine
- hosts: hosts-storage-engine
  any_errors_fatal: false
  roles:
    - { role: vitam_autotest, when: ( primary_site | lower == "true" ) or ( vitam_component in vitam_secondary_site_components ) }
  vars:
    vitam_component: "{{ vitam.storageengine.vitam_component }}"
    hote: "{{ ip_admin }}"
    hote_service: "{{ ip_service }}"
    check_port: "{{ vitam.storageengine.port_admin }}"
    check_port_service: "{{ vitam.storageengine.port_service }}"
  gather_facts: no

- hosts: hosts-storage-engine
  gather_facts: no
  any_errors_fatal: false
  roles:
    - { role: vitam_check_timer }
  vars: 
    vitam_timers_list: [ 
      ["vitam-storage-accesslog-backup.timer","hosts-storage-engine","in",""] # only on primary site with conditional
      ,["vitam-storage-log-backup.timer","hosts-storage-engine","in",""]
      ,["vitam-storage-log-traceability.timer","hosts-storage-engine","last",""]
    ]

### metadata
- hosts: hosts-metadata
  any_errors_fatal: false
  roles:
    - { role: vitam_autotest, when: ( primary_site | lower == "true" ) or ( vitam_component in vitam_secondary_site_components ) }
  vars:
    vitam_component: "{{ vitam.metadata.vitam_component }}"
    hote: "{{ ip_admin }}"
    hote_service: "{{ ip_service }}"
    check_port: "{{ vitam.metadata.port_admin }}"
    check_port_service: "{{ vitam.metadata.port_service }}"
  gather_facts: no

- hosts: hosts-metadata
  gather_facts: no
  any_errors_fatal: false
  roles:
    - { role: vitam_check_timer }
  vars: 
    vitam_timers_list: [ 
      ["vitam-metadata-store-graph.timer","hosts-metadata","last",""] # only on primary site with conditional
      ,[ "vitam-metadata-reconstruction.timer","hosts-metadata","","last"] # only on secundary site with conditional
    ]

### logbook
- hosts: hosts-logbook
  any_errors_fatal: false
  roles:
    - { role: vitam_autotest, when: ( primary_site | lower == "true" ) or ( vitam_component in vitam_secondary_site_components ) }
  vars:
    vitam_component: "{{ vitam.logbook.vitam_component }}"
    hote: "{{ ip_admin }}"
    hote_service: "{{ ip_service }}"
    check_port: "{{ vitam.logbook.port_admin }}"
    check_port_service: "{{ vitam.logbook.port_service }}"
  gather_facts: no

- hosts: hosts-logbook
  gather_facts: no
  any_errors_fatal: false
  roles:
    - { role: vitam_check_timer  }
  vars: 
    vitam_timers_list: [ 
      ["vitam-traceability-lfc-objectgroup.timer","hosts-logbook","last",""]
      ,["vitam-traceability-lfc-unit.timer","hosts-logbook","last",""]
      ,["vitam-traceability-operations.timer","hosts-logbook","last",""]
      ,["vitam-traceability-audit.timer","hosts-logbook","last",""]
      ,["vitam-logbook-reconstruction.timer","hosts-logbook","","last"]
    ]

### workspace
- hosts: hosts-workspace
  any_errors_fatal: false
  roles:
    - { role: vitam_autotest, when: ( primary_site | lower == "true" ) or ( vitam_component in vitam_secondary_site_components ) }
  vars:
    vitam_component: "{{ vitam.workspace.vitam_component }}"
    hote: "{{ ip_admin }}"
    hote_service: "{{ ip_service }}"
    check_port: "{{ vitam.workspace.port_admin }}"
    check_port_service: "{{ vitam.workspace.port_service }}"
  gather_facts: no

### functional administration
- hosts: hosts-functional-administration
  any_errors_fatal: false
  roles:
    - { role: vitam_autotest, when: ( primary_site | lower == "true" ) or ( vitam_component in vitam_secondary_site_components ) }
  vars:
    vitam_component: "{{ vitam.functional_administration.vitam_component }}"
    hote: "{{ ip_admin }}"
    hote_service: "{{ ip_service }}"
    check_port: "{{ vitam.functional_administration.port_admin }}"
    check_port_service: "{{ vitam.functional_administration.port_service }}"
  gather_facts: no

- hosts: hosts-functional-administration
  gather_facts: no
  any_errors_fatal: false
  roles:
    - { role: vitam_check_timer }
  vars: 
    vitam_timers_list: [ 
      ["vitam-functional-administration-reconstruction.timer","hosts-functional-administration","","last"] # must be stopped on primary site
      ,["vitam-functional-administration-accession-register-reconstruction.timer","hosts-functional-administration","","in"] # disabled on primary site
      ,["vitam-create-accession-register-symbolic.timer","hosts-functional-administration","last",""]
      ,["vitam-rule-management-audit.timer","hosts-functional-administration","last",""]
    ]


### security internal
- hosts: hosts-security-internal
  any_errors_fatal: false
  roles:
    - { role: vitam_autotest, when: ( primary_site | lower == "true" ) or ( vitam_component in vitam_secondary_site_components ) }
  vars:
    vitam_component: "{{ vitam.security_internal.vitam_component }}"
    hote: "{{ ip_admin }}"
    hote_service: "{{ ip_service }}"
    check_port: "{{ vitam.security_internal.port_admin }}"
    check_port_service: "{{ vitam.security_internal.port_service }}"
  gather_facts: no

### processing
- hosts: hosts-processing
  any_errors_fatal: false
  roles:
    - { role: vitam_autotest, when: ( primary_site | lower == "true" ) or ( vitam_component in vitam_secondary_site_components ) }
  vars:
    vitam_component: "{{ vitam.processing.vitam_component }}"
    hote: "{{ ip_admin }}"
    hote_service: "{{ ip_service }}"
    check_port: "{{ vitam.processing.port_admin }}"
    check_port_service: "{{ vitam.processing.port_service }}"
  gather_facts: no

### batch report
- hosts: hosts-batch-report
  any_errors_fatal: false
  roles:
    - { role: vitam_autotest, when: ( primary_site | lower == "true" ) or ( vitam_component in vitam_secondary_site_components ) }
  vars:
    vitam_component: "{{ vitam.batchreport.vitam_component }}"
    hote: "{{ ip_admin }}"
    hote_service: "{{ ip_service }}"
    check_port: "{{ vitam.batchreport.port_admin }}"
    check_port_service: "{{ vitam.batchreport.port_service }}"
  gather_facts: no

### worker
- hosts: hosts-worker
  any_errors_fatal: false
  roles:
    - { role: vitam_autotest, when: ( primary_site | lower == "true" ) or ( vitam_component in vitam_secondary_site_components ) }
  vars:
    vitam_component: "{{ vitam.worker.vitam_component }}"
    hote: "{{ ip_admin }}"
    hote_service: "{{ ip_service }}"
    check_port: "{{ vitam.worker.port_admin }}"
    check_port_service: "{{ vitam.worker.port_service }}"
  gather_facts: no

- hosts: hosts-worker
  any_errors_fatal: false
  roles:
    - vitam_check_port
  vars:
    vitam_component: "siegfried"
    hote: "localhost"
    check_port: "{{ siegfried.port }}"
  gather_facts: no

### access-internal
- hosts: hosts-access-internal
  any_errors_fatal: false
  roles:
    - { role: vitam_autotest, when: ( primary_site | lower == "true" ) or ( vitam_component in vitam_secondary_site_components ) }
  vars:
    vitam_component: "{{ vitam.accessinternal.vitam_component }}"
    hote: "{{ ip_admin }}"
    hote_service: "{{ ip_service }}"
    check_port: "{{ vitam.accessinternal.port_admin }}"
    check_port_service: "{{ vitam.accessinternal.port_service }}"
  gather_facts: no

### access-external
- hosts: hosts-access-external
  any_errors_fatal: false
  roles:
    - { role: vitam_autotest, when: ( primary_site | lower == "true" ) or ( vitam_component in vitam_secondary_site_components ) }
  vars:
    vitam_component: "{{ vitam.accessexternal.vitam_component }}"
    hote: "{{ ip_admin }}"
    hote_service: "{{ ip_service }}"
    check_port: "{{ vitam.accessexternal.port_admin }}"
    check_port_service: "{{ vitam.accessexternal.port_service }}"
  gather_facts: no

### Ingest-internal
- hosts: hosts-ingest-internal
  any_errors_fatal: false
  roles:
    - { role: vitam_autotest, when: ( primary_site | lower == "true" ) or ( vitam_component in vitam_secondary_site_components ) }
  vars:
    vitam_component: "{{ vitam.ingestinternal.vitam_component }}"
    hote: "{{ ip_admin }}"
    hote_service: "{{ ip_service }}"
    check_port: "{{ vitam.ingestinternal.port_admin }}"
    check_port_service: "{{ vitam.ingestinternal.port_service }}"
  gather_facts: no

### Ingest-external
- hosts: hosts-ingest-external
  any_errors_fatal: false
  roles:
    - { role: vitam_autotest, when: ( primary_site | lower == "true" ) or ( vitam_component in vitam_secondary_site_components ) }
  vars:
    vitam_component: "{{ vitam.ingestexternal.vitam_component }}"
    hote: "{{ ip_admin }}"
    hote_service: "{{ ip_service }}"
    check_port: "{{ vitam.ingestexternal.port_admin }}"
    check_port_service: "{{ vitam.ingestexternal.port_service }}"
  gather_facts: no

- hosts: hosts-ingest-external
  any_errors_fatal: false
  roles:
    - vitam_check_port
  vars:
    vitam_component: "siegfried"
    hote: "localhost"
    check_port: "{{ siegfried.port }}"
  gather_facts: no

### ihm-demo
- hosts: hosts-ihm-demo
  any_errors_fatal: false
  roles:
    - { role: vitam_autotest, when: ( primary_site | lower == "true" ) or ( vitam_component in vitam_secondary_site_components ) }
  vars:
    vitam_component: "{{ vitam.ihm_demo.vitam_component }}"
    hote: "{{ ip_admin }}"
    hote_service: "{{ ip_service }}"
    check_port: "{{ vitam.ihm_demo.port_admin }}"
    check_port_service: "{{ vitam.ihm_demo.port_service }}"
  gather_facts: no

### ihm-recette
- hosts: hosts-ihm-recette
  any_errors_fatal: false
  roles:
    - { role: vitam_autotest, when: ( primary_site | lower == "true" ) or ( vitam_component in vitam_secondary_site_components ) }
  vars:
    vitam_component: "{{ vitam.ihm_recette.vitam_component }}"
    hote: "{{ ip_admin }}"
    hote_service: "{{ ip_service }}"
    check_port: "{{ vitam.ihm_recette.port_admin }}"
    check_port_service: "{{ vitam.ihm_recette.port_service }}"
  gather_facts: no

### library
- hosts: hosts-library
  any_errors_fatal: false
  roles:
    - { role: vitam_autotest, when: ( primary_site | lower == "true" ) or ( vitam_component in vitam_secondary_site_components ) }
  vars:
    vitam_component: "{{ vitam.library.vitam_component }}"
    hote: "{{ ip_admin }}"
    hote_service: "{{ ip_service }}"
    check_port: "{{ vitam.library.port_admin }}"
    check_port_service: "{{ vitam.library.port_service }}"
  gather_facts: no


### Other checks 

# cerebro
- hosts: hosts-cerebro
  any_errors_fatal: false
  roles:
    - vitam_check_port
  vars:
    vitam_component: "cerebro"
    hote: "{{ ip_admin }}"
    check_port: "{{ cerebro.port }}"
  gather_facts: no


### checks for componentsthat SHOULD NOT BE on production environment

# elastic kibana interceptor
- hosts: hosts-kibana-data
  any_errors_fatal: false
  roles:
    - { role: vitam_autotest, when: ( primary_site | lower == "true" ) or ( vitam_component in vitam_secondary_site_components ) }
  vars:
    vitam_component: "{{ vitam.elastickibanainterceptor.vitam_component }}"
    hote: "{{ ip_admin }}"
    hote_service: "{{ ip_service }}"
    check_port: "{{ vitam.elastickibanainterceptor.port_admin }}"
    check_port_service: "{{ vitam.elastickibanainterceptor.port_service }}"
  gather_facts: no


# kibana data
- hosts: hosts-kibana-data
  any_errors_fatal: false
  roles:
    - vitam_check_port
  vars:
    vitam_component: "kibana (data)"
    hote: "{{ ip_admin }}"
    check_port: "{{ kibana.data.port }}"
  gather_facts: no

- hosts: hosts-kibana-log
  any_errors_fatal: false
  roles:
    - vitam_check_port
  vars:
    vitam_component: "kibana (log)"
    hote: "{{ ip_admin }}"
    check_port: "{{ kibana.log.port }}"
  gather_facts: no
