#### Packetbeat installation ###

- name: install libpcap (prerequisite for Packetbeat)
  package:
    name: libpcap
    state: latest
  when: (ansible_distribution == "CentOS" )

- name: install libpcap (prerequisite for Packetbeat)
  package:
    name: libpcap0.8
  when: (ansible_distribution == "Debian" )

# TODO Run packetbeat as a non-root user, using a specific user with full restrictions
- name: install Packetbeat
  package:
    name: packetbeat
    state: latest

- name: setup Packetbeat configuration file
  template:
    src: packetbeat.yml.j2
    dest: /etc/packetbeat/packetbeat.yml
    owner: root
    mode: 0644

- name: Fetch the packetbeat template file
  fetch:
    src: '/etc/packetbeat/packetbeat.template.json'
    dest: '/tmp/packetbeat/'
    flat: yes

- name: create packetbeat index
  when: "{{ (groups['hosts-kibana-log'] | length) > 0}}"
  uri:
    url: '{{elasticsearch.log|client_url }}_template/packetbeat'
    method: PUT
    body: "{{ lookup('file', '/tmp/packetbeat/packetbeat.template.json') }}"
    body_format: json
    status_code: 200,201

- name: Erase temporary packetbeat template file
  file:
   path: '/tmp/packetbeat'
   state: absent

- name: load kibana dashboards to .kibana elasticsearch index
  when: "{{ (groups['hosts-kibana-log'] | length) > 0}}"
  uri:
    url: '{{elasticsearch.log|client_url }}.kibana/{{item.split(".")[0] }}'
    method: PUT
    body: "{{ lookup('file', '{{ item }}') }}"
    body_format: json
    status_code: 200, 201
  with_lines: find {{ role_path }}/files/ -name '*.json' -type f | awk -F '/' '{print $(NF-1)"/"$NF}'

- name: add Packetbeat autostart at boot
  service:
    name: packetbeat
    enabled: yes
    state: started
