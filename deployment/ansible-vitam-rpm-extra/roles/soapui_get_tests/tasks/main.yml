---
# tasks file for soapui_get_tests
- name: install vitam-soapui
  yum:
    name: vitam-soapui
    state: latest

- name: ensure data.json is absent so we are sure we download latest version
  file:
    path: "{{vitam_folder_root}}/data/ihm-recette/data.json"
    state: absent
  when: ansible_virtualization_type != 'docker'

- name: get data.json from web directory
  uri:
    url: "{{ web_dir_soapui_tests }}/tests_soapui/data.json"
    dest: "{{vitam_folder_root}}/data/ihm-recette/data.json"
    method: GET
    validate_certs: no
    return_content: yes
    owner: "{{ vitam_user }}"
    group: "{{ vitam_group }}"
    mode: "{{ vitam_conf_permission}}"
  register: response
  environment:
    http_proxy: "{{ http_proxy_environnement }}"
  when: ansible_virtualization_type != 'docker'

- set_fact:
    json_deploy: "{{ response.content | from_json }}"
  when: (ansible_virtualization_type != 'docker') and (response is defined)

# TODO: Refactor this after the non regression tech design

- name: create subdir for soapUI tests
  with_items: "{{json_deploy.params}}"
  file:
    path:  "{{ vitam_folder_root }}/data/ihm-recette/{% if item.sipName is defined %}{{ item.sipName|dirname() }}{% elif item.ruleName is defined %}{{ item.ruleName|dirname() }}{% elif item.formatName is defined %}{{ item.formatName|dirname() }}{% endif %}"
    state: directory
    owner: "{{ vitam_user }}"
    group: "{{ vitam_group }}"
    mode: "{{ vitam_folder_permission}}"
  when: (ansible_virtualization_type != 'docker') and (response is defined)

- name: loop data.json and download files to {{vitam_folder_root}}/data/ihm-recette
  with_items: "{{json_deploy.params}}"
  uri:
    url: "{{ web_dir_soapui_tests }}/tests_soapui/{% if item.sipName is defined %}{{ item.sipName }}{% elif item.ruleName is defined %}{{ item.ruleName }}{% elif item.formatName is defined %}{{ item.formatName }}{% endif %}"
    dest: "{{ vitam_folder_root }}/data/ihm-recette/{% if item.sipName is defined %}{{ item.sipName }}{% elif item.ruleName is defined %}{{ item.ruleName }}{% elif item.formatName is defined %}{{ item.formatName }}{% endif %}"
    method: GET
    owner: "{{ vitam_user }}"
    group: "{{ vitam_group }}"
    mode: "{{ vitam_conf_permission}}"
  environment:
    http_proxy: "{{ http_proxy_environnement }}"
  ignore_errors: yes
  when: (ansible_virtualization_type != 'docker') and (response is defined)
