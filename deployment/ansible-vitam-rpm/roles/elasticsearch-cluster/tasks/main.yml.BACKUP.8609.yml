---
# KWA TODO: General remark : be consistent between the usage of {{cluster_name}} ane elasticsearch-{{groupe}} (the package name)

#### Compute variables ####

- name: Update elasticsearch memory value if empty and total memory < 64 Go
  set_fact:
    elasticsearch_memory: "{{ (ansible_memory_mb.real.total / 2) | int }}m"
  when:
    - ansible_memory_mb.real.total < 65536
    - elasticsearch_memory == ""

- name: Update elasticsearch memory value if empty and total memory >= 64 Go (don't allocate more than 32 Go RAM - official recommandation)
  set_fact:
    elasticsearch_memory: "32g"
  when:
    - ansible_memory_mb.real.total >= 65536
    - elasticsearch_memory == ""

#### Elasticsearch installation ####

# tasks file for elasticsearch-cluster

- name: install vitam-elasticsearch rpm
  yum:
    name: vitam-{{cluster_name}}
    state: latest

# OMA : désactivé car on est désormais en vitamdb
# - name: create elasticsearch home directory
#   file:
#     path: /home/elasticsearch
#     state: directory
#     owner: elasticsearch
#     mode: 0700

- name: ensure elasticsearch directories exist
  file:
    path: "/vitam/{{item}}/{{cluster_name}}"
    owner: vitamdb
    group: "{{ vitam_group }}"
    state: directory
    mode: "{{vitam_folder_permission}}"
  with_items:
    - conf
    - data
    - log
    - lib

- name: ensure elasticsearch sysconfig directory exist
  file:
    path: "/vitam/conf/{{cluster_name}}/sysconfig"
    owner: vitamdb
    group: "{{ vitam_group }}"
    state: directory
    mode: "{{vitam_folder_permission}}"

#### Elasticsearch configuration ####

# KWA Question : is it still necessary with the systemd service ?
- name: Configure limits max_open_files for Elasticsearch
  lineinfile:
    dest: /etc/security/limits.conf
    regexp: '^vitamdb     -    nofile    {{ elasticsearch_max_open_files }}'
    insertafter: EOF
    line: 'vitamdb     -    nofile    {{ elasticsearch_max_open_files }}'
  when: elasticsearch_max_open_files is defined
  notify: restart elasticsearch

- name: apply elasticsearch configuration yml 
  template:
    src: "elasticsearch.{{groupe}}.yml.j2"
    dest: "{{elasticsearch_conf_dir}}/elasticsearch.yml"
    owner: vitamdb
    group: "{{ vitam_group }}"
    mode: "{{vitam_conf_permission}}"

- name: apply logging configuration yml 
  template:
    src: "logging.yml.j2"
    dest: "{{elasticsearch_conf_dir}}/logging.yml"
    owner: vitamdb
    group: "{{ vitam_group }}"
    mode: "{{vitam_conf_permission}}"

- name: apply elasticsearch sysconfig default 
  template:
    src: "elasticsearch.j2"
    dest: "{{elasticsearch_conf_dir}}/sysconfig/elasticsearch"
    owner: vitamdb
    group: "{{ vitam_group }}"
    mode: "{{vitam_conf_permission}}"


#### Elasticsearch plugins ####

<<<<<<< HEAD
# OMA: remplacé par un rpm
# - name : get HEAD plug-in for Elasticsearch
#   become_user: elasticsearch
#   command: /usr/share/elasticsearch/bin/plugin install -DproxyPort={{proxy_port}} -DproxyHost={{proxy_host}} mobz/elasticsearch-head
#   args:
#     chdir: /usr/share/elasticsearch/bin 
#     creates: /usr/share/elasticsearch/plugins/head
#   environment:
#     http_proxy: http://{{ https_reverse_proxy }}
#     https_proxy: https://{{ https_reverse_proxy }}

- name: install vitam-elasticsearch-head rpm
  yum:
    name: vitam-elasticsearch-head
    state: latest

# OMA : deprecated as it is now a rpm package
# - name: install unzip
#   yum:
#     name: unzip
#     state: latest

# - name: add kopf plugin (zip src)
#   unarchive:
#     src: kopf.zip
#     dest: /usr/share/elasticsearch/plugins/
#     owner: elasticsearch
#     group: elasticsearch
#     mode: 0755

- name: install vitam-elasticsearch-kopf rpm
  yum:
    name: vitam-elasticsearch-kopf
    state: latest

=======
# TODO : à remplacer par autre chose pour ne pas partir sur internet ! (rpm packaging + package)
- name : get HEAD plug-in for Elasticsearch
  become_user: elasticsearch
  command: /usr/share/elasticsearch/bin/plugin install -DproxyPort={{proxy_port}} -DproxyHost={{proxy_host}} mobz/elasticsearch-head
  args:
    chdir: /usr/share/elasticsearch/bin 
    creates: /usr/share/elasticsearch/plugins/head
  environment:
    http_proxy: http://{{ https_reverse_proxy }}
    https_proxy: https://{{ https_reverse_proxy }}
 
# OMA : deprecated as it is now a rpm package
# - name: install unzip
#   yum:
#     name: unzip
#     state: latest

# - name: add kopf plugin (zip src)
#   unarchive:
#     src: kopf.zip
#     dest: /usr/share/elasticsearch/plugins/
#     owner: elasticsearch
#     group: elasticsearch
#     mode: 0755

- name: install vitam-elasticsearch-kopf rpm
  yum:
    name: vitam-elasticsearch-kopf
    state: latest

>>>>>>> changed kopf install method : now rpm
# FIXME : won't work when there is no reverse-proxy...
# - name: configure kopf
#   replace: 
#       dest: /usr/share/elasticsearch/plugins/kopf/_site/kopf_external_settings.json
#       regexp: '^.*"elasticsearch_root_path":.*$'
#       replace: "    \"elasticsearch_root_path\": \"/elasticsearch-{{groupe}}\","


#### Elasticsearch systemd service configuration ####

# Cf. https://serverfault.com/questions/546966/whats-removing-stuff-from-var-run-at-reboots-from-a-fedora-machine
# Cf. https://www.freedesktop.org/software/systemd/man/tmpfiles.d.html
- name: add elasticsearch-{{groupe}}.conf in tempfile.d 
  template:
    src: "tempfile.d-elasticsearch.conf.j2"
    dest: "/usr/lib/tmpfiles.d/elasticsearch-{{groupe}}.conf"
    owner: root
    group: root
    mode: 0644
  notify: create systemd tmpfiles

# Ensure that at least the "create systemd tmpfiles" handlers did run
- meta: flush_handlers

# KWA Note : another file should be added here :
# /usr/lib/sysctl.d/elasticsearch.conf
# with content : 
# vm.max_map_count=262144

- name: disable standard Easticsearch service
  service:
    name: elasticsearch
    state: stopped
    enabled: no

- name: add ElasticSearch-{{groupe}} autostart at boot
  service:
    name: "vitam-elasticsearch-{{groupe}}"
    enabled: yes
    state: restarted

#### Consul service declaration ####

# TODO: ideally get the consul configuration path in a global configuration variable
- name: Ensure consul config dir is OK
  file:
    path: "{{vitam_folder_root}}/conf/consul"
    state: directory
    owner: "{{ vitam_user }}"
    group: "{{ vitam_group }}"

- name: Deploy consul agent service declaration
  template:
    src: "service-componentid.json.j2"
    dest: "{{vitam_folder_root}}/conf/consul/service-{{ groupe }}.json"
    owner: "{{ vitam_user }}"
    group: "{{ vitam_group }}"
    mode: "{{vitam_conf_permission}}"

- name: Reload consul agent configuration
  service:
    name: vitam-consul
    state: reloaded

