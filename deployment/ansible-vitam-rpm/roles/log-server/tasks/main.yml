---
# tasks file for log-server
- name: install vitam user for /vitam browser
  yum:
    name=vitam-user-vitam
    state=latest

#### Kibana installation ####

- name: install kibana rpm from repo
  yum:
    name: kibana
    state: latest

- name: systemctl reload-daemon # see https://www.elastic.co/guide/en/elasticsearch/reference/current/setup-repositories.html
  command: systemctl daemon-reload

- name: add kibana autostart at boot
  service:
    name: kibana
    enabled: yes
    state: started

- name: configure Kibana connection to elasticsearch
  replace:
    dest: /opt/kibana/config/kibana.yml 
    regexp: '^# elasticsearch\.url:.*$'
    replace: "elasticsearch.url: \"http://{{elasticsearch_log_host}}:{{elasticsearch_log_http_port}}\""


#### Logstash installation ####

- name: install java (prerequisite for other components)
  yum:
    name=java-1.8.0
    state=latest

- name: install logstash rpm from repo
  yum:
    name: logstash-all-plugins
    state: latest

- name: ensure logstash directories exist
  file:
    path: "/vitam/{{item}}/logstash"
    owner: logstash
    state: directory
    mode: "{{vitam_folder_permission}}"
  with_items:
    - data
    - log
    - conf
    - lib

- name: ensure json conf extra  directory exists
  file:
    path: "{{logstash_confextra_dir}}"
    owner: logstash
    state: directory
    mode: "{{vitam_folder_permission}}"

# - name: configure Kibana connection to elasticsearch
#   replace:
#     dest: /opt/kibana/config/kibana.yml 
#     regexp: '^# elasticsearch\.url:.*$'
#     replace: "elasticsearch.url: \"http://{{elasticsearch_log_host}}:{{elasticsearch_log_http_port}}\""
#   notify:
#     - restart kibana


- name: create conf subdir for logstash (useless)
  file:
    path: /opt/logstash/conf
    state: directory
    owner: logstash
    mode: 0755

- name: copy default logstash file (preferIPv4)
  copy:
    src: logstash
    dest: /etc/default/logstash
    owner: root
    mode: 0644

- name: Update heap for logstash (total mem/4)
  replace: 
      dest: /etc/sysconfig/logstash
      regexp: '^#LS_HEAP_SIZE=.*$'
      replace: 'LS_HEAP_SIZE="{{ (ansible_memory_mb.real.total / 4) | int }}m"' 
  register: logstash_updated

- name: Define log file for logstash
  replace: 
      dest: /etc/sysconfig/logstash
      regexp: '^#LS_LOG_FILE=.*$'
      replace: 'LS_LOG_FILE="{{logstash_log_dir}}/logstash.log"' 
  register: logstash_updated

- name: Define gc log file for logstash
  replace: 
      dest: /etc/sysconfig/logstash
      regexp: '^#LS_GC_LOG_FILE=.*$'
      replace: 'LS_GC_LOG_FILE="{{logstash_log_dir}}/gc.log"' 
  register: logstash_updated

- name: Implement the Vitam GC log standard fot logstash
  replace: 
      dest: /etc/sysconfig/logstash
      regexp: '^#LS_JAVA_OPTS=.*$'
      replace: 'LS_JAVA_OPTS="-XX:+UseGCLogFileRotation -XX:NumberOfGCLogFiles=10 -XX:GCLogFileSize=10M -XX:+PrintGCDetails -XX:+PrintGCApplicationStoppedTime"'
  register: logstash_updated

- name: Define config dir for logstash
  replace: 
      dest: /etc/sysconfig/logstash
      regexp: '^#LS_CONF_DIR=.*$'
      replace: 'LS_CONF_DIR="{{logstash_conf_dir}}"' 
  register: logstash_updated

- name: configure logstash parser
  template:
    src: "{{item}}.j2"
    dest: "{{logstash_conf_dir}}/{{item}}"
    owner: logstash
    mode: "{{ vitam_conf_permission }}"
  with_items:
    - "logstash-vitam.conf"


- name: add json extra conf
  template:
    src: "{{item}}.j2"
    dest: "{{logstash_confextra_dir}}/{{item}}"
    owner: logstash
  with_items:
    - "elasticsearch-template.json"

- name: restart logstash
  service:
    name: logstash
    state: restarted


#### Consul service declaration ####

# TODO: ideally get the consul configuration path in a global configuration variable
- name: Ensure consul config dir is OK
  file:
    path: "{{vitam_folder_root}}/conf/consul"
    state: directory
    owner: "{{ vitam_user }}"
    group: "{{ vitam_group }}"

- name: Deploy consul agent service declaration
  template:
    src: "service-{{ item }}.json.j2"
    dest: "{{vitam_folder_root}}/conf/consul/service-{{ item }}.json"
    owner: "{{ vitam_user }}"
    group: "{{ vitam_group }}"
    mode: "{{vitam_conf_permission}}"
  with_items:
    - kibana
    - logstash

- name: Reload consul agent configuration
  service:
    name: vitam-consul
    state: reloaded




# - name: create symbolic link for parser
#   file: 
#     src: /opt/logstash/conf/logstash-vitam.conf
#     dest: /etc/logstash/conf.d/logstash-vitam.conf
#     state: link
#   notify:
#     - restart logstash


#### Curator ####
# Disabled when docker detected (local deployement)
# todo: check if localhost instead of ansible_virtualization_type != docker

- name: remove PyYAML.x86_64 as incompatible with Curator
  yum:
    name: PyYAML.x86_64
    state: absent
  when: ansible_virtualization_type != 'docker'

- name: install Curator package
  yum:
    name: python-elasticsearch-curator
    state: latest
  when: ansible_virtualization_type != 'docker'

- name: ensure Curator directories exist
  file:
    path: "/vitam/{{item}}/curator"
    owner: root
    state: directory
    mode: 0755
  with_items:
    - data
    - log
    - conf
    - lib
  when: ansible_virtualization_type != 'docker'

- name: apply configuration files for curator
  template:
    src: "{{item}}.j2"
    dest: "{{curator_conf_dir}}/{{item}}"
    owner: logstash
  with_items:
    - "curator.yml"
    - "delete_index.yml"
  when: ansible_virtualization_type != 'docker'

- name: create root crontab entry for curator
  cron:
    name="curator purge"
    minute="50"
    hour="6"
    user="root"
    job="/usr/bin/curator --config {{curator_conf_dir}}/curator.yml {{curator_conf_dir}}/delete_index.yml"
  when: ansible_virtualization_type != 'docker'
