---
# tasks file for log-server
- name: install java (prerequisite for other components)
  yum:
    name=java-1.8.0
    state=latest

# - name: import ElasticSearch key
#   rpm_key: 
#     state=present 
#     key=https://packages.elastic.co/GPG-KEY-elasticsearch
#     validate_certs=no
#   environment:
#     https_proxy: https://{{https_reverse_proxy}}

# - name: copy elastic repository file
#   copy:
#     src=elastic.repo
#     dest=/etc/yum.repos.d/elastic.repo
#     owner=root
#     mode=0644


- name: install elasticsearch rpm
  yum:
    name: elasticsearch
    state: latest

- name: create elasticsearch home directory
  file:
    path: /home/elasticsearch
    state: directory
    owner: elasticsearch
    mode: 0700

- name: ensure elasticsearch directories exist
  file:
    path: "/vitam/{{item}}/elasticsearch"
    owner: elasticsearch
    state: directory
    mode: 0755
  with_items:
    - data
    - log
    - conf
    - lib



- name: systemctl reload-daemon # see https://www.elastic.co/guide/en/elasticsearch/reference/current/setup-repositories.html
  command: systemctl daemon-reload

- name: add ElasticSearch autostart at boot
  service:
    name: elasticsearch
    enabled: yes
    state: started

# Descendre plug-in HEAD

# Kibana
# - name: copy kibana repository file
#   copy:
#     src=kibana.repo
#     dest=/etc/yum.repos.d/kibana.repo
#     owner=root
#     mode=0644


- name: install kibana rpm
  yum:
    name: kibana
    state: latest

- name: systemctl reload-daemon # see https://www.elastic.co/guide/en/elasticsearch/reference/current/setup-repositories.html
  command: systemctl daemon-reload

- name: add kibana autostart at boot
  service:
    name: kibana
    enabled: yes
    state: started

# Logstash
# - name: copy logstash repository file
#   copy:
#     src=logstash.repo
#     dest=/etc/yum.repos.d/logstash.repo
#     owner=root
#     mode=0644


# - name: install logstash rpm
#   yum:
#     name: logstash
#     state: latest

- name: install logstash rpm from repo
  yum:
    name: logstash-all-plugins
    state: latest

- name: ensure logstash directories exist
  file:
    path: "/vitam/{{item}}/logstash"
    owner: logstash
    state: directory
    mode: 0755
  with_items:
    - data
    - log
    - conf
    - lib

- name: ensure json conf extra  directory exists
  file:
    path: "{{logstash_confextra_dir}}"
    owner: logstash
    state: directory
    mode: 0755


# Post-install configuration
- name: Configure limits max_open_files for Elasticsearch
  lineinfile:
    dest=/etc/security/limits.conf
    regexp='^{{ elasticsearch_user }}     -    nofile    {{ elasticsearch_max_open_files }}'
    insertafter=EOF
    line='{{ elasticsearch_user }}     -    nofile    {{ elasticsearch_max_open_files }}'
  when: elasticsearch_max_open_files is defined
  notify: restart elasticsearch


- name: change IP address for elasticsearch listening
  replace: 
    dest: /etc/elasticsearch/elasticsearch.yml 
    regexp: '^# network.host:.*$' 
    replace: "network.host: {{vitam_log_host}}"
  notify:
    - restart elasticsearch

- name: change port for elasticsearch listening
  replace: 
    dest: /etc/elasticsearch/elasticsearch.yml 
    regexp: '^# network.port:.*$'
    replace: 'network.port: {{elasticsearch_port}}'
  notify:
    - restart elasticsearch

- name: change port for elasticsearch listening
  replace: 
    dest: /etc/elasticsearch/elasticsearch.yml 
    regexp: '^# http\.port:.*$'
    replace: 'http.port: {{elasticsearch_port}}'
  notify:
    - restart elasticsearch

- name: change data storage for elasticsearch
  replace: 
    dest: /etc/elasticsearch/elasticsearch.yml 
    regexp: '^# path.data:.*$'
    replace: 'path.data: {{elasticsearch_data_dir}}'
  notify:
    - restart elasticsearch

- name: change log for elasticsearch
  replace: 
    dest: /etc/elasticsearch/elasticsearch.yml 
    regexp: '^# path.logs:.*$'
    replace: 'path.logs: {{elasticsearch_log_dir}}'
  notify:
    - restart elasticsearch

- name: change cluster name for elasticsearch
  replace: 
    dest: /etc/elasticsearch/elasticsearch.yml 
    regexp: '^# cluster.name:.*$'
    replace: 'cluster.name: {{cluster_name}}'
  notify:
    - restart elasticsearch

# OMA : copied from https://hobo.house/2016/04/08/automate-elk-stack-and-clients-with-ansible/
- name: Define CONF_DIR
  replace: 
      dest: /etc/sysconfig/elasticsearch
      regexp: '^#CONF_DIR=.*$'
      replace: 'CONF_DIR=/etc/elasticsearch'
  register: elasticsearch_updated
  notify:
    - restart elasticsearch

# - name: Define DATA_DIR
#   replace: 
#       dest: /etc/sysconfig/elasticsearch
#       regexp: '^#DATA_DIR=.*$'
#       replace: 'DATA_DIR={{elasticsearch_data_dir}}'
#   register: elasticsearch_updated
#   notify:
#     - restart elasticsearch

# - name: Define LOG_DIR
#   replace: 
#       dest: /etc/sysconfig/elasticsearch
#       regexp: '^#LOG_DIR=.*$'
#       replace: 'LOG_DIR={{elasticsearch_log_dir}}'
#   register: elasticsearch_updated
#   notify:
#     - restart elasticsearch

- name: Apply heapsize tuning for systems with greater than 64G memory
  replace: 
      dest: /etc/sysconfig/elasticsearch
      regexp: '^#ES_HEAP_SIZE=.*$'
      replace: 'ES_HEAP_SIZE=32g'
  when: ansible_memory_mb.real.total|int >= 65536
  register: elasticsearch_updated
  notify:
    - restart elasticsearch


- name: Apply heapsize tuning for systems with greater than 64G memory
  replace: 
      dest: /etc/sysconfig/elasticsearch
      regexp: '^#ES_HEAP_SIZE=.*$'
      replace: 'ES_HEAP_SIZE=32g'
  when: ansible_memory_mb.real.total|int >= 65536
  register: elasticsearch_updated
  notify:
    - restart elasticsearch
# OMA : copied from https://hobo.house/2016/04/08/automate-elk-stack-and-clients-with-ansible/
- name: Update elasticsearch startup with heap size at half the memory
  replace: 
      dest: /etc/sysconfig/elasticsearch
      regexp: '^#ES_HEAP_SIZE=.*$'
      replace: 'ES_HEAP_SIZE={{ (ansible_memory_mb.real.total / 2) | int }}m' 
  when: ansible_memory_mb.real.total|int < 65536
  register: elasticsearch_updated
  notify:
    - restart elasticsearch

- name: add directives in elasticsearch
  blockinfile:
    backup: yes
    dest: /etc/elasticsearch/elasticsearch.yml
    marker: "# {mark} ANSIBLE MANAGED BLOCK"
    block: |
      index.number_of_replicas: 0
      index.refresh_interval: 10s


# OMA: prÃ©voir pour Easticsaerch aussi l'arborescence des data, log et work_dir ???

# Dans elasticsearch.yml
# indices.memory.index_buffer_size: 30%
# index.translog.flush_threshold_ops: 50000
# index.refresh_interval: 30s
# refresh_interval_in_millis: 30000
# threadpool.search.queue_size: 12000


- name : get HEAD plug-in for Elasticsearch
  become_user: elasticsearch
  command: /usr/share/elasticsearch/bin/plugin install -DproxyPort={{proxy_port}} -DproxyHost={{proxy_host}} mobz/elasticsearch-head
  args:
    chdir: /usr/share/elasticsearch/bin 
    creates: /usr/share/elasticsearch/plugins/head
  environment:
    http_proxy: http://{{ https_reverse_proxy }}
    https_proxy: https://{{ https_reverse_proxy }}
  notify:
    - restart elasticsearch




# - name : get ALL logstash plug-in 
#   get_url:
# #    url: https://download.elastic.co/logstash/logstash/packages/centos/logstash-all-plugins-2.3.4-1.noarch.rpm
# #    dest: /tmp/logstash-all-plugins-2.3.4-1.noarch.rpm
#     url:  https://download.elastic.co/logstash/logstash/logstash-all-plugins-2.3.4.tar.gz
#     dest: /tmp/logstash-all-plugins-2.3.4-1.noarch.tar.gz
#     mode: 0755
#     use_proxy: yes
#     validate_certs: no
#   environment:
#     http_proxy: http://{{ https_reverse_proxy }}
#     https_proxy: https://{{ https_reverse_proxy }}
#   args:
#     creates: /tmp/logstash-all-plugins-2.3.4-1.noarch.tar.gz

# - name: install downloaded packages
#  command: tar xvzf /tmp/logstash-all-plugins-2.3.4-1.noarch.tar.gz
#   args:
#     chdir: /opt
#     creates: /opt/logstash-2.3.4

# - name: rename historic logstash
#   command: mv /opt/logstash /opt/logstash.packages
#   args:
#     creates: /opt/logstash.packages

# - name: create symbolic link on new version
#   command: ln -sfn /opt/logstash-2.3.4 /opt/logstash

# - name: copy default file for Kibana
#   copy:
#     src: kibana
#     dest: /etc/default/kibana
#     mode: 0644
#     owner: root

- name: configure Kibana connection to elasticsearch
  replace:
    dest: /opt/kibana/config/kibana.yml 
    regexp: '^# elasticsearch\.url:.*$'
    replace: "elasticsearch.url: \"http://{{vitam_log_host}}:{{elasticsearch_port}}\""
  notify:
    - restart kibana

# OMA : pour changer le port Kibana, modifier /opt/kibana/config/kibana.yml ligne # server.port: 5601

# - name: set up cluster name for elasticsearch
#    lineinfile: 'dest=/opt/elasticsearch/config/elasticsearch.yml state=present regexp="^" insertafter="EOF" line="cluster.name: {{ ansible_eth0["ipv4"]["address"] }}"'
# - name: set up node name for elasticsearch
#    lineinfile: 'dest=/opt/elasticsearch/config/elasticsearch.yml state=present regexp="^" insertafter="EOF" line="node.name: {{ ansible_eth0["ipv4"]["address"] }}"'

- name: create conf subdir for logstash
  file:
    path: /opt/logstash/conf
    state: directory
    owner: logstash
    mode: 0755

- name: copy default logstash file (preferIPv4)
  copy:
    src: logstash
    dest: /etc/default/logstash
    owner: root
    mode: 0644

- name: Update heap for logstash
  replace: 
      dest: /etc/sysconfig/logstash
      regexp: '^#LS_HEAP_SIZE=.*$'
      replace: 'LS_HEAP_SIZE="{{ (ansible_memory_mb.real.total / 4) | int }}m"' 
  register: logstash_updated

- name: Define log file for logstash
  replace: 
      dest: /etc/sysconfig/logstash
      regexp: '^#LS_LOG_FILE=.*$'
      replace: 'LS_LOG_FILE="{{logstash_log_dir}}/logstash.log"' 
  register: logstash_updated

- name: Define gc log file for logstash
  replace: 
      dest: /etc/sysconfig/logstash
      regexp: '^#LS_GC_LOG_FILE=.*$'
      replace: 'LS_GC_LOG_FILE="{{logstash_log_dir}}/gc.log"' 
  register: logstash_updated

- name: Define config dir for logstash
  replace: 
      dest: /etc/sysconfig/logstash
      regexp: '^#LS_CONF_DIR=.*$'
      replace: 'LS_CONF_DIR="{{logstash_conf_dir}}"' 
  register: logstash_updated

- name: configure Kibana connection to elasticsearch
  replace:
    dest: /opt/kibana/config/kibana.yml 
    regexp: '^# elasticsearch\.url:.*$'
    replace: "elasticsearch.url: \"http://{{vitam_log_host}}:{{elasticsearch_port}}\""


- name: configure logstash parser
  template:
    src: "{{item}}.j2"
    dest: "{{logstash_conf_dir}}/{{item}}"
    owner: logstash
  with_items:
    - "logstash-vitam.conf"


- name: add json extra conf
  template:
    src: "{{item}}.j2"
    dest: "{{logstash_confextra_dir}}/{{item}}"
    owner: logstash
  with_items:
    - "elasticsearch-template.json"
  notify:
    - restart logstash

- name: restart logstash
  service:
    name: logstash
    state: restarted

# - name: create symbolic link for parser
#   file: 
#     src: /opt/logstash/conf/logstash-vitam.conf
#     dest: /etc/logstash/conf.d/logstash-vitam.conf
#     state: link
#   notify:
#     - restart logstash

