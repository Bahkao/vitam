
// Create the collections
db.createCollection("Unit")
db.createCollection("ObjectGroup")
db.createCollection("LogbookOperation")
db.createCollection("LogbookLifeCycleUnit")
db.createCollection("LogbookLifeCycleObjectGroup")
db.createCollection("AccessionRegisterDetail")
db.createCollection("AccessionRegisterSummary")
db.createCollection("FileFormat")
db.createCollection("FileRules")

// Create unique indexes
db.FileFormat.createIndex(
    { "PUID" : 1 },
    { unique: true }
)
db.AccessionRegisterSummary.createIndex(
    { "_tenant" : 1 , "OriginatingAgency" : 1 },
    { unique: true }
)
db.FileRules.createIndex(
    { "_tenant" : 1 , "RuleId" : 1 },
    { unique: true }
)

// Create simple indexes
// A single collection can have no more than 64 indexes.

db.Unit.createIndex( { "_up" : 1 } )
db.Unit.createIndex( { "_og" : 1 } )
db.Unit.createIndex( { "_us" : 1 } )
db.Unit.createIndex( { "_uds" : 1 } )
db.Unit.createIndex( { "_min" : 1 } )
db.Unit.createIndex( { "_max" : 1 } )
db.Unit.createIndex( { "_ops" : 1 } )
db.Unit.createIndex( { "_type" : 1 } )
db.Unit.createIndex( { "_dom" : 1 } )
db.Unit.createIndex( { "_mgt.StorageRule.Rules.Rule" : 1 } )
db.Unit.createIndex( { "_mgt.StorageRule.Rules._end" : 1 } )
db.Unit.createIndex( { "_mgt.AppraisalRule.Rules.Rule" : 1 } )
db.Unit.createIndex( { "_mgt.AppraisalRule.Rules._end" : 1 } )
db.Unit.createIndex( { "_mgt.AccessRule.Rules.Rule" : 1 } )
db.Unit.createIndex( { "_mgt.AccessRule.Rules._end" : 1 } )
db.Unit.createIndex( { "_mgt.DisseminationRule.Rules.Rule" : 1 } )
db.Unit.createIndex( { "_mgt.DisseminationRule.Rules._end" : 1 } )
db.Unit.createIndex( { "_mgt.ClassificationRule.Rules.Rule" : 1 } )
db.Unit.createIndex( { "_mgt.ClassificationRule.Rules._end" : 1 } )
db.Unit.createIndex( { "_mgt.ReuseRule.Rules.Rule" : 1 } )
db.Unit.createIndex( { "_mgt.ReuseRule.Rules._end" : 1 } )

db.ObjectGroup.createIndex( { "_tenantId" : 1 } )
db.ObjectGroup.createIndex( { "_up" : 1 } )
db.ObjectGroup.createIndex( { "_ops" : 1 } )
db.ObjectGroup.createIndex( { "_type" : 1 } )
db.ObjectGroup.createIndex( { "_qualifiers.PhysicalMaster.versions._id" : 1 } )
db.ObjectGroup.createIndex( { "_qualifiers.BinaryMaster.versions._id" : 1 } )
db.ObjectGroup.createIndex( { "_qualifiers.BinaryMaster.versions.FormatIdentification.FormatId" : 1 } )
db.ObjectGroup.createIndex( { "_qualifiers.BinaryMaster.versions.MessageDigest" : 1 , "_qualifiers.BinaryMaster.versions.Algorithm" : 1 } )
db.ObjectGroup.createIndex( { "_qualifiers.Dissemination.versions._id" : 1 } )
db.ObjectGroup.createIndex( { "_qualifiers.Dissemination.versions.FormatIdentification.FormatId" : 1 } )
db.ObjectGroup.createIndex( { "_qualifiers.Dissemination.versions.MessageDigest" : 1 , "_qualifiers.Dissemination.versions.Algorithm" : 1 } )
db.ObjectGroup.createIndex( { "_qualifiers.Thumbnail.versions._id" : 1 } )
db.ObjectGroup.createIndex( { "_qualifiers.Thumbnail.versions.FormatIdentification.FormatId" : 1 } )
db.ObjectGroup.createIndex( { "_qualifiers.Thumbnail.versions.MessageDigest" : 1 , "_qualifiers.Thumbnail.versions.Algorithm" : 1 } )
db.ObjectGroup.createIndex( { "_qualifiers.TextContent.versions._id" : 1 } )
db.ObjectGroup.createIndex( { "_qualifiers.TextContent.versions.FormatIdentification.FormatId" : 1 } )
db.ObjectGroup.createIndex( { "_qualifiers.TextContent.versions.MessageDigest" : 1 , "_qualifiers.TextContent.versions.Algorithm" : 1 } )

db.LogbookOperation.createIndex( { "_tenant" : 1 } )
db.LogbookOperation.createIndex( { "evType" : 1 } )
db.LogbookOperation.createIndex( { "evTypeProc" : 1 } )
db.LogbookOperation.createIndex( { "events.evType" : 1 } )
db.LogbookOperation.createIndex( { "events.outcome" : 1 } )
db.LogbookOperation.createIndex( { "outcome" : 1 } )

db.LogbookLifeCycleUnit.createIndex( { "_tenant" : 1 } )
db.LogbookLifeCycleUnit.createIndex( { "evType" : 1 } )
db.LogbookLifeCycleUnit.createIndex( { "evIdProc" : 1 } )
db.LogbookLifeCycleUnit.createIndex( { "evTypeProc" : 1 } )
db.LogbookLifeCycleUnit.createIndex( { "outcome" : 1 } )
db.LogbookLifeCycleUnit.createIndex( { "events.evType" : 1 } )
db.LogbookLifeCycleUnit.createIndex( { "events.outcome" : 1 } )
db.LogbookLifeCycleUnit.createIndex( { "event.evIdProc" : 1 } )

db.LogbookLifeCycleObjectGroup.createIndex( { "_tenant" : 1 } )
db.LogbookLifeCycleObjectGroup.createIndex( { "evType" : 1 } )
db.LogbookLifeCycleObjectGroup.createIndex( { "evIdProc" : 1 } )
db.LogbookLifeCycleObjectGroup.createIndex( { "evTypeProc" : 1 } )
db.LogbookLifeCycleObjectGroup.createIndex( { "outcome" : 1 } )
db.LogbookLifeCycleObjectGroup.createIndex( { "events.evType" : 1 } )
db.LogbookLifeCycleObjectGroup.createIndex( { "events.outcome" : 1 } )
db.LogbookLifeCycleObjectGroup.createIndex( { "event.evIdProc" : 1 } )

db.FileRules.createIndex( { "_tenant" : 1 } )
db.FileRules.createIndex( { "RuleId" : 1 } )
db.FileRules.createIndex( { "RuleType" : 1 } )

db.AccessionRegisterSummary.createIndex( { "_tenant" : 1 } )

db.AccessionRegisterDetail.createIndex( { "_tenant" : 1 } )
db.AccessionRegisterDetail.createIndex( { "OriginatingAgency" : 1 } )
db.AccessionRegisterDetail.createIndex( { "SubmissionAgency" : 1 } )

// Create admin user
db.createUser(
    {
        user: "{{mongoAdminUser}}",
        pwd: "{{mongoAdminPassword}}",
        roles: [ { role: "dbAdmin", db: "Vitam" } ]
    }
)

// Create metadata user
db.createUser(
    {
        user: "{{mongoMetadataUser}}",
        pwd: "{{mongoMetadataPassword}}",
        roles: [
            { role: "readWrite", db: "Vitam" }
        ]
    }
)

// Create logbook user
db.createUser(
    {
        user: "{{mongoLogbookUser}}",
        pwd: "{{mongoLogbookPassword}}",
        roles: [
            { role: "readWrite", db: "Vitam" }
        ]
    }
)

// Create functional-admin user
db.createUser(
    {
        user: "{{mongoFunctionalAdminUser}}",
        pwd: "{{mongoFunctionalAdminPassword}}",
        roles: [
            { role: "readWrite", db: "Vitam" }
        ]
    }
)

// Create worker user
db.createUser(
    {
        user: "{{mongoWorkerUser}}",
        pwd: "{{mongoWorkerPassword}}",
        roles: [
            { role: "readWrite", db: "Vitam" }
        ]
    }
)
