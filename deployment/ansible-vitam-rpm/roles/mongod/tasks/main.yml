---
- name: Check that the directories exists (must be removed when the RPM plugin will be patched)
  file: 
    path: "{{vitam_folder_root}}/{{ item }}/mongod"
    state: directory
    owner: "{{ mongo_user }}"
    group: vitam
    mode: 0750
  with_items:
    - app
    - bin
    - conf
    - data
    - lib
    - log
    - script
    - tmp

- name: create db directory
  file:
    path: "{{vitam_folder_root}}/data/mongod/db"
    owner: "{{mongo_user}}"
    group: vitam
    state: directory
    mode: 0700

- name: Create the mongod configuration server file
  template: 
    src: mongod.conf.j2
    dest: "{{mongo_config_path}}/mongod.conf"
    owner: "{{ mongo_user }}"
    mode: 0700

- name: Create the mongo systemd unit file
  template: 
    src: mongo.service.j2
    dest: /usr/lib/systemd/system/mongod.service

- name: systemctl reload-daemon
  command: systemctl daemon-reload

- name: restart mongod
  service:
    name: mongod
    enabled: true
    state: restarted

# Now lest's initiate the replica set
# Do this only on the last node of the current shard
# Current shard: mongod-data[shard-id]

- name: Wait for the service port to be open
  wait_for: port={{mongod_port}} timeout=10
  when: inventory_hostname == "{{ groups['mongod']|last }}"

- name: Copy the script which initiate the replica set
  template: src=init-replica.js.j2 dest=/tmp/init-replica.js
  when: inventory_hostname == "{{ groups['mongod']|last }}"

- name: Initiate the replica set
  command: mongo --port {{mongod_port}} /tmp/init-replica.js
  when: inventory_hostname == "{{ groups['mongod']|last }}"

# - name: Delete the init-replica.js file
#   file:
#     dest: "/tmp/init-replica.js"
#     state: "absent"
#   when: inventory_hostname == "{{ groups['mongod']|last }}"
