---
### elasticsearch log configuration and kibana configuration ###
# TODO Find a solution in order to execute the import only once for all the VITAM applications
- name: load vitam metrics template in Elasticsearch Log
  when: num_log_hosts > 0
  run_once: true
  delegate_to: "{{ vitam_kibana_host }}"
  uri:
    url: "http://{{elasticsearch_log_host}}:{{elasticsearch_log_http_port}}/_template/metrics_template"
    method: PUT
    body: "{{ lookup('file', '{{role_path}}/files/kibana-metrics-configuration/metrics.template.json') }}"
    body_format: json
    status_code: 200,201
  vars:
    num_log_hosts: "{{ groups['hosts-log-server'] | length }}"

- name: load dashboards into Elasticsearch log .kibana index
  when: num_log_hosts > 0
  run_once: true
  delegate_to: "{{ vitam_kibana_host }}"
  uri:
    url: 'http://{{elasticsearch_log_host}}:{{elasticsearch_log_http_port}}/.kibana/{{ item.split(".")[0] }}'
    method: PUT
    body: "{{ lookup('file', '{{role_path}}/files/kibana-metrics-configuration/{{item}}') }}"
    body_format: json
    status_code: 200, 201
  with_lines: find {{ search_dir }} {{ dashboard_dir }} {{ index_pattern_dir }} {{ visualization_dir }} -name '*.json' -type f | awk -F '/' '{print $(NF-1)"/"$NF}'
  vars:
    search_dir: "{{role_path}}/files/kibana-metrics-configuration/search"
    dashboard_dir: "{{role_path}}/files/kibana-metrics-configuration/dashboard"
    index_pattern_dir: "{{role_path}}/files/kibana-metrics-configuration/index-pattern"
    visualization_dir: "{{role_path}}/files/kibana-metrics-configuration/visualization"
    num_log_hosts: "{{ groups['hosts-log-server'] | length }}"

# TODO Get Kibana version dynamically and put it in the URL
- name: set jersey-metrics-vitam-* as kibana default index pattern
  when: num_log_hosts > 0
  run_once: true
  delegate_to: "{{ vitam_kibana_host }}"
  uri:
    url: 'http://{{elasticsearch_log_host}}:{{elasticsearch_log_http_port}}/.kibana/config/4.6.1'
    method: PUT
    body: '{"defaultIndex": "metrics-vitam-jersey-*"}'
    body_format: json
    status_code: 200, 201
  vars:
    num_log_hosts: "{{ groups['hosts-log-server'] | length }}"

- name: Install rpm {{ rpm_name }}
  yum:
    name: "{{ rpm_name }}-{{rpm_version}}"
    state: latest
    update_cache: yes
# OMA : question : lastest ou fixer la version dans les fichiers d'inventaire ???

- name: Check that the directories exists (must be removed when the RPM plugin will be patched)
  file:
    path: "{{vitam_folder_root}}/{{ item }}/{{ vitam_component }}"
    state: directory
    owner: "{{ vitam_user}}"
    group: "{{ vitam_group }}"
    mode: "{{ vitam_folder_permission }}"
  with_items:
    - app
    - bin
    - conf
    - data
    - lib
    - log
    - script
    - tmp


- name: Deploy common configuration files
  template:
    src: "{{item}}.j2"
    dest: "{{vitam_folder_conf}}/{{item}}"
    owner: "{{ vitam_user}}"
    group: "{{ vitam_group }}"
    mode: "{{vitam_conf_permission}}"
  with_items:
    - "logbook-client.conf"
    - "server-identity.conf"
    - "logback.xml"
    - "logback-access.xml"
    - "antisamy-esapi.xml"
    - "jetty-config.xml"
    - "vitam.conf"
    - "vitam.metrics.conf"

- name: Ensure that the sysconfig sub-directory exists
  file:
    path: "{{vitam_folder_root}}/conf/{{ vitam_component }}/sysconfig"
    state: directory
    owner: "{{ vitam_user}}"
    group: "{{ vitam_group }}"
    mode: "{{ vitam_folder_permission }}"

- name: Deploy common configuration files in sysconfig subdir
  template:
    src: "{{item}}.j2"
    dest: "{{vitam_folder_conf}}/sysconfig/{{item}}"
    owner: "{{ vitam_user}}"
    group: "{{ vitam_group }}"
    mode: "{{vitam_conf_permission}}"
  with_items:
    - "java_opts"

# KWA : a fixer ASAP !
- name: Ensure consul config dir is OK
  file:
    path: "{{consul_folder_conf}}"
    state: directory
    owner: "{{ vitam_user }}"
    group: "{{ vitam_group }}"

# KWA : a fixer ASAP !
- name: Deploy consul agent service declaration
  template:
    src: "service-componentid.json.j2"
    dest: "{{consul_folder_conf}}/service-{{ vitam_component }}.json"
    owner: "{{ vitam_user }}"
    group: "{{ vitam_group }}"
    mode: "{{vitam_conf_permission}}"
  notify:
   - reload consul configuration

# Ensure that the installation is complete and consul up before contnuing...
- meta: flush_handlers

- name: Deploy specific configuration files (can override the common configuration files)
  template:
    src: "{{role_path}}/templates/{{ vitam_component }}/{{item}}.j2"
    dest: "{{vitam_folder_conf}}/{{item }}"
    owner: "{{ vitam_user }}"
    group: "{{ vitam_group }}"
    mode: "{{vitam_conf_permission}}"
  with_items: "{{ lookup('pipe','find {{role_path}}/templates/{{ vitam_component }}/ -type f  -exec basename {} .j2 \\;').split('\n') }}"
  no_log: true # OMA test as there may be secrets in verbose output

- name: copy files section
  copy:
    src: "{{role_path}}/files/{{ vitam_component }}/{{item}}"
    dest: "{{vitam_folder_conf}}/{{item }}"
    owner: "{{ vitam_user }}"
    group: "{{ vitam_group }}"
    mode: "{{vitam_conf_permission}}"
  with_items: "{{ lookup('pipe','find {{role_path}}/files/{{ vitam_component }}/ -type f -exec basename {} \\;').split('\n') }}"

# OMA: disabled as hooks are now integrated for postinst, preun && postun in pom.xml
# - name: systemctl reload-daemon
#   command: systemctl daemon-reload

- name: (re)-start service
  service:
    name: "vitam-{{ vitam_component }}"
    enabled: true
    state: restarted
