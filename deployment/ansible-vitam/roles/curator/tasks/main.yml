---

#### Curator ####
- name: ensure old package "python-elasticsearch-curator" is absent
  package:
    name: python-elasticsearch-curator
    state: absent

- name: install elasticsearch-curator package
  package:
    name: elasticsearch-curator
    state: latest
  # when: "inventory_hostname != 'localhost'"

- name: ensure Curator directories exist
  file:
    path: "{{ vitam_defaults.folder.root_path }}/{{item}}/curator"
    owner: "{{ vitam_defaults.users.vitam }}"
    group: "{{ vitam_defaults.users.group }}"
    state: directory
    mode: "{{ vitam_defaults.folder.folder_permission }}"
  with_items:
    - data
    - log
    - conf
    - lib
#  when: "inventory_hostname != 'localhost'"

- name: apply configuration files for curator
  template:
    src: "{{ item }}.j2"
    dest: "{{curator_conf_dir}}/{{ item }}"
    owner: "{{ vitam_defaults.users.vitam }}"
    group: "{{ vitam_defaults.users.group }}"
    mode: "{{ vitam_defaults.folder.conf_permission }}"
  with_items:
    - "curator.yml"
    - "delete_index.yml"
    - "close_index.yml"
    - "metrics_index.yml"
#  when: "inventory_hostname != 'localhost'"

- name: copy the systemd unit & timer files for curator
  template:
    src: "{{ role_path }}/templates/systemd/{{ item }}.j2"
    dest: "/usr/lib/systemd/system/{{ item }}"
  with_items: "{{ lookup('pipe','find {{ role_path }}/templates/systemd/ -type f  -exec basename {} .j2 \\; || true').split('\n') }}"
  when: "ansible_distribution == 'CentOS' and {{ lookup('pipe', 'test -d {{ role_path }}/templates/systemd || echo nofolder') == \"\" }}"

- name: copy the systemd unit & timer files for curator
  template:
    src: "{{ role_path }}/templates/systemd/{{ item }}.j2"
    dest: "/lib/systemd/system/{{ item }}"
  with_items: "{{ lookup('pipe','find {{ role_path }}/templates/systemd/ -type f  -exec basename {} .j2 \\; || true').split('\n') }}"
  when: "ansible_distribution == 'Debian' and {{ lookup('pipe', 'test -d {{ role_path }}/templates/systemd || echo nofolder') == \"\" }}"

- name: Enable systemd timers
  systemd:
    name: "{{ item }}"
    daemon_reload: "yes"
    enabled: "yes"
    state: "started"
  with_items: "{{ lookup('pipe','find {{ role_path }}/templates/systemd/ -type f -name *.timer.j2 -exec basename {} .j2 \\; || true').split('\n') }}"
  when: "{{ lookup('pipe', 'test -d {{ role_path }}/templates/systemd || echo nofolder') == \"\" }}"

- name: Ensure consul service is started
  service:
    name: "vitam-consul"
    state: started
