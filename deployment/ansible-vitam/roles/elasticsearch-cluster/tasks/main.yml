---
#### Compute variables ####

# OMA: will need something better
# - name: remove vitam-{{cluster_name}} package
#   package:
#     name: vitam-{{cluster_name}}
#     state: absent
#   when: groupe=="log"

# - name: Ensure elasticsearch directories do not exist
#   file:
#     path: "{{ vitam_defaults.folder.root_path }}/{{ item }}/{{cluster_name}}"
#     state: absent
#     mode: "{{ vitam_defaults.folder.folder_permission }}"
#   with_items:
#     - conf
#     - data
#     - log
#     - lib
#   when: groupe=="log"

- name: Update elasticsearch memory value if empty and total memory < 64 Go
  set_fact:
    elasticsearch_memory: "{{ (ansible_memory_mb.real.total / 2) | int }}m"
  when:
    - ansible_memory_mb.real.total < 65536
    - elasticsearch_memory == ""

- name: Update elasticsearch memory value if empty and total memory >= 64 Go (don't allocate more than 32 Go RAM - official recommandation)
  set_fact:
    elasticsearch_memory: "32g"
  when:
    - ansible_memory_mb.real.total >= 65536
    - elasticsearch_memory == ""


#### Elasticsearch installation ####

# Only prerequisite for Debian : install openjdk from jessie-backports
- name: install openjdk from jessie-backports only when Debian
  apt:
    name: openjdk-8-jdk-headless
    state: latest
    default_release: jessie-backports
  when: ansible_distribution == "Debian"

# FIXME : don't forget t remove the file when updating to 5.x
- name: copy preferences for APT (force install 2.x elasticsearch on {{ composant.cluster_name }})
  copy:
    src: pin-es-data
    dest: /etc/apt/preferences.d/pin-es-data
    owner: root
    group: root
    mode: 0644
    remote_src: false
  tags:
    - update_package_vitam
  when: (ansible_distribution == "Debian") and (composant.cluster_name=="elasticsearch-data")


# - name: install java on CentOS
#   yum:
#     name: java-1.8.0-openjdk
#     state: latest
#   when: ansible_distribution == "CentOS"

- name: install vitam-{{composant.cluster_name}} package
  package:
    name: vitam-{{composant.cluster_name}}
    state: latest
  notify:
    - restart elasticsearch

# OMA: TODO : add to java.policy (/etc/alternates/jre/lib/security/java.policy
# permission javax.management.MBeanTrustPermission "register";
#

- name: apply java MBean security on CentOS
  blockinfile:
    path: /usr/lib/jvm/jre/lib/security/java.policy
    marker: "// {mark} ANSIBLE MANAGED BLOCK"
    insertafter: "that can be read by anyone"
    content: |
      permission javax.management.MBeanTrustPermission "register";
  when: ansible_distribution == "CentOS"

# OMA: to be tested
- name: apply java MBean security on Debian
  blockinfile:
    dest: /usr/lib/jvm/java-8-openjdk-amd64/jre/lib/security/java.policy
    marker: "// {mark} ANSIBLE MANAGED BLOCK"
    insertafter: "that can be read by anyone"
    content: "permission javax.management.MBeanTrustPermission \"register\";"
  when: ansible_distribution == "Debian"

- name: ensure /var/run/{{ composant.cluster_name }} exists
  file:
    path: "/var/run/{{ composant.cluster_name }}"
    owner: "{{ vitam_defaults.users.vitamdb }}"
    group: "{{ vitam_defaults.users.group }}"
    state: directory
    mode: "{{ vitam_defaults.folder.folder_permission }}"

- name: Disable standard Easticsearch service
  service:
    name: elasticsearch
    state: stopped
    enabled: no

- name: Add vitam-{{ composant.cluster_name }} autostart at boot
  service:
    name: "vitam-{{composant.cluster_name}}"
    enabled: yes
  notify:
    - restart elasticsearch


#### Configuration ####

- name: Ensure elasticsearch directories exist
  file:
    path: "{{ vitam_defaults.folder.root_path }}/{{ item }}/{{ composant.cluster_name }}"
    owner: "{{ vitam_defaults.users.vitamdb }}"
    group: "{{ vitam_defaults.users.group }}"
    state: directory
    mode: "{{ vitam_defaults.folder.folder_permission }}"
  with_items:
    - conf
    - data
    - log
    - lib
  notify:
    - restart elasticsearch

- name: Ensure elasticsearch sysconfig directory exist
  file:
    path: "{{ elasticsearch_conf_dir }}/sysconfig"
    owner: "{{ vitam_defaults.users.vitamdb }}"
    group: "{{ vitam_defaults.users.group }}"
    state: directory
    mode: "{{ vitam_defaults.folder.folder_permission }}"
  notify:
    - restart elasticsearch

# KWA Question : is it still necessary with the systemd service ?
- name: Configure limits max_open_files for Elasticsearch
  lineinfile:
    dest: /etc/security/limits.conf
    regexp: '^{{ vitam_defaults.users.vitamdb }}     -    nofile    {{ elasticsearch_max_open_files }}'
    insertafter: EOF
    line: '{{ vitam_defaults.users.vitamdb }}     -    nofile    {{ elasticsearch_max_open_files }}'
  when: elasticsearch_max_open_files is defined
  notify:
    - restart elasticsearch

- name: apply elasticsearch configuration yml
  template:
    src: "elasticsearch.{{ composant.groupe }}.yml.j2"
    dest: "{{ elasticsearch_conf_dir }}/elasticsearch.yml"
    owner: "{{ vitam_defaults.users.vitamdb }}"
    group: "{{ vitam_defaults.users.group }}"
    mode: "{{ vitam_defaults.folder.conf_permission }}"
  notify:
    - restart elasticsearch

- name: apply logging configuration yml
  template:
    src: "{{item}}.j2"
    dest: "{{elasticsearch_conf_dir}}/{{item}}"
    owner: "{{ vitam_defaults.users.vitamdb }}"
    group: "{{ vitam_defaults.users.group }}"
    mode: "{{ vitam_defaults.folder.conf_permission }}"
  with_items:
    - "log4j2.properties"
  notify:
    - restart elasticsearch


- name: apply elasticsearch sysconfig default
  template:
    src: "elasticsearch.j2"
    dest: "{{elasticsearch_conf_dir}}/sysconfig/elasticsearch"
    owner: "{{ vitam_defaults.users.vitamdb }}"
    group: "{{ vitam_defaults.users.group }}"
    mode: "{{ vitam_defaults.folder.conf_permission }}"
  notify:
    - restart elasticsearch

#### Elasticsearch systemd service configuration ####

# Cf. https://serverfault.com/questions/546966/whats-removing-stuff-from-var-run-at-reboots-from-a-fedora-machine
# Cf. https://www.freedesktop.org/software/systemd/man/tmpfiles.d.html
# FIXME : special owner/group/mode has to be variables !
- name: add {{ composant.cluster_name }}.conf in tempfile.d
  template:
    src: "tempfile.d-elasticsearch.conf.j2"
    dest: "/usr/lib/tmpfiles.d/{{ composant.cluster_name }}.conf"
    owner: root
    group: root
    mode: 0644
  notify: create systemd tmpfiles

# KWA Note : another file should be added here :
# /usr/lib/sysctl.d/elasticsearch.conf
# with content :
# vm.max_map_count=262144


#### Consul service declaration ####

# TODO: ideally get the consul configuration path in a global configuration variable
- name: Ensure consul config dir is OK
  file:
    path: "{{ consul_folder_conf }}"
    state: directory
    owner: "{{ vitam_defaults.users.vitam }}"
    group: "{{ vitam_defaults.users.group }}"

- name: Deploy consul agent service declaration
  template:
    src: "service-componentid.json.j2"
    dest: "{{ consul_folder_conf }}/service-{{ composant.cluster_name }}.json"
    owner: "{{ vitam_defaults.users.vitam }}"
    group: "{{ vitam_defaults.users.group }}"
    mode: "{{ vitam_defaults.folder.conf_permission }}"
  notify:
   - reload consul configuration

- name: Ensure consul service is started
  service:
    name: "vitam-consul"
    state: started

- name: Ensure service is started
  service:
    name: "vitam-{{ composant.cluster_name }}"
    state: started
