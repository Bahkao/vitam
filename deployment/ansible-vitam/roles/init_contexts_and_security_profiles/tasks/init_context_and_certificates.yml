---

- name: "Wait until service functional-admin is up"
  wait_for:
      host: "{{hostvars[groups['hosts-functional-administration'][0]]['ip_admin']}}"
      port: "{{vitam.functional_administration.port_admin}}"
      state: "started"
      timeout: "{{ vitam_defaults.services.start_timeout }}"
  run_once: true

- name: Check if context already exists in functional-admin
  uri:
    method: GET
    body: "{ \"$query\":{\"$eq\":{\"Name\":\"{{admin_context_name}}\"}},\"$filter\":{},\"$projection\":{} }"
    status_code: 200
    url: "http://{{hostvars[groups['hosts-functional-administration'][0]]['ip_admin']}}:{{vitam.functional_administration.port_admin}}/v1/admin/contexts"
    body_format: "json"
    timeout: "{{ vitam_defaults.services.api_call_timeout }}"
  run_once: true
  register: context_check

- name: Modify json & convert to dict...
  set_fact:
    context_check_json: "{{ context_check.json |regex_replace('\\$hits', 'hits') }}"
  run_once: true

- block:

    - name: Send context to functionnal-admin
      uri:
        method: POST
        body: "[{ \"Name\": \"{{admin_context_name}}\", \"Status\": \"ACTIVE\", \"SecurityProfile\": \"{{admin_security_profile}}\", \"Permissions\": [ {% for tenant in admin_context_tenants %}{ \"tenant\": {{tenant}}, \"AccessContracts\": [], \"IngestContracts\": [] }{% if not loop.last %},{% endif %}{% endfor %} ] }]"
        status_code: 200,201
        url: "http://{{hostvars[groups['hosts-functional-administration'][0]]['ip_admin']}}:{{vitam.functional_administration.port_admin}}/v1/admin/contexts"
        body_format: "json"
        timeout: "{{ vitam_defaults.services.api_call_timeout }}"
        headers:
          X-Tenant-Id: "{{vitam_tenant_admin}}"
      run_once: true
      register: functional_adm_response

    - name: Modify json & convert to dict...
      set_fact:
        functional_adm_json: "{{ functional_adm_response.json |regex_replace('\\$results', 'results') }}"
      run_once: true

    - name: "Wait until service security-internal is up"
      wait_for:
          host: "{{hostvars[groups['hosts-security-internal'][0]]['ip_admin']}}"
          port: "{{vitam.security_internal.port_admin}}"
          state: "started"
          timeout: "{{ vitam_defaults.services.start_timeout }}"
      run_once: true

    - name: Upload context certificates into security-internal
      uri:
        method: POST
        body: "{ \"contextId\" : \"{{ functional_adm_json.results[0].Identifier }}\" , \"certificate\" : \"{{ lookup('file','{{inventory_dir}}/certs/client-external/clients/{{ item }}') | b64encode }}\" }"
        status_code: 201
        timeout: "{{ vitam_defaults.services.api_call_timeout }}"
        url: http://{{hostvars[groups['hosts-security-internal'][0]]['ip_admin']}}:{{vitam.security_internal.port_admin}}/v1/api/identity
        body_format: "json"
      run_once: true
      with_items:
        - "{{admin_context_certs}}"

    - name: Upload personal certificates into security-internal
      uri:
        method: POST
        body: "{{ lookup('file','{{inventory_dir}}/certs/client-vitam-users/clients/{{ item }}') }}"
        status_code: 204
        timeout: "{{ vitam_defaults.services.api_call_timeout }}" 
        url: http://{{hostvars[groups['hosts-security-internal'][0]]['ip_admin']}}:{{vitam.security_internal.port_admin}}/v1/api/personalCertificate
        body_format: "raw"
        headers:
          Content-Type: "application/octet-stream"
      run_once: true
      with_items:
        - "{{admin_personal_certs}}"

  when: context_check_json.hits.total < 1
