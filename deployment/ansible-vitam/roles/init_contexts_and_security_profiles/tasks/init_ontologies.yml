---

- name: "Wait until service functional-admin is up"
  wait_for:
      host: "{{hostvars[groups['hosts-functional-administration'][0]]['ip_admin']}}"
      port: "{{vitam.functional_administration.port_admin}}"
      state: "started"
      timeout: "{{ vitam_defaults.services.start_timeout }}"
  run_once: true

- name: Check if ontologies already exist in functional-admin
  uri:
    method: GET
    body: "{ \"$query\":{\"$eq\":{\"Identifier\":\"_mgt\"}},\"$filter\":{},\"$projection\":{} }"
    status_code: 200
    url: "http://{{hostvars[groups['hosts-functional-administration'][0]]['ip_admin']}}:{{vitam.functional_administration.port_admin}}/v1/admin/ontologies"
    body_format: "json"
  run_once: true
  register: ontologies_check

- name: Modify json & convert to dict...
  set_fact:
    ontologies_check_json: "{{ ontologies_check.json |regex_replace('\\$hits', 'hits') }}"
  run_once: true

- name: Import ontologies to functionnal-admin
  uri:
    method: POST
    body: "[{\"Identifier\":\"_sps\",\"ApiField\":\"#originating_agencies\",\"SedaField\":\"OriginatingAgencyIdentifier\",\"Origin\":\"INTERNAL\",\"Type\":\"KEYWORD\",\"Description\":\"Internal ontology sample\"},{\"Identifier\":\"_mgt\",\"ApiField\":\"#management\",\"SedaField\":\"Management\",\"Origin\":\"INTERNAL\",\"Type\":\"KEYWORD\",\"Description\":\"Internal ontology sample\"}]"
    status_code: 200,201
    url: "http://{{hostvars[groups['hosts-functional-administration'][0]]['ip_admin']}}:{{vitam.functional_administration.port_admin}}/v1/admin/ontologies"
    body_format: "json"
    headers:
      X-Tenant-Id: "{{ vitam_tenant_admin }}"
  run_once: true
  register: functional_adm_response
  when: ontologies_check_json.hits.total < 1
