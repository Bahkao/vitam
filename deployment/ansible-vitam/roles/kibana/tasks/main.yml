---

#### Kibana installation ####
- name: Set command for CentOS
  set_fact:
    check_kibana_version: "rpm -q kibana"
  when: ansible_os_family == "RedHat"

- name: Set command for Debian
  set_fact:
    check_kibana_version: "dpkg-query -l  'kibana'"
  when: ansible_os_family == "Debian"

- name: checking whether kibana is already installed
  shell : "{{ check_kibana_version }}"
  register: is_installed
  ignore_errors: true
# OMA: ignore_errors beurk

- import_tasks: migrate_kibana_5.yml
  when: is_installed.stdout.find('5.6.') != -1

- name: Install kibana package from repo
  package:
    name: kibana
    state: latest
  notify:
    - restart kibana

- name: Add kibana autostart at boot
  systemd:
    name: kibana
    daemon_reload: yes
    enabled: yes
  notify:
    - restart kibana

- name: Configure Kibana connection to elasticsearch
  replace:
    dest: /etc/kibana/kibana.yml
    regexp: '^#{0,1}elasticsearch\.url:.*$'
    replace: "elasticsearch.url: \"http://{{ elasticsearch_host }}:{{ elasticsearch_port }}\""
  notify:
    - restart kibana

- name: Configure basePath for reverse if one is declared in the inventory
  replace:
    dest: /etc/kibana/kibana.yml
    regexp: '^#{0,1}server\.basePath:.*$'
    replace: "server.basePath: \"/{{ composant.baseuri }}\""
  when: groups['reverse']|length > 0
  notify:
    - restart kibana

- name: Configure rewritePath boolean in Kibana when reverse is declared in the inventory
  replace:
    dest: /etc/kibana/kibana.yml
    regexp: '^#{0,1}server\.rewriteBasePath:.*$'
    replace: "server.rewriteBasePath: false"
  when: groups['reverse']|length > 0
  notify:
    - restart kibana

- name: Configure Kibana web listening
  replace:
    dest: /etc/kibana/kibana.yml
    regexp: '^#{0,1}server\.host:.*$'
    replace: "server.host: \"{{ ip_admin }}\""
  notify:
    - restart kibana

- name: flush_handlers
  meta: flush_handlers

- name: Make sure kibana is started
  systemd:
    name: kibana
    state: started

#### Consul configuration ####
- name: Ensure consul config dir is OK
  file:
    path: "{{ consul_folder_conf }}"
    state: directory
    owner: "{{ vitam_defaults.users.vitam }}"
    group: "{{ vitam_defaults.users.group }}"

- name: Deploy consul agent service declaration
  template:
    src: "service-kibana.json.j2"
    dest: "{{ consul_folder_conf }}/service-{{ kibana_service_name }}.json"
    owner: "{{ vitam_defaults.users.vitam }}"
    group: "{{ vitam_defaults.users.group }}"
    mode: "{{ vitam_defaults.folder.conf_permission }}"
  tags:
    - consul_conf
  notify:
   - reload consul configuration
