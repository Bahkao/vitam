---
# tasks file for kibana_data_dashboards

# Note pour exporter des dashboards
# Pour export des dashboards, se mettre dans le dossier des JSON au niveau du rôle ansible, exécuter la commande : 
# for dashboard in `ls`;do ID=$(echo $dashboard | sed -e "s/\.json//g"); echo $ID; curl "http://172.17.0.2/kibana_log/api/kibana/dashboards/export?dashboard=$ID" >> kibana6_$ID.json;done

#### Kibana dashboards configuration ####
- name: Wait for the kibana port to be open
  wait_for:
    host: "{{ ip_service }}"
    port: "{{ kibana.data.port }}"
    timeout: "{{ vitam_defaults.services.start_timeout }}"
  run_once: true
  tags: load_kibana_data

- name: Wait until kibana service is OK
  uri:
    url: 'http://{{ip_service}}:{{ kibana.data.port }}/status'
    method: GET
    #status_code: 200,302
  register: kibana_result
  until: kibana_result.status != 503
  retries: "{{ kibana.data.api_call_timeout }}"
  delay: 1
  tags: load_kibana_data

- name: check wether replica number for metrics-vitam is compatible with inventory
  fail: msg="Too much replica defined for default index template in elasticsearch-data"
  when: groups['hosts-elasticsearch-data']|length <= kibana.data.replica and groups['hosts-elasticsearch-data']|length>1
  tags: load_kibana_data

# We have a specific task for index pattern to add the "*" at the end of the url
- name: load index patterns for Kibana
  when: "{{ (groups['hosts-kibana-data'] | length) > 0 }}"
  run_once: true
  tags: load_kibana_data
  uri:
    url: "http://{{ip_service}}:{{ kibana.data.port }}/api/saved_objects/index-pattern/{{ item | basename | regex_replace('\\.json$') }}*?overwrite=true"
    method: POST
    body: "{\"attributes\": {{ lookup('file', '{{ item }}') }} }"
    body_format: json
    status_code: 200, 201
    headers:
      kbn-xsrf: reporting
    timeout: "{{ kibana.data.api_call_timeout }}"
  with_fileglob: 
    - "{{ role_path }}/files/kibana-data-configuration/index-pattern/*.json"

- name: load search for Kibana
  when: "{{ (groups['hosts-kibana-data'] | length) > 0 }}"
  run_once: true
  tags: load_kibana_data
  uri:
    url: "http://{{ip_service}}:{{ kibana.data.port }}/api/saved_objects/search/{{ item | basename | regex_replace('\\.json$') }}?overwrite=true"
    method: POST
    body: "{\"attributes\": {{ lookup('file', '{{ item }}') }} }"
    body_format: json
    status_code: 200, 201
    timeout: "{{ kibana.data.api_call_timeout }}"
    headers:
      kbn-xsrf: reporting
  with_fileglob: 
    - "{{ role_path }}/files/kibana-data-configuration/search/*.json"

- name: load visualizations for Kibana
  when: "{{ (groups['hosts-kibana-data'] | length) > 0 }}"
  run_once: true
  tags: load_kibana_log
  uri:
    url: "http://{{ip_service}}:{{ kibana.data.port }}/api/saved_objects/visualization/{{ item | basename | regex_replace('\\.json$') }}?overwrite=true"
    method: POST
    body: "{\"attributes\": {{ lookup('file', '{{ item }}') }} }"
    body_format: json
    status_code: 200, 201
    headers:
      kbn-xsrf: reporting
    timeout: "{{ kibana.data.api_call_timeout }}"
  with_fileglob: 
    - "{{ role_path }}/files/kibana-data-configuration/visualization/*.json"

- name: load dashboards for Kibana
  when: "{{ (groups['hosts-kibana-data'] | length) > 0 }}"
  run_once: true
  tags: load_kibana_log
  uri:
    url: "http://{{ip_service}}:{{ kibana.log.port }}/api/saved_objects/dashboard/{{ item | basename | regex_replace('\\.json$') }}?overwrite=true"
    method: POST
    body: "{\"attributes\": {{ lookup('file', '{{ item }}') }} }"
    body_format: json
    status_code: 200, 201
    headers:
      kbn-xsrf: reporting
    timeout: "{{ kibana.data.api_call_timeout }}"
  with_fileglob: 
    - "{{ role_path }}/files/kibana-data-configuration/dashboard/*.json"

# OMA : tout est OK, et pourtant... Ne marche pas !
- name: set logbookoperation_* as kibana default index pattern
  when: "{{ (groups['hosts-kibana-data'] | length) > 0}}"
  tags: load_kibana_data
  run_once: true
  uri:
    url: "http://{{ip_service}}:{{ kibana.data.port }}/api/kibana/settings"
    method: POST
    body: ' {"changes":{"defaultIndex":"logbookoperation_*"}}'
    headers:
      kbn-xsrf: reporting
    body_format: json
    timeout: "{{ kibana.data.api_call_timeout }}"
    status_code: 200, 201

- name: disable optIn popup message
  when: "{{ (groups['hosts-kibana-data'] | length) > 0 }}"
  run_once: true
  tags: load_kibana_data
  uri:
    url: "http://{{ip_service}}:{{ kibana.data.port }}/api/kibana/settings"
    method: POST
    body: "{\"changes\":{\"telemetry:optIn\": \"false\"}}"
    body_format: json
    status_code: 200, 201
    headers:
      kbn-xsrf: reporting
    timeout: "{{ kibana.data.api_call_timeout }}"
