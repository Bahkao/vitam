---
# tasks file for kibana_log_dashboards

#### Kibana dashboards configuration ####

- name: check wether replica number for metrics-vitam is compatible with inventory
  fail: msg="Too much replica defined for metrics index in elasticsearch-log"
  when: groups['hosts-elasticsearch-log']|length <= kibana.log.metrics.replica and groups['hosts-elasticsearch-log']|length>1

- name: Wait for the kibana port to be open
  wait_for:
    host: "{{ ip_service }}"
    port: "{{ kibana.log.port }}"
    timeout: "{{ vitam_defaults.services.start_timeout }}"
  run_once: true

- name: Wait until kibana service is OK
  uri:
    url: 'http://{{ip_service}}:{{ kibana.log.port }}/status'
    method: GET
  register: kibana_result
  until: kibana_result.status != 503
  retries: 60
  delay: 1

- name: Wait until .kibana index exists
  uri:
    url: '{{ elasticsearch.log|client_url }}.kibana'
    method: HEAD
    status_code: 200
  register: kibana_result
  until: kibana_result.status == 200
  retries: 60
  delay: 1

# We have a specific task for index pattern to add the "*" at the end of the url
- name: load index patterns into Elasticsearch log .kibana index
  when: "{{ (groups['hosts-kibana-log'] | length) > 0 }}"
  run_once: true
  uri:
    url: '{{ elasticsearch.log|client_url }}.kibana/{{ item.split(".")[0] }}*'
    method: PUT
    body: "{{ lookup('file', '{{ role_path }}/files/kibana-metrics-configuration/{{ item }}') }}"
    body_format: json
    status_code: 200, 201
  with_lines: find {{ index_pattern_dir }} -name '*.json' -type f | awk -F '/' '{print $(NF-1)"/"$NF}'
  vars:
    index_pattern_dir: "{{ role_path }}/files/kibana-metrics-configuration/index-pattern"

- name: load dasboards into Elasticsearch log .kibana index
  when: "{{ (groups['hosts-kibana-log'] | length) > 0 }}"
  run_once: true
  uri:
    url: '{{ elasticsearch.log|client_url }}.kibana/{{ item.split(".")[0] }}'
    method: PUT
    body: "{{ lookup('file', '{{ role_path }}/files/kibana-metrics-configuration/{{ item }}') }}"
    body_format: json
    status_code: 200, 201
  with_lines: find {{ search_dir }} {{ dashboard_dir }} {{ visualization_dir }} -name '*.json' -type f | awk -F '/' '{print $(NF-1)"/"$NF}'
  vars:
    search_dir: "{{ role_path }}/files/kibana-metrics-configuration/search"
    dashboard_dir: "{{ role_path }}/files/kibana-metrics-configuration/dashboard"
    visualization_dir: "{{ role_path }}/files/kibana-metrics-configuration/visualization"

### elasticsearch log configuration and kibana configuration ###
- name: load vitam metrics template in Elasticsearch Log
  when: "{{ (groups['hosts-kibana-log'] | length) > 0}}"
  run_once: true
  uri:
    url: "{{ elasticsearch.log|client_url }}_template/metrics_template"
    method: PUT
    body: "{{ lookup('template', '{{ role_path }}/templates/metrics.template.json.j2') }}"
    body_format: json
    status_code: 200,201


- name: Get kibana info for default index pattern
  slurp:
    src: /usr/share/kibana/package.json
  register: result
  run_once: true

- name: set fact packagejson
  set_fact:
    packagejson: "{{ result['content'] | b64decode | from_json }}"
  run_once: true

- name: set logstash-vitam* as kibana default index pattern
  when: "{{ (groups['hosts-kibana-log'] | length) > 0}}"
  run_once: true
  uri:
    url: "{{ elasticsearch.log|client_url }}.kibana/config/{{ packagejson.version }}"
    method: PUT
    body: '{"defaultIndex": "logstash-vitam*", "buildNum": {{ packagejson.build.number }} }'
    body_format: json
    status_code: 200, 201
