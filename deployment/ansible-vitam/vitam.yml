---
# Installation order
#
#   0. confirm playbook launch
#   1. Normalize
#   2. Consul
# 3. Elasticsearch Log
# 4. Log server
# 5. rsyslog
# 6. Elasticsearch Data
# 7. Mongo
# 8. Vitam applications

# Confirm launching this playbook
- hosts: all
  any_errors_fatal: yes
  vars_prompt:
    name: "confirmation"
    prompt: "Are you sure you want to run this playbook? Answer with 'YES'"
    default: "NO"
    private: no

  tasks:
    - name: Check Confirmation
      fail: msg="Playbook run confirmation failed"
      when: confirmation|upper != "YES"

### HOSTS NETWORK VARS CHECK ###
- hosts: hosts
  roles:
    - check_networks
  any_errors_fatal: true

### HOSTS NORMALIZATION ###
- hosts: vitam
  roles:
    - normalize-host

### CONSUL INSTALLATION ###
- hosts: hosts-consul-server
  serial: 1
  roles:
    - consul

- hosts: vitam
  roles:
    - { role: consul, when: "inventory_hostname not in groups['hosts-consul-server']" }


### ELASTICSEARCH LOG INSTALLATION ###
- hosts: hosts-elasticsearch-log
  roles:
    - elasticsearch-cluster
    - curator
  vars:
    port_http: "{{elasticsearch.elasticsearch_log.http_port}}"
    port_tcp: "{{elasticsearch.elasticsearch_log.tcp_port}}"
    groupe: log

### LOG SERVER INSTALLATION ###
- hosts: hosts-logstash
  roles:
    - logstash

- hosts: hosts-kibana-log
  roles:
    - kibana
    - kibana_log_dashboards
  vars:
    groupe: log
    elasticsearch_host: "{{elasticsearch.elasticsearch_log.host}}"
    elasticsearch_port: "{{elasticsearch.elasticsearch_log.http_port}}"
    kibana_port: "{{kibana.log_port}}"


### RSYSLOG INSTALLATION ###
# Vitam solution deployment
# TODO : à régler properment
- hosts: vitam
  roles:
    - rsyslog

### ELASTICSEARCH DATA INSTALLATION ###
- hosts: hosts-elasticsearch-data
  roles:
    - elasticsearch-cluster
  vars:
    port_http: "{{elasticsearch.elasticsearch_data.http_port}}"
    port_tcp: "{{elasticsearch.elasticsearch_data.tcp_port}}"
    groupe: data

- hosts: hosts-cerebro
  roles:
    - role: cerebro

### KIBANA DATA INSTALLATION ###
# OMA/ desactivated as long as ES 5 is not on data cluster
- hosts: hosts-kibana-data
  roles:
    - {role: kibana, groupe: data, elasticsearch_host: "{{elasticsearch_data_host}}", elasticsearch_port: "{{ elasticsearch.elasticsearch_data.http_port }}", kibana_port: "{{kibana_data_port}}"}
    - kibana_data_dashboards

### MONGO DB INSTALLATION ###

# mongodb commons (yum install, etc...)
- hosts: mongo_common
  roles:
  - mongo_common

# Mongoc replicas configuration
- hosts: mongoc
  roles:
    - mongoc
  vars:
    mongo_bin: mongod

# Mongod replicas configuration
- hosts: mongod
  roles:
    - mongod
  vars:
    mongo_bin: mongod

# Mongos configuration
- hosts: mongos
  roles:
    - mongos
  vars:
    mongo_bin: mongos

# Mongo cluster configuration, database & users declaration
- hosts: mongos
  roles:
    - mongo_configure



## VITAM ####################################################################



- hosts: hosts-storage-offer-default
  roles:
    - vitam
  vars:
    vitam_component: offer
    vitam_struct: "{{ vitam.storageofferdefault }}"
    secret_platform: "true"
    password_keystore: "{{keystores.server.offer}}"
    password_manager_keystore: "{{keystores.server.offer}}"
    password_truststore: "{{truststores.client_storage}}"
    password_grantedstore: "{{grantedstores.client_storage}}"
    vitam_certificate_client_type: "storage"



- hosts: hosts-storage-engine
  roles:
    - vitam
    - storage
  vars:
    vitam_component: storage
    vitam_struct: "{{ vitam.storageengine }}"
    secret_platform: "true"
    vitam_certificate_client_type: "storage"



- hosts: hosts-metadata
  roles:
    - vitam
  vars:
    vitam_component: metadata
    vitam_struct: "{{ vitam.metadata }}"
    cluster_name: elasticsearch-data
    secret_platform: "true"



- hosts: hosts-logbook
  roles:
    - vitam
    - logbook_secure_operations
    - logbook_secure_lifecycles
  vars:
    vitam_component: logbook
    vitam_struct: "{{ vitam.logbook }}"
    vitam_timestamp_usage: secure-logbook
    cluster_name: elasticsearch-data
    secret_platform: "true"



- hosts: hosts-functional-administration
  roles:
    - vitam
  vars:
    vitam_component: functional-administration
    vitam_struct: "{{ vitam.functional_administration }}"
    secret_platform: "true"
    cluster_name: elasticsearch-data



- hosts: hosts-security-internal
  roles:
    - vitam
    - init_contexts_and_security_profiles
  vars:
    vitam_component: security-internal
    vitam_struct: "{{ vitam.security_internal }}"
    secret_platform: "true"



- hosts: hosts-workspace
  roles:
    - vitam
  vars:
    vitam_component: workspace
    vitam_struct: "{{ vitam.workspace }}"
    secret_platform: "true"



- hosts: hosts-processing
  roles:
    - vitam
    - processing_create_workflows
  vars:
    vitam_component: processing
    vitam_struct: "{{ vitam.processing }}"
    secret_platform: "true"



- hosts: hosts-worker
  roles:
    - siegfried
    - vitam
  vars:
    vitam_component: worker
    vitam_struct: "{{ vitam.worker }}"
    vitam_timestamp_usage: secure-logbook
    secret_platform: "true"



- hosts: hosts-access-internal
  roles:
    - vitam
  vars:
    vitam_component: access-internal
    vitam_struct: "{{ vitam.accessinternal }}"
    secret_platform: "true"



- hosts: hosts-access-external
  roles:
    - vitam
  vars:
    vitam_component: access-external
    vitam_struct: "{{ vitam.accessexternal }}"
    secret_platform: "false"
    password_keystore: "{{keystores.server.access_external}}"
    password_manager_keystore: "{{keystores.server.access_external}}"
    password_truststore: "{{truststores.client_external}}"
    password_grantedstore: "{{grantedstores.client_external}}"
    vitam_certificate_client_type: "external"



- hosts: hosts-ingest-internal
  roles:
    - vitam
  vars:
    vitam_component: ingest-internal
    vitam_struct: "{{ vitam.ingestinternal }}"
    secret_platform: "true"



- hosts: hosts-ingest-external
  roles:
    - siegfried
    - vitam
    - {role: clamav, when: vitam_defaults.installation_clamav=="true"}
  vars:
    vitam_component: ingest-external
    vitam_struct: "{{ vitam.ingestexternal }}"
    secret_platform: "false"
    password_keystore: "{{keystores.server.ingest_external}}"
    password_manager_keystore: "{{keystores.server.ingest_external}}"
    password_truststore: "{{truststores.client_external}}"
    password_grantedstore: "{{grantedstores.client_external}}"
    vitam_certificate_client_type: "external"



- hosts: hosts-ihm-demo
  roles:
    - vitam
    - ihm-demo-front
    - ihm-demo-front-v2
  vars:
    vitam_component: ihm-demo
    vitam_struct: "{{ vitam.ihm_demo }}"
    secret_platform: "false"
    vitam_certificate_client_type: "external"
