---
# Installation order
#
#   0. confirm playbook launch
#   1. Normalize
#   2. Consul
# 3. Elasticsearch Log
# 4. Log server
# 5. rsyslog
# 6. Elasticsearch Data
# 7. Mongo
# 8. Vitam applications

# Confirm launching this playbook
- hosts: all
  any_errors_fatal: yes
  vars_prompt:
    name: "confirmation"
    prompt: "Are you sure you want to run this playbook? Answer with 'YES'"
    default: "NO"
    private: no
  tasks:
    - name: Check Confirmation
      fail: msg="Playbook run confirmation failed"
      when: confirmation|upper != "YES"

# ### HOSTS NETWORK VARS CHECK ###
- hosts: vitam
  any_errors_fatal: true
  roles:
    - checks

### HOSTS NORMALIZATION ###
- hosts: vitam
  any_errors_fatal: true
  roles:
    - normalize-host

### syslog daemon install
- hosts: vitam
  any_errors_fatal: true
  roles:
    - syslogd

### CONSUL INSTALLATION ###
- hosts: hosts-consul-server
  any_errors_fatal: true
  serial: 1
  roles:
    - consul

- hosts: vitam
  any_errors_fatal: true
  roles:
    - { role: consul, when: "( inventory_hostname not in groups['hosts-consul-server'] ) and ( consul_disabled is not defined or consul_disabled |lower != 'true' )" }

# ### ELASTICSEARCH LOG INSTALLATION ###
- hosts: hosts-elasticsearch-log
  any_errors_fatal: true
  roles:
    - elasticsearch-cluster
    - init_es_cluster_index_template
    - { role: curator, tags: curator_logs}
  vars:
    composant: "{{ elasticsearch.log }}"


### LOG SERVER INSTALLATION ###
- hosts: hosts-logstash
  any_errors_fatal: true
  roles:
    - logstash

- hosts: hosts-kibana-log
  any_errors_fatal: true
  roles:
    - kibana
    - kibana_dashboards
  vars:
    composant: "{{ kibana.log }}"
    # groupe: log
    elasticsearch_host: "{{ elasticsearch.log.host }}"
    elasticsearch_port: "{{ elasticsearch.log.port_http }}"
    # kibana_port: "{{ kibana.log.port }}"

### syslog daemon configuration ###
- hosts: vitam
  any_errors_fatal: true
  roles:
    - syslogd_configure

### ELASTICSEARCH DATA INSTALLATION ###
- hosts: hosts-elasticsearch-data
  any_errors_fatal: true
  roles:
    - elasticsearch-cluster
    - init_es_cluster_index_template
  vars:
    composant: "{{ elasticsearch.data }}"

- hosts: hosts-cerebro
  any_errors_fatal: true
  roles:
    - role: cerebro

# OMA: to be discussed wether place & servers are best one..
- hosts: hosts-kibana-data
  roles:
    - vitam
  vars:
    vitam_struct: "{{ vitam.elastickibanainterceptor }}"

## KIBANA DATA INSTALLATION ###
- hosts: hosts-kibana-data
  any_errors_fatal: true
  roles:
    - kibana
    - kibana_dashboards
  vars:
    composant: "{{ kibana.data }}"
    elasticsearch_host: "{{ vitam.elastickibanainterceptor.host }}"
    elasticsearch_port: "{{ vitam.elastickibanainterceptor.port_service }}"

### MONGO DB INSTALLATION ###

- import_playbook: mongodb_data.yml

- import_playbook: mongodb_offer.yml

## VITAM ####################################################################
- hosts: hosts-storage-offer-default
  any_errors_fatal: true
  roles:
    - vitam
  vars:
    vitam_struct: "{{ vitam.storageofferdefault }}"
    password_keystore: "{{keystores.server.offer}}"
    password_manager_keystore: "{{keystores.server.offer}}"
    password_truststore: "{{truststores.client_storage}}"
    password_grantedstore: "{{grantedstores.client_storage}}"
    vitam_certificate_client_type: "storage"

- hosts: hosts-storage-engine
  any_errors_fatal: true
  roles:
    - vitam
    - timers
    - storage
  vars:
    vitam_struct: "{{ vitam.storageengine }}"
    vitam_certificate_client_type: "storage"
    vitam_timestamp_usage: secure-storage
    timers_list: "{{ vitam_timers.storage }}"



- hosts: hosts-metadata
  any_errors_fatal: true
  serial: 1
  roles:
    - vitam
    - timers
    - metadata
  vars:
    vitam_struct: "{{ vitam.metadata }}"
    timers_list: "{{ vitam_timers.metadata }}"


- hosts: hosts-logbook
  any_errors_fatal: true
  serial: 1
  roles:
    - vitam
    - timers
    - logbook
  vars:
    vitam_struct: "{{ vitam.logbook }}"
    vitam_timestamp_usage: secure-logbook
    timers_list: "{{ vitam_timers.logbook }}"


- hosts: hosts-workspace
  any_errors_fatal: true
  roles:
    - vitam
  vars:
    vitam_struct: "{{ vitam.workspace }}"


- hosts: hosts-functional-administration
  any_errors_fatal: true
  serial: 1
  roles:
    - vitam
    - timers
    - functional_administration
  vars:
    vitam_struct: "{{ vitam.functional_administration }}"
    timers_list: "{{ vitam_timers.functional_administration }}"


- hosts: hosts-security-internal
  any_errors_fatal: true
  roles:
    - vitam
    - { role: init_contexts_and_security_profiles, when: primary_site | lower == "true" }
  vars:
    vitam_struct: "{{ vitam.security_internal }}"

- hosts: hosts-processing
  any_errors_fatal: true
  roles:
    - vitam
  vars:
    vitam_struct: "{{ vitam.processing }}"

- hosts: hosts-batch-report
  any_errors_fatal: true
  roles:
    - vitam
  vars:
    vitam_struct: "{{ vitam.batchreport }}"

- hosts: hosts-worker
  any_errors_fatal: true
  roles:
    - siegfried
    - vitam
    - griffins
  vars:
    vitam_struct: "{{ vitam.worker }}"
    vitam_timestamp_usage: secure-logbook

- hosts: hosts-access-internal
  any_errors_fatal: true
  roles:
    - vitam
  vars:
    vitam_struct: "{{ vitam.accessinternal }}"

- hosts: hosts-access-external
  any_errors_fatal: true
  roles:
    - vitam
  vars:
    vitam_struct: "{{ vitam.accessexternal }}"
    password_keystore: "{{keystores.server.access_external}}"
    password_manager_keystore: "{{keystores.server.access_external}}"
    password_truststore: "{{truststores.client_external}}"
    password_grantedstore: "{{grantedstores.client_external}}"
    vitam_certificate_client_type: "external"

# 2 differents steps, due to https://github.com/ansible/ansible/issues/15476
- hosts: hosts-access-external
  any_errors_fatal: true
  roles:
    - { role: init_pronom, when: primary_site | lower == "true" }
  vars:
    vitam_struct: "{{ vitam.accessexternal }}"
    password_keystore: "{{keystores.server.access_external}}"
    password_manager_keystore: "{{keystores.server.access_external}}"
    password_truststore: "{{truststores.client_external}}"
    password_grantedstore: "{{grantedstores.client_external}}"
    vitam_certificate_client_type: "external"

- hosts: hosts-ingest-internal
  any_errors_fatal: true
  roles:
    - vitam
  vars:
    vitam_struct: "{{ vitam.ingestinternal }}"

- hosts: hosts-ingest-external
  any_errors_fatal: true
  roles:
    - siegfried
    - antivirus
    - create_upload_dir
    - vitam
   #- {role: clamav, when: vitam_struct.antivirus=='clamav' }
  vars:
    vitam_struct: "{{ vitam.ingestexternal }}"
    password_keystore: "{{keystores.server.ingest_external}}"
    password_manager_keystore: "{{keystores.server.ingest_external}}"
    password_truststore: "{{truststores.client_external}}"
    password_grantedstore: "{{grantedstores.client_external}}"
    vitam_certificate_client_type: "external"

- hosts: hosts-ihm-demo
  any_errors_fatal: true
  roles:
    - vitam
  vars:
    vitam_struct: "{{ vitam.ihm_demo }}"
    vitam_certificate_client_type: "external"
    password_keystore: "{{keystores.server.ihm_demo}}"
    password_manager_keystore: "{{keystores.server.ihm_demo}}"
    password_truststore: "{{truststores.client_external}}"
    password_grantedstore: "{{grantedstores.client_external}}"
