Packaging
#########

Principes communs
=================

Pour les packagings de distribution (RPM et DEB), on utilisera les principes suivants de packaging : 

* Définition d'un ID pour chaque module
* Nom des packages : ``vitam-<id>`` du package 
* Version du package : Numéro de "release" du projet Vitam

Les dossiers (ainsi que les droits associés) doivent respecter les principes dictés dans :doc:`la section dédiée <01-principles-users-rights>`

Les contraintes associés à un packaging RPM/DEB sont : 

* Instanciation d'une seule instance d'un même moteur par machine (il n'est pas possible d'installer 2 moteurs d'exécution sur le même OS)
* Pour ne pas avoir de complexité trop fortes sur les dépendances, on construit 1 package RPM par module . De ce fait, chaque package RPM embarque des librairies communes (ex : les libraires de logging Java)


Packaging RPM
=============

Concernant le packaging RPM, les packages construits sont faits pour Centos 7 . Ceci inclut notamment : 

* L'usage des pré-requis (au sens Require) associés à Centos 7
* L'usage du système de démarrage systemd

Livraison des artefacts
-----------------------

Les artefacts peuvent être téléchargés de manière offline et il n'est pas nécessaire d'avoir un  accès Internet un dépôt Vitam. A noter que seuls les RPMs cibles sont disponibles et les RPM Sources (SRPM) ne seront pas fournis dans un premier temps

Dépôts
------

Concernant les dépôts externes nécessaires pour le bon fonctionnement du déploiement, il faut noter les packages : 

* Centos 7 (Base, Extras)
* EPEL 7 (Extra Packages for Enterprise Linux) : il s'agit d'un dépôt maintenu par Fedora et fournissant un ensemble de packages complétant ceux de RHEL/Centos

Pour les dépôts internes de Vitam, les principes suivants seront mis en oeuvre : 

* 1 dépôt RPM par version du produit. Lors d'un upgrade de version, la première action du déploiement sera de modifier lê pointeur vers le dépôt cible : 

  + En version 1.0, il existera un dépôt vitam-1.0 et sur lequel chaque serveur Vitam pointera (via les fichiers dans /etc/yum.repos.d
  + Lors d'un upgrade la première étape de l'outil de déploiement sera de modifier la version du dépôt géré par yum

* En Bêta, les dépôts RPM devront être hébergés par l'infrastructure sous-jacente (non gérés par l'outil de déploiement Vitam)
* En V1, les dépôts RPM pour Vitam sont hébergés sur le serveur de déploiement et de configuration et est géré 

.. A définir : d'où viennent les COTS ? Des dépôts CENTOS / EPEL si ils y sont, ou d'un dépôt de l'éditeur, ou on les met dans le dépôt VITAM (bof) ?

Configuration RPM
-----------------

Conformément aux usages RPM de Centos/RHEL, les packages ne contiennent pas dans les pré/post action d'arrêt/démarrage/redémarrage de services . 

Contrairement aux usages de RPM, les fichiers de configuration ne seront pas gérés dans RPM . En effet, les fichiers de configuration seront instanciés par l'outil de déploiement. Pour éviter la génération de fichier .rpmnew ou .rpmsave, il ne sera pas utilisé la directive %config.

Il y a 2 solutions actuellement à l'étude : 

* Ne pas lister les fichiers de configuration dans les fichiers RPM
* Présenter les fichiers de configuration dans les fichiers RPM sous forme de ghost. Cette fonctionnalité permet de gérer les fichiers "comme des coquilles vides" dans la base RPM (notamment pour rpm -ql) mais qui ne sont pas livrés en tant que tel dans le RPM . `(ghost_définition)`_


Packaging Deb
=============

.. todo:: A définir


Conteneurs Docker
=================

.. Il n'y aura pas de containers Docker en Bêta. (à confirmer)

.. Attention : à vérifier selon les besoins en terme de reconnaissance de formats pour la beta (FITS, Siegfried, FIDO, ...) et leur compatibilité CentOS.

Logique d'utilisation de Docker
-------------------------------

Dans le cadre du moteur d'exécution, il pourra être nécessaire de mettre en oeuvre des plugins spécifiques (ex : format de transformations de formats spécifiques/propriétaires). Pour éviter les contraintes de compatibilité entre composants et pour assurer une isolations entre les workers, il sera fait usage de conteneurs Docker. 

.. Répondre à la question : quelle utilisation de docker : "lancement d'une ligne de commande de scan" ou "lancement de mode serveur" ?

Livraison des artefacts
-----------------------

La méthode de livraison des artefacts (Containers Docker et/ou DockerFile) n'est pas définie au jalon du PP.


Dépôts (Registry)
-----------------

Les dépôts Dockers (appelés registry) sont des dépôts dynamiques (par opposition aux dépôts RPM ou DEB qui sont des dépôts pouvant être servis comme des sites statiques). 

Les implémentations libres existantes sont : 

* Registry fourni par Docker Inc
* Nexus (de Sonatype, à partir de la version 3 uniquement)

Le choix du registry Docker mis à disposition pour Vitam n'est pas choisi à ce jour 


Configuration Docker
--------------------

A définir


.. _`(ghost_définition)`: http://www.rpm.org/max-rpm-snapshot/s1-rpm-inside-files-list-directives.html#S3-RPM-INSIDE-FLIST-GHOST-DIRECTIVE
