Interruption / maintenance
##########################


Procédure d'arrêt
=================

Cette procédure décrit la cinématique d'arrêt de la plate-forme ; les commandes pour chaque composant sont détaillées plus bas dans ce même document.


.. note:: Il est conseillé de n'arrêter les bases de données qu'une fois les composants applicatifs arrêtés.

.. csv-table:: Cinématique d'arrêt de VITAM
   :header: "Composant", "Ordre d'arrêt","OK ?"
   :widths: 15, 5,10

   "ihm-demo","1",""
   "ingest-external","2",""
   "ingest-internal","3",""
   "access-external","4",""
   "access-internal","5",""
   "worker","6",""
   "processing","7",""
   "workspace","8",""
   "functional-administration","9",""
   "logbook","10",""
   "metadata","11",""
   "storage-engine","12",""
   "storage-offer-xxx","13",""
   "mongos","14",""
   "mongod","15",""
   "mongoc","16",""
   "elasticsearch vitam","17",""
   "kibana","18",""
   "logstash","19",""
   "elasticsearch logs","20",""
   "consul","21",""


Un playbook ansible d'arrêt de VITAM est fourni, sous ``deployment/ansible-vitam-exploitation``  (fichier de *playbook* ``stop_vitam.yml``), pour réaliser de façon automatisée les actions nécessaires.

.. warning:: Ce script, en l'état, permet un `EMERGENCY BREAK`, autrement dit un arrêt brutal des composants, ne permettant pas de garantir, à l'issue, une cohérence  des données.

.. note:: Une confirmation est demandée pour lancer ce script d'arrêt de la solution logicielle VITAM.

.. FIXME: limitation V1

.. warning:: Dans la version actuelle, il est fortement recommandé de positionner les traitements courants en pause avant de lancer la procédure d'arrêt.

Un playbook ansible d'arrêt des `timers` systemD :term:`VITAM` est également fourni, sous ``deployment/ansible-vitam-exploitation``  (fichier de *playbook* ``stop_vitam_timers.yml``), pour réaliser de façon automatisée les actions nécessaires.

Ce script est à lancer une fois l'arrêt des services correctement réalisé.



Procédure de démarrage
======================

Le pré-requis est le bon fonctionnement des partitions hébergeant la solution logicielle :term:`VITAM`.

.. csv-table:: Cinématique de démarrage de :term:`VITAM`
   :header: "Composant", "Ordre","OK ?"
   :widths: 15, 5,10

   "consul","1",""
   "elasticsearch logs","2",""
   "logstash","3",""
   "kibana","4",""
   "elasticsearch vitam","5",""
   "mongoc","6",""
   "mongod","7",""
   "mongos","8",""
   "storage-offer-xxx","9",""
   "storage-engine","10",""
   "metadata","11",""
   "logbook","12",""
   "functional-administration","13",""
   "workspace","14",""
   "processing","15",""
   "worker","16",""
   "access-internal","17",""
   "access-external","18",""
   "ingest-internal","19",""
   "ingest-external","20",""
   "ihm-demo","21",""

Un playbook ansible de démarrage de VITAM est fourni, sous ``deployment/ansible-vitam-exploitation`` (fichier de *playbook* ``start_vitam.yml``), pour réaliser de façon automatisée les actions nécessaires.

Procédure de statut
===================

Un playbook ansible de démarrage de VITAM est fourni, sous ``deployment/ansible-vitam-exploitation`` (fichier de *playbook* ``status_vitam.yml``), pour réaliser de façon automatisée les tests "autotest" intégérés dans la solution logicielle VITAM.


Procédure de maintenance / indisponibilité de VITAM
===================================================

Deux `playbooks` sont fournis dans ``deployment/ansible-vitam-exploitation`` :

- fichier de *playbook* ``stop_external.yml``, permettant d'arrêter sélectivement ingest-external et access-external
- fichier de *playbook* ``start_external.yml``, permettant de démarrer sélectivement ingest-external et access-external

Ils permettent d'empêcher l'usage de VITAM par les services versants, tout en laissant opérationnel le reste de la solution logicielle. Ces `playbooks` peuvent être utiles, voire nécessaires, dans le cadre d'une migration de données ou de maintenance de :term:`VITAM`.


Procédure de maintenance liée aux `timers systemD`
==================================================

Deux `playbooks` sont fournis dans ``deployment/ansible-vitam-exploitation`` :

- fichier de *playbook* ``stop_vitam_timers.yml``, permettant d'arrêter sélectivement les `timers systemD`
- fichier de *playbook* ``start_vitam_timers.yml``, permettant de démarrer sélectivement les `timers systemD`

Procédure de maintenance sur les composants d'administration
=============================================================

Deux `playbooks` sont fournis dans ``deployment/ansible-vitam-exploitation`` :

- fichier de *playbook* ``stop_vitam_admin.yml``, permettent d'arrêter sélectivement les composants Consul, la chaine de log (logstash / cluster elasticsearch log / kibana-log), cerebro et les docker mongo-express et elasticsearch-head
- fichier de *playbook* ``start_vitam_admin.yml``, permettent de démarrer sélectivement les composants Consul, la chaine de log (logstash / cluster elasticsearch log / kibana-log), cerebro et les docker mongo-express et elasticsearch-head

.. warning:: En passant le *playbook* d'arrêt, l'ensemble de la solution logicielle :term:`VITAM` devient inutilisable.

Procédure de maintenance des `IHM`
==================================

Deux `playbooks` sont fournis dans ``deployment/ansible-vitam-exploitation`` :

- fichier de *playbook* ``stop_vitam_ihm.yml``, permettent d'arrêter sélectivement les composants :term:`VITAM` :term:`IHM` ihm-demo et ihm-recette
- fichier de *playbook* ``start_vitam_ihm.yml``, permettent de démarrer sélectivement les composants :term:`VITAM` :term:`IHM` ihm-demo et ihm-recette

