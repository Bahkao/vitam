#%RAML 1.0
title: API-Vitam Version Alpha - Access
version: v1
baseUri: http://int.env.programmevitam.fr/external/{version}
protocols: [ HTTP ]

uses:
  StandardTypes: libraries/StandardTypes.raml
  StandardTraits: libraries/StandardTraits.raml
  AccessTypes: libraries/AccessTypes.raml
  AccessTraits: libraries/AccessTraits.raml

securitySchemes:
  Vitam: !include securitySchemes/SecuritySchemeVitam.raml
  VitamMock: !include securitySchemes/SecuritySchemeVitamMock.raml

#securedBy: [Vitam, VitamMock]

mediaType: application/json

types:
  _reserved:
    type: string

documentation:
  - title: API Access
    content: !include docs-fr/access.md

  - title: Conventions REST Générales
    content: !include docs-fr/standard.md

  - title: DSL Vitam
    content: !include docs-fr/dsl.md

  - title: Champs de l'étude Units
    content: |
      Le principe est le suivant:
        - Pas de POST (sauf X-Http-Method-Override: GET) car ceci relève de l'entrée
        - Le PUT est utilisé pour réaliser un update partiel
        - Pas de DELETE car ceci relève de l'élimination
        - GET correspond à la recherche ou l'accès selon la présence d'un body ou non
        - Un seul Object par Unit max
        - Une requête depuis un Unit signifie recherche relative depuis celui-ci (roots = this)
        - Accept: **application/json** signifie les métadonnées au format Json
        - Accept: **application/zip** signifie les métadonnées au format Json et le contenu binaire de l'Objet
        - Accept: **application/octet-stream** signifie le retour du contenu binaire de l'Object

  - title: Champs de l'étude Objects
    content: |
      Le principe proposé serait le suivant:
        - Object signifie ObjectGroup en masquant la complexité ObjectGroup/Object
        - Pas de POST (sauf X-Http-Method-Override: GET) car ceci relève de l'entrée
        - Pas de DELETE car ceci relève de l'élimination
        - GET correspond à la recherche ou l'accès selon la présence d'un body ou non
        - Une requête depuis un object signifie recherche relative depuis celui-ci (roots = this)
        - Accept: **application/json** signifie les métadonnées au format Json
        - Accept: **application/zip** signifie les métadonnées au format Json et le contenu binaire de l'Objet
        - Accept: **application/octet-stream** signifie le retour du contenu binaire de l'Object

/units:
  displayName: ArchiveUnits
  description: |
   API qui définit les requêtes pour accéder aux Unités d'archives.
   La requête utilise le langage de requête (DSL) de Vitam en entrée et retourne une liste d'Unités d'archives selon le DSL Vitam en cas de succès.
  get:
    description: Request that will return results composed of Units
    is: [AccessTraits.AccessUnitResponse]
  post:
    description: |
      Request that will return results composed of Units. The request is using POST with X-Http-Method-Override: GET
    is: [AccessTraits.AccessUnitResponse, StandardTraits.OverrideGet]
    headers:
      X-Http-Method-Override:
        required: true
  put:
    description: Request that will update a set of Units according to the query and the filter parts. The actions to be applied on the set of Units are specified in the action part of the request.
    is: [AccessTraits.AccessUpdateUnitResponse]

  /{idu}:
    displayName: ArchiveUnit
    description: |
     API qui définit les requêtes pour accéder aux Unités d'archives à partir d'une Unité donnée (racine).
     La requête utilise le langage de requête (DSL) de Vitam en entrée et retourne une liste d'Unités d'archives selon le DSL Vitam en cas de succès.
    get:
      description: Request that will return results composed of Units
      is: [AccessTraits.AccessUnitResponse]
    post:
      description: |
        Request that will return results composed of Units. The request is using POST with X-Http-Method-Override: GET
      is: [AccessTraits.AccessUnitResponse, StandardTraits.OverrideGet]
      headers:
        X-Http-Method-Override:
          required: true
    head:
      description: Test the existence of this Unit
      is: [StandardTraits.StandardOptionalHeader, StandardTraits.StandardHeadHeader,
        StandardTraits.StandardHeader204, StandardTraits.StandardHeader404,
        StandardTraits.StandardHeader417]
    put:
      description: Request that will update a set of Units according to the query and the filter parts. The actions to be applied on the set of Units are specified in the action part of the request. In this case this update is to be applied for only one Unit (the one specified in the URI).
      is: [AccessTraits.AccessUpdateUnitResponse]

    /object:
      displayName: Object of 1 ArchiveUnit
      description: |
       API qui définit les requêtes pour accéder à l'Objet d'archives associé à l'Unité  d'archives s'il existe.
       La requête utilise le langage de requête (DSL) de Vitam en entrée et retourne l'objet d'archives selon le DSL Vitam en cas de succès.
      get:
        description: Request that will return results composed of Objects (generally 1)
        is: [AccessTraits.AccessUniqueObjectQualifierResponse, AccessTraits.AccessUniqueObjectResponse]
      post:
        description: |
          Request that will return results composed of Objects (generally 1). The request is using POST with X-Http-Method-Override: GET
        is: [AccessTraits.AccessUniqueObjectQualifierResponse, AccessTraits.AccessUniqueObjectResponse, StandardTraits.OverrideGet]
        headers:
          X-Http-Method-Override:
            required: true
      head:
        description: Test the existence of this Object
        is: [AccessTraits.AccessUniqueObjectQualifierHeadResponse, StandardTraits.StandardHeadHeader,
        StandardTraits.StandardHeader204,
        StandardTraits.StandardHeader417]

/objects:
  displayName: Objects
  description: |
   API qui définit les requêtes pour accéder aux Objets d'archives.
   La requête utilise le langage de requête (DSL) de Vitam en entrée et retourne une liste d'Objets d'archives selon le DSL Vitam en cas de succès.
  get:
    description: Request that will return results composed of Objects
    is: [AccessTraits.AccessObjectResponse]
  post:
    description: |
      Request that will return results composed of Objects. The request is using POST with X-Http-Method-Override: GET
    is: [AccessTraits.AccessObjectResponse, StandardTraits.OverrideGet]
    headers:
      X-Http-Method-Override:
        required: true

  /{ido}:
    displayName: Object
    description: |
     API qui définit les requêtes pour accéder aux Objets d'archives à partir d'un Objet d'archives donné (racine).
     La requête utilise le langage de requête (DSL) de Vitam en entrée et retourne une liste d'Objets d'archives selon le DSL Vitam en cas de succès.
    get:
      description: Request that will return results composed of Objects (generally 1)
      is: [AccessTraits.AccessUniqueObjectQualifierResponse, AccessTraits.AccessObjectResponse]
    post:
      description: |
        Request that will return results composed of Objects (generally 1). The request is using POST with X-Http-Method-Override: GET
      is: [AccessTraits.AccessUniqueObjectQualifierResponse, AccessTraits.AccessObjectResponse, StandardTraits.OverrideGet]
      headers:
        X-Http-Method-Override:
          required: true
    head:
      description: Test the existence of this Object
      is: [AccessTraits.AccessUniqueObjectQualifierHeadResponse, StandardTraits.StandardHeadHeader,
      StandardTraits.StandardHeader204,
      StandardTraits.StandardHeader417]

/status:
  get:
    is: [ StandardTraits.Status, StandardTraits.StandardHeader200,
      StandardTraits.StandardHeader401, StandardTraits.StandardHeader404, StandardTraits.StandardHeader503 ]
