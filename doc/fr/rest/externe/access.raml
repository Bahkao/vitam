#%RAML 1.0

title: API-Vitam - Access
version: v1
baseUri: https://api.vitam.gouv.fr/access-external/{version}
protocols: [ HTTPS ]

uses:
  StandardTypes: libraries/StandardTypes.raml
  StandardTraits: libraries/StandardTraits.raml
  AccessTypes: libraries/AccessTypes.raml
  AccessTraits: libraries/AccessTraits.raml
  DslTypes: libraries/DslTypes.raml

mediaType: application/json

types:
  _reserved:
    type: string

documentation:
  - title: Avertissements
    content: !include docs-fr/avertissement.md

  - title: Licence
    content: !include docs-fr/license.md

  - title: API Access
    content: !include docs-fr/access.md

  - title: Champs d'application sur les Units
    content: |
      Les principes sont les suivants :
        - Pas de POST (sauf *X-Http-Method-Override: GET*) car ceci relève de l'entrée
        - Le PUT est utilisé pour réaliser un update partiel
        - Pas de DELETE car ceci relève de l'élimination
        - GET correspond à la recherche ou l'accès selon la présence d'un body ou non
        - Un seul Object par Unit max
        - Une requête depuis un Unit signifie recherche relative depuis celui-ci (roots = this)
        - Accept: **application/json** signifie les métadonnées au format Json
        - (**UNSUPPORTED**) Accept: **application/zip** signifie les métadonnées au format Json et le contenu binaire de l'Objet
        - Accept: **application/octet-stream** signifie le retour du contenu binaire de l'Object

  - title: Champs d'application sur les Objects
    content: |
      Les principes sont les suivants :
        - Object signifie ObjectGroup en masquant la complexité ObjectGroup/Object
        - Pas de POST (sauf *X-Http-Method-Override: GET*) car ceci relève de l'entrée
        - Pas de DELETE car ceci relève de l'élimination
        - GET correspond à la recherche ou l'accès selon la présence d'un body ou non
        - Une requête depuis un object signifie recherche relative depuis celui-ci (roots = this)
        - Accept: **application/json** signifie les métadonnées au format Json
        - (**UNSUPPORTED**) Accept: **application/zip** signifie les métadonnées au format Json et le contenu binaire de l'Objet
        - Accept: **application/octet-stream** signifie le retour du contenu binaire de l'Object

/units:
  displayName: ArchiveUnits
  description: |
   API qui définit les requêtes pour accéder aux Unités d'archives.
   La requête utilise le langage de requête DSL de Vitam en entrée et retourne une liste d'Unités d'archives selon le DSL Vitam en cas de succès.
  get:
    description: |
      Requête qui retourne des résultats contenant des Unités d'archives.
      La requête utilise le langage de requête DSL de type **recherche multiple (SELECT MULTIPLE)** de Vitam en entrée et retourne une liste d'Unités d'archives selon le DSL Vitam en cas de succès.
    is: [AccessTraits.AccessUnitResponse]
  post:
    description: |
      Requête qui retourne des résultats contenant des Unités d'archives. La requête utilise POST avec X-Http-Method-Override: GET
      La requête utilise le langage de requête DSL de type **recherche multiple (SELECT MULTIPLE)** de Vitam en entrée et retourne une liste d'Unités d'archives selon le DSL Vitam en cas de succès.
    is: [AccessTraits.AccessUnitResponse, StandardTraits.OverrideGet]
    headers:
      X-Http-Method-Override:
        required: true

  /{idu}:
    uriParameters:
        idu:
          required: true
          description: Identifiant de l'unité d'archive.
    displayName: ArchiveUnit
    description: |
     API qui définit les requêtes pour accéder à une Unité d'archive.
     La requête utilise le langage de requête DSL de Vitam en entrée et retourne une liste d'Unités d'archives selon le DSL Vitam en cas de succès.
    get:
      description: |
       Requête qui retourne une Unité d'archive.
       La requête utilise le langage de requête DSL de type **recherche unitaire (GET BY ID)** de Vitam en entrée et retourne une liste d'Unités d'archives contenant 1 seul résultat selon le DSL Vitam en cas de succès.
      is: [AccessTraits.AccessUniqueUnitResponse]
    post:
      description: |
        Requête qui retourne une Unité d'archives. La requête utilise POST avec X-Http-Method-Override: GET
        La requête utilise le langage de requête DSL de type **recherche unitaire  (GET BY ID)** de Vitam en entrée et retourne une liste d'Unités d'archives contenant 1 seul résultat selon le DSL Vitam en cas de succès.
      is: [AccessTraits.AccessUniqueUnitResponse, StandardTraits.OverrideGet]
      headers:
        X-Http-Method-Override:
          required: true
    put:
      description: |
        Requête qui modifie une Unité d'archive.
        La requête utilise le langage de requête DSL de type **modification unitaire (UPDATE BY ID)** de Vitam en entrée et retourne le statut de la mise à jour en résultat selon le DSL Vitam en cas de succès.
      is: [AccessTraits.AccessUpdateUnitResponse]

    /objects:
      displayName: Object of one ArchiveUnit
      description: |
       API qui définit les requêtes pour accéder à l'Objet d'archives associé à l'Unité d'archives s'il existe.
       La requête utilise le langage de requête (DSL) de Vitam en entrée et retourne l'objet d'archives selon le DSL Vitam en cas de succès.
      get:
        description: |
          Requête qui retourne le résultat contenant un Object d'archives : ses métadonnées ou un de ses objets binaires.
          Dans le cas des métadonnées, la requête utilise le langage de requête DSL de type **recherche unitaire (GET BY ID)** de Vitam en entrée.
          'Accept' header est 'application/octet-stream' (objet binaire) ou 'application/json' (métadonnées)
        is: [AccessTraits.AccessUniqueObjectQualifierResponse, AccessTraits.AccessUniqueObjectResponse]
        headers:
          Accept:
            required: true
            enum: [ "application/octet-stream", "application/json" ]
      post:
        description: |
          Requête qui retourne le résultat contenant un Object d'archives : ses métadonnées ou un de ses objets binaires.
          Dans le cas des métadonnées, la requête utilise le langage de requête DSL de type **recherche unitaire (GET BY ID)** de Vitam en entrée.
          'Accept' header est 'application/octet-stream' (objet binaire) ou 'application/json' (métadonnées)
          La requête utilise POST avec X-Http-Method-Override: GET.
        is: [AccessTraits.AccessUniqueObjectQualifierResponse, AccessTraits.AccessUniqueObjectResponse, StandardTraits.OverrideGet]
        headers:
          X-Http-Method-Override:
            required: true
          Accept:
            required: true
            enum: [ "application/octet-stream", "application/json" ]

/dipexport:
  displayName: DIP Export
  description: |
    API qui définit les requêtes pour générer un DIP (Dissemination Information Package : ZIP contenant les métadonnées et les objets) pour une sélection d'Unités d'archives.
    La requête utilise le langage de requête (DSL) de Vitam en entrée et va lancer un processus générant le DIP selon le DSL passé.
    Une autre requête pourra être exécutée par la suite pour télécharger le fichier Zip généré.
  post:
    description: |
          response : JSON asynchronous state / HTTP CODE 202 or  500 for KO
          La requête utilise le langage de requête DSL de type **recherche multiple (SELECT MULTIPLE)** de Vitam en entrée.
    is: [AccessTraits.DipCreationResponseAsync]

  /{id}/dip/:
    uriParameters:
        id:
          required: true
          description: Identifiant de l'opération d'export DIP.
    displayName: Téléchargement du DIP
    description: |
      Télécharger le DIP généré par l'opération passée en paramètre
    get:
      headers:
        Accept:
          required: true
          enum: [ "application/octet-stream" ]
      description: |
        Requête qui retourne les résultate composés des métadonnées et des objets binaires dans un fichier zip
        'Accept' header est 'application/octet-stream'
      responses:
        200:
          description: Returns the generated zip file
          body:
            application/octet-stream:
              description: Binary object as a zip file
        412:
          description: Precondition Failed, some predicates are incorrect, therefore the operation is not possible
          body:
            application/json:

/:
  displayName: Endpoints
  description: |
   API qui liste les endpoints de la ressource /access-external/{version}.
  options:
    description: |
      Requête qui retourne la liste des endpoints
    is: [ StandardTraits.StandardHeader200,
      StandardTraits.StandardHeader404, StandardTraits.StandardHeader503 ]

/status:
  get:
    is: [ StandardTraits.StandardHeader204,
      StandardTraits.StandardHeader401, StandardTraits.StandardHeader404, StandardTraits.StandardHeader503 ]
