#%RAML 1.0

title: API-Vitam - Administration Management
version: v1
baseUri: https://api.vitam.gouv.fr/admin-external/{version}
protocols: [ HTTPS ]

uses:
  StandardTypes: libraries/StandardTypes.raml
  AccessTypes: libraries/AccessTypes.raml
  StandardTraits: libraries/StandardTraits.raml
  AdminTraits: libraries/AdminTraits.raml
  IngestTypes: libraries/IngestTypes.raml
  IngestTraits: libraries/IngestTraits.raml
  DslTypes: libraries/DslTypes.raml

mediaType: application/json

types:
  _reserved:
    type: string

documentation:
  - title: Avertissements
    content: !include docs-fr/avertissement.md

  - title: Licence
    content: !include docs-fr/license.md

  - title: API Registre des fonds
    content: !include docs-fr/access-register.md

  - title: API Administration
    content: !include docs-fr/admin-functional.md

/formats:
  displayName: FileFormats
  description: |
   API qui définit les requêtes pour accéder au référentiel des Formats.
   La requête utilise le langage de requête (DSL) de Vitam en entrée et retourne une liste de formats selon le DSL Vitam en cas de succès.
  get:
    description: |
      Requête qui retourne des résultats contenant des Formats.
      La requête utilise le langage de requête DSL de type **recherche simple (SELECT SINGLE)** de Vitam en entrée et retourne une liste de Formats selon le DSL Vitam en cas de succès.
    is: [AdminTraits.AdminListingResponse]
  post:
    description: |
      Requête qui retourne des résultats contenant des Formats si la requête utilise POST avec X-Http-Method-Override: GET.
      Si il n'y a pas de X-Http-Method-Override, la requête importe à partir d'un fichier PRONOM (see TNA) un nouveau référentiel.
    is: [AdminTraits.AdminListingResponse, StandardTraits.OverrideGet,
       AdminTraits.AdminUpload, StandardTraits.UploadFileOptionalHeader]
    headers:
      X-Http-Method-Override:
        required: false

  /{idf}:
    uriParameters:
        idf:
          required: true
          description: |
            Identifiant du format
    displayName: FileFormat
    description: |
     API qui définit les requêtes pour accéder à un format dans le référentiel des Formats.
    get:
      description: Retourne une liste de Formats contenant 1 seul résultat en cas de succès.
      is: [AdminTraits.AdminItemResponse]
    post:
      description: |
        Retourne une liste de Formats contenant 1 seul résultat en cas de succès. La requête utilise POST avec X-Http-Method-Override: GET
      is: [AdminTraits.AdminItemResponse, StandardTraits.OverrideGet]
      headers:
        X-Http-Method-Override:
          required: true

/formatsfilecheck:
  displayName: FileFormats check
  description: |
   API qui permet de vérifier que le fichier est correct, et peut être importé.
  post:
    description: |
      Vérifie si un fichier source PRONOM (see TNA) peut être importé comme nouveau Référentiel.
    is: [AdminTraits.AdminUpload]

/rules:
  displayName: Rules
  description: |
   API qui définit les requêtes pour accéder au référentiel des Règles de gestion.
   La requête utilise le langage de requête (DSL) de Vitam en entrée et retourne une liste de règles selon le DSL Vitam en cas de succès.
  get:
    description: |
      Requête qui retourne des résultats contenant des Règles de gestion.
      La requête utilise le langage de requête DSL de type **recherche simple (SELECT SINGLE)** de Vitam en entrée et retourne une liste de Règles de gestion selon le DSL Vitam en cas de succès.
    is: [AdminTraits.AdminListingResponse]
  post:
    description: |
      Requête qui retourne des résultats contenant des Règles de gestion si la requête utilise POST avec X-Http-Method-Override: GET.
      Si il n'y a pas de X-Http-Method-Override, la requête importe à partir d'un fichier CSV contenant les définitions des Règles de gestion un nouveau référentiel.
    is: [AdminTraits.AdminListingResponse, StandardTraits.OverrideGet, AdminTraits.AdminUpload, StandardTraits.UploadFileOptionalHeader]
    headers:
      X-Http-Method-Override:
        required: false

  /{idr}:
    displayName: Rule
    uriParameters:
        idr:
          required: true
          description: |
            Identifiant de la règle de gestion
    description: |
     API qui définit les requêtes pour accéder à une Règle dans le référentiel des Règles de gestion.
    get:
      description: |
        Retourne une liste de Règles de gestion contenant 1 seul résultat en cas de succès.
      is: [AdminTraits.AdminItemResponse]
    post:
      description: |
        Retourne une liste de Règles de gestion contenant 1 seul résultat en cas de succès. La requête utilise POST avec X-Http-Method-Override: GET
      is: [AdminTraits.AdminItemResponse, StandardTraits.OverrideGet]
      headers:
        X-Http-Method-Override:
          required: true

/rulesfilecheck:
  displayName: FileRules check
  description: |
   API qui permet de vérifier que le fichier est correct, et peut être importé.
  put:
    description: |
      Vérifie si un fichier source CSV contenant les définitions des Règles de gestion peut être importé comme nouveau Référentiel.
    is: [AdminTraits.AdminUpload]

/rulesreport/{idop}:
  displayName: Rules report
  uriParameters:
        idop:
          required: true
          description: |
            Identifiant de l'opération concernée
  description: |
     Permet de télécharger un objet représentant le rapport d'import des règles en fonction de l'id de l'opération
  is: [ AdminTraits.AdminFileItemResponse ]
  get:
     description:  |
      Permet de télécharger un objet représentant le rapport d'import des règles en fonction de l'id de l'opération
  post:
    description: |
      Requête qui permet de télécharger un objet représentant le rapport d'import des règles en fonction de l'id de l'opération. La requête utilise POST avec X-Http-Method-Override: GET
    is: [AdminTraits.AdminItemResponse, StandardTraits.OverrideGet]
    headers:
      X-Http-Method-Override:
        required: true

/accessionregisters:
  displayName: AccessionRegisters
  description: |
   API qui définit les requêtes pour accéder au Registre des Fonds.
   La requête utilise le langage de requête (DSL) de Vitam en entrée et retourne une liste de registres selon le DSL Vitam en cas de succès.
  get:
    description: |
      Requête qui retourne des résultats contenant des Registres de Fonds.
      La requête utilise le langage de requête DSL de type **recherche simple (SELECT SINGLE)** de Vitam en entrée et retourne une liste de Registres de Fonds selon le DSL Vitam en cas de succès.
    is: [AdminTraits.AdminListingResponse]
  post:
    description: |
      Requête qui retourne des résultats contenant des Registres de Fonds. La requête utilise POST avec X-Http-Method-Override: GET.
      La requête utilise le langage de requête DSL de type **recherche simple (SELECT SINGLE)** de Vitam en entrée et retourne une liste de Registres de Fonds selon le DSL Vitam en cas de succès.
    is: [AdminTraits.AdminListingResponse, StandardTraits.OverrideGet]
    headers:
      X-Http-Method-Override:
        required: true

  /{idar}/accessionregisterdetails:
    displayName: AccessionRegisterDetail
    uriParameters:
      idar:
        required: true
        description: |
          Identifiant du registre des fonds
    description: |
      API qui définit les requêtes pour accéder au détail d'un Fond dans le Registre des Fonds.
    get:
      description: |
        Retourne une liste de Détails d'un Registre de Fonds contenant 1 seul résultat en cas de succès.
        La requête utilise le langage de requête DSL de type **recherche simple (SELECT SINGLE)** de Vitam en entrée.
      is: [AdminTraits.AdminListingResponse]
    post:
      description: |
        Retourne une liste de Détails d'un Registre de Fonds contenant 1 seul résultat en cas de succès. La requête utilise POST avec X-Http-Method-Override: GET.
        La requête utilise le langage de requête DSL de type **recherche simple (SELECT SINGLE)** de Vitam en entrée.
      is: [AdminTraits.AdminListingResponse, StandardTraits.OverrideGet]
      headers:
        X-Http-Method-Override:
          required: true



/accesscontracts:
  displayName: Access contracts
  description: |
     API qui définit les requêtes pour accéder aux contracs d'accès
     La requête utilise le langage de requête (DSL) de Vitam en entrée et retourne une liste de contrats d'accès selon le DSL Vitam en cas de succès.
  get:
    description: |
      Requête qui retourne des résultats contenant des Contrats d'accès.
      La requête utilise le langage de requête DSL de type **recherche simple (SELECT SINGLE)** de Vitam en entrée et retourne une liste de Contrats d'accès selon le DSL Vitam en cas de succès.
    is: [AdminTraits.AdminListingResponse]
  post:
    description: |
      Requête qui retourne des résultats contenant des Contrats d'accès si la requête utilise POST avec X-Http-Method-Override: GET.
      Si il n'y a pas de X-Http-Method-Override, la requête importe un ensemble de contrats d'accès qui sont sauvegardés et indexés en cas de succès
    is: [AdminTraits.AdminListingResponse, StandardTraits.OverrideGet, AdminTraits.AdminUpload]
    headers:
      X-Http-Method-Override:
        required: false

  /{idac}:
    uriParameters:
        idac:
          required: true
          description: |
            Identifiant du contrat d'accès
    displayName: Access contract
    description: |
     API qui permet de mettre à jour un contrat d'accès via une requête de mise à jour ou d'accéder à un contrat d'accès
    get:
      description: |
         Retourne une liste de Contrats d'accès contenant 1 seul résultat en cas de succès.
      is: [AdminTraits.AdminListingResponse]
    put:
      description: |
        Requête qui modifie un Contrat d'accès.
        La requête utilise le langage de requête DSL de type **modification unitaire (UPDATE BY ID)** de Vitam en entrée et retourne le statut de la mise à jour en résultat selon le DSL Vitam en cas de succès.
      is: [AdminTraits.AdminUpload]

/ingestcontracts:
  displayName: Ingest contracts
  description: |
     API qui définit les requêtes pour accéder aux contrats d'entrée
     La requête utilise le langage de requête (DSL) de Vitam en entrée et retourne une liste de contrats d'entrée selon le DSL Vitam en cas de succès.
  get:
    description: |
      Requête qui retourne des résultats contenant des Contrats d'entrée.
      La requête utilise le langage de requête DSL de type **recherche simple (SELECT SINGLE)** de Vitam en entrée et retourne une liste de Contrats d'entrée selon le DSL Vitam en cas de succès.
    is: [AdminTraits.AdminListingResponse]
  post:
    description: |
      Requête qui retourne des résultats contenant des Contrats d'entrée si la requête utilise POST avec X-Http-Method-Override: GET.
      Si il n'y a pas de X-Http-Method-Override, la requête importe un ensemble de contrats d'entrée qui sont sauvegardés et indexés en cas de succès
    is: [AdminTraits.AdminListingResponse, StandardTraits.OverrideGet, AdminTraits.AdminUpload]
    headers:
      X-Http-Method-Override:
        required: false

  /{idic}:
    uriParameters:
        idic:
          required: true
          description: |
            Identifiant du contrat d'entrée
    displayName: Ingest Contract
    description: |
      API qui permet de mettre à jour un contrat d'entrée via une requête de mise à jour ou d'accéder à un contrat d'entrée
    get:
      description: |
        Retourne une liste de Contrats d'entrée contenant 1 seul résultat en cas de succès.
      is: [AdminTraits.AdminListingResponse]
    put:
       description: |
        Requête qui modifie un Contrat d'entrée.
        La requête utilise le langage de requête DSL de type **modification unitaire (UPDATE BY ID)** de Vitam en entrée et retourne le statut de la mise à jour en résultat selon le DSL Vitam en cas de succès.
       is: [AdminTraits.AdminUpload]

/contexts:
  displayName: Contexts
  description: |
     API qui définit les requêtes pour accéder aux contextes d'applications externes
     La requête utilise le langage de requête (DSL) de Vitam en entrée et retourne une liste de contextes selon le DSL Vitam en cas de succès.
  get:
    description: |
      Requête qui retourne des résultats contenant des Contextes.
      La requête utilise le langage de requête DSL de type **recherche simple (SELECT SINGLE)** de Vitam en entrée et retourne une liste de Contextes selon le DSL Vitam en cas de succès.
    is: [AdminTraits.AdminListingResponse]
  post:
    description: |
      Requête qui retourne des résultats contenant des Contextes si la requête utilise POST avec X-Http-Method-Override: GET.
      Si il n'y a pas de X-Http-Method-Override, la requête importe un ensemble de contextes qui sont sauvegardés et indexés en cas de succès
    is: [AdminTraits.AdminListingResponse, StandardTraits.OverrideGet, AdminTraits.AdminUpload]
    headers:
      X-Http-Method-Override:
        required: false

  /{idc}:
    uriParameters:
        idc:
          required: true
          description: |
            Identifiant du contexte
    displayName: Context
    description: |
      API qui permet de mettre à jour un contexte via une requête de mise à jour ou d'accéder à un contexte
    get:
      description: |
         Retourne une liste de Contexte contenant 1 seul résultat en cas de succès.
      is: [AdminTraits.AdminListingResponse]
    put:
       description: |
        Requête qui modifie un Contexte.
        La requête utilise le langage de requête DSL de type **modification unitaire (UPDATE BY ID)** de Vitam en entrée et retourne le statut de la mise à jour en résultat selon le DSL Vitam en cas de succès.
       is: [AdminTraits.AdminUpload]

/profiles:
  displayName: Profiles
  description: |
    API qui définit les requêtes pour accéder aux profils
    La requête utilise le langage de requête (DSL) de Vitam en entrée et retourne une liste de profils selon le DSL Vitam en cas de succès.
  get:
    description: |
      Requête qui retourne des résultats contenant des Profils.
      La requête utilise le langage de requête DSL de type **recherche simple (SELECT SINGLE)** de Vitam en entrée et retourne une liste de Profils selon le DSL Vitam en cas de succès.
    is: [AdminTraits.AdminListingResponse]
  post:
    description: |
      Requête qui retourne des résultats contenant des Profils si la requête utilise POST avec X-Http-Method-Override: GET.
      Si il n'y a pas de X-Http-Method-Override, la requête importe un ensemble de profils qui sont sauvegardés et indexés en cas de succès
    is: [AdminTraits.AdminItemResponse, StandardTraits.OverrideGet, AdminTraits.AdminUpload]
    headers:
      X-Http-Method-Override:
        required: false

  /{idp}:
    uriParameters:
        idp:
          required: true
          description: |
            Identifiant du profil
    displayName: Profil
    description: |
      API qui permet de mettre à jour un profil via une requête de mise à jour ou d'accéder à un profil
    get:
      description: |
         API qui définit les requêtes pour accéder à un profil ou à son schéma XSD ou RNG
      is: [AdminTraits.AdminListingResponse, AdminTraits.AdminFileItemResponse]
    put:
       description: |
        Requête qui modifie un Profil.
        La requête utilise le langage de requête DSL de type **modification unitaire (UPDATE BY ID)** de Vitam en entrée et retourne le statut de la mise à jour en résultat selon le DSL Vitam en cas de succès.
       is: [AdminTraits.AdminUpload]
    post:
       description: |
          Upload un profil au format XSD ou RNG
       is: [AdminTraits.AdminProfileUpload]

/archiveunitprofiles:
  displayName: Archive Unit Profiles
  description: |
    API qui définit les requêtes pour accéder aux document types
    La requête utilise le langage de requête (DSL) de Vitam en entrée et retourne une liste de document types selon le DSL Vitam en cas de succès.
  get:
    description: |
      Requête qui retourne des résultats contenant des Document types.
      La requête utilise le langage de requête DSL de type **recherche simple (SELECT SINGLE)** de Vitam en entrée et retourne une liste de Document types selon le DSL Vitam en cas de succès.
    is: [AdminTraits.AdminListingResponse]
  post:
    description: |
      La requête importe un ensemble de Document types qui sont sauvegardés et indexés en cas de succès
    is: [AdminTraits.AdminUpload]

  /{idp}:
    uriParameters:
        idp:
          required: true
          description: |
            Identifiant du document type
    displayName: Archive Unit Profile
    description: |
      API qui permet de mettre à jour un document type via une requête de mise à jour ou d'accéder à un document type
    get:
      description: |
         API qui définit les requêtes pour accéder à un document type via son ID
      is: [AdminTraits.AdminListingResponse, AdminTraits.AdminItemResponse]
    put:
       description: |
        Requête qui modifie un Document type.
        La requête utilise le langage de requête DSL de type **modification unitaire (UPDATE BY ID)** de Vitam en entrée et retourne le statut de la mise à jour en résultat selon le DSL Vitam en cas de succès.
       is: [AdminTraits.AdminUpload]

/securityprofiles:
  displayName: Security Profiles
  description: |
     API qui définit les requêtes pour accéder aux Profils de Sécurité.
     La requête utilise le langage de requête (DSL) de Vitam en entrée et retourne une liste de profils de sécurité selon le DSL Vitam en cas de succès.
  get:
    description: |
      Requête qui retourne des résultats contenant des Profils de sécurité.
      La requête utilise le langage de requête DSL de type **recherche simple (SELECT SINGLE)** de Vitam en entrée et retourne une liste de Profils de sécurité selon le DSL Vitam en cas de succès.
    is: [AdminTraits.AdminListingResponse]
  post:
    description: |
      Requête qui retourne des résultats contenant des Profils de sécurité si la requête utilise POST avec X-Http-Method-Override: GET.
      Si il n'y a pas de X-Http-Method-Override, la requête importe un nouveau Profil de sécurité.
    is: [AdminTraits.AdminListingResponse, StandardTraits.OverrideGet, AdminTraits.AdminUpload]
    headers:
      X-Http-Method-Override:
        required: false

  /{identifier}:
    uriParameters:
        identifier:
          required: true
          description: |
            Identifiant du profil de sécurité
    displayName: Security Profiles
    description: |
     API qui permet de mettre à jour un profil de sécurité via une requête de mise à jour ou d'accéder à un profil de sécurité
    get:
      description: |
        Retourne une liste de Profils de sécurité contenant 1 seul résultat en cas de succès.
      is: [AdminTraits.AdminItemResponse]
    put:
       description: |
        Requête qui modifie un Profil de sécurité.
        La requête utilise le langage de requête DSL de type **modification unitaire (UPDATE BY ID)** de Vitam en entrée et retourne le statut de la mise à jour en résultat selon le DSL Vitam en cas de succès.
       is: [AdminTraits.AdminUpload]
    post:
      description: |
        Retourne une liste de Profils de sécurité contenant 1 seul résultat en cas de succès. La requête utilise POST avec X-Http-Method-Override: GET.
      is: [AdminTraits.AdminItemResponse, StandardTraits.OverrideGet]
      headers:
        X-Http-Method-Override:
          required: true

/agencies:
  displayName: Agencies
  description: |
   API qui définit les requêtes pour accéder au référentiel des Agencies.
   La requête utilise le langage de requête (DSL) de Vitam en entrée et retourne une liste d'agencies selon le DSL Vitam en cas de succès.
  get:
    description: |
      Requête qui retourne des résultats contenant des Agencies.
      La requête utilise le langage de requête DSL de type **recherche simple (SELECT SINGLE)** de Vitam en entrée et retourne une liste d'Agencies selon le DSL Vitam en cas de succès.
    is: [AdminTraits.AdminListingResponse]
  post:
    description: |
      Request that will return results composed of Agencies si la requête utilise POST avec X-Http-Method-Override: GET.
      Si il n'y a pas de X-Http-Method-Override, la requête importe un nouveau Référentiel d'Agencies.
    is: [AdminTraits.AdminListingResponse, StandardTraits.OverrideGet,
       AdminTraits.AdminUpload, StandardTraits.UploadFileOptionalHeader]
    headers:
      X-Http-Method-Override:
        required: false

  /{ida}:
    uriParameters:
        ida:
          required: true
          description: |
            Identifiant de l'agency
    displayName: Agency
    description: |
     API qui définit les requêtes pour accéder à un Agency dans le référentiel des Agencies.
    get:
      description: |
        Retourne une liste d'Agencies contenant 1 seul résultat en cas de succès.
      is: [AdminTraits.AdminItemResponse]
    post:
      description: |
        Retourne une liste d'Agencies contenant 1 seul résultat en cas de succès. La requête utilise POST avec X-Http-Method-Override: GET.
      is: [AdminTraits.AdminItemResponse, StandardTraits.OverrideGet]
      headers:
        X-Http-Method-Override:
          required: true

/agenciesfilecheck:
  displayName: FileAgencies check
  description: |
   API qui permet de vérifier que le fichier est correct, et peut être importé.
  post:
    description: |
      Vérifie si un fichier source Agencies (see TNA) peut être importé comme nouveau Référentiel.
    is: [AdminTraits.AdminUpload]

/operations:
  # root endpoint request
  displayName: Operations
  description: |
    Administration des Workflows Asynchrones (opérations). Certaines opérations devraient être limitées aux seuls administrateurs car elles impactent le back-office.
  is: [ StandardTraits.StandardOptionalHeader,
  StandardTraits.StandardHeader401, StandardTraits.StandardHeader404,
  StandardTraits.StandardHeader409, StandardTraits.StandardHeader412 ]
  get:
    description: |
      Requête qui retourne des résultats contenant des opérations.
    is: [IngestTraits.IngestListingResponse ]

  /{idop}:
    uriParameters:
        idop:
          required: true
          description: |
            Identifiant de l'opération
    displayName: Operation
    is: [ StandardTraits.StandardOptionalHeader,
    StandardTraits.StandardHeader401, StandardTraits.StandardHeader404,
    StandardTraits.StandardHeader409, StandardTraits.StandardHeader412 ]
    get:
      description:  |
        Permet de récupérer le statut de l'opération dont l'identifiant est passée en paramètre
    put:
      description: |
       Permet de mettre à jour une opération lancée en précisant l'action à exécuter dans le header X-Action-Id; PAUSE pour la mettre en pause,
       NEXT pour exécuter l'étape suivante, RESUME pour continuer l'exécution de l'opération jusqu'au bout.
       **Cette opération ne devrait être ouverte qu'aux administrateurs**
      headers:
        X-Action:
          required: true
          description: |
            Permet d'influer sur le workflow. RESUME permet de poursuivre le workflow jusqu'à la fin. NEXT permet d'exécuter la prochaine étape pour ensuite se mettre en pause. PAUSE permet de demander la mise en pause du workflow à la fin de l'étape en cours. REPLAY permet de rejouer la dernière étape exécutée.
          enum: [ "RESUME", "NEXT", "PAUSE", "REPLAY" ]

    delete:
     description: |
       Permet d'annuler un workflow lancé.
       **Cette opération ne devrait être ouverte qu'aux administrateurs**
    head:
      description: |
        Permet d'obtenir le statut d'une opération
      responses:
       200:
         description: |
           L'opération existe et est terminé, le statut est retourné
       202:
         description: |
           L'opération existe mais n'est pas terminée
       404:
         description: |
           Opération introuvable

/workflows:
  # root endpoint request
  displayName: Workflows
  description: |
    Gestion des définitions des Workflows disponibles.

  is: [ StandardTraits.StandardOptionalHeader,
    StandardTraits.StandardHeader401, StandardTraits.StandardHeader404,
    StandardTraits.StandardHeader409, StandardTraits.StandardHeader412 ]
  get:
    description: |
      Requête qui retourne des résultats contenant des définitions de workflow.
    is: [IngestTraits.IngestWorkflowsResponse ]

/audits:
  # root endpoint request
  displayName: Audits
  description: |
    API d'audits (Ingest). Ce point d'entrée permet de créer une opération d'audit.
    Une opération d'audit est volatile, c'est à dire qu'elle disparaîtra dès qu'elle sera terminée.
    Sa terminaison est liée à la production du rapport et sa récupération par le service ayant effectué l'opération.

  is: [ StandardTraits.StandardOptionalHeader,
    StandardTraits.StandardHeader401, StandardTraits.StandardHeader404,
    StandardTraits.StandardHeader409, StandardTraits.StandardHeader412 ]
  post:
    description: |
        response : JSON asynchronous state / HTTP CODE 200 or  500 for KO
    is: [AdminTraits.AuditCreationResponseAsync]

/traceability:
  displayName: Traceability
  description: |
    API de sécurisation des journaux. Ce point d'entrée permet de vérifier et télécharger une opération de sécurisation des journaux
  /{idop}/datafiles:
    displayName: Téléchargement de la sécurisation des journaux
    uriParameters:
          idop:
            required: true
            description: |
              Identifiant de l'opération concernée
    description: |
       Permet de télécharger un objet représentant la sécurisation des journaux d'opérations
    is: [ AdminTraits.AdminFileItemResponse ]
    get:
       description:  |
        Permet de télécharger un objet représentant la sécurisation des journaux d'opérations en fonction de l'identificant de l'opération à l'origine.

/traceabilitychecks:
  displayName: Vérification de la sécurisation des journaux
  description: |
    Permet de lancer un processus de vérification d'une opération de sécurisation
  post:
    description: |
      response : JSON asynchronous state / HTTP CODE 200 or  500 for KO
      La requête utilise le langage de requête DSL de type **recherche simple (SELECT SINGLE)** de Vitam en entrée.
    is: [AdminTraits.TraceabilityCheckResponseAsync]

    
/:
  displayName: Endpoints
  description: |
   API qui liste les endpoints de la ressource /admin-external/{version}.
  options:
    description: |
      Request that will return list of endpoints
    is: [ StandardTraits.StandardHeader200,
      StandardTraits.StandardHeader404, StandardTraits.StandardHeader503 ]

/status:
  get:
    is: [ StandardTraits.StandardHeader204,
      StandardTraits.StandardHeader401, StandardTraits.StandardHeader404, StandardTraits.StandardHeader503 ]
