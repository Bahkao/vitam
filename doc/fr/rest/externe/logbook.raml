#%RAML 1.0

title: API-Vitam - Logbook
version: v1
baseUri: https://api.vitam.gouv.fr/access-external/{version}
protocols: [ HTTPS ]

uses:
  StandardTypes: libraries/StandardTypes.raml
  StandardTraits: libraries/StandardTraits.raml
  LogbookTypes: libraries/LogbookTypes.raml
  LogbookTraits: libraries/LogbookTraits.raml
  DslTypes: libraries/DslTypes.raml

mediaType: application/json

types:
  _reserved:
    type: string

documentation:
  - title: Avertissements
    content: !include docs-fr/avertissement.md

  - title: Licence
    content: !include docs-fr/license.md

  - title: API Logbook
    content: !include docs-fr/logbook.md

/logbookoperations:
  displayName: Operations Logbooks
  description: |
    API d'accès aux Journaux d'opérations (Logbooks Operations). Ce point d'entrée permet de chercher une opération (entrée, audit, élimination, préservation, ...).
    La recherche sur cette API retourne pour chaque opération, la première entrée (la création à la date de démarrage de l'opération) et la dernière entrée (dans l'état connu par le journal à la date de la dernière étape de cette opération).
  get:
    description: |
      Response model for the listing of Logbook operations.
    is: [LogbookTraits.OperationListingResponse ]
  post:
    description: |
      Response model for the listing of Logbook operations. The request is using POST with X-Http-Method-Override: GET
    is: [LogbookTraits.OperationListingResponse, StandardTraits.OverrideGet]


  /{idOp}:
    displayName: Operation Logbook
    description: |
      Accès à une opération.
      La requête utilise le langage de requête (DSL) de Vitam en entrée et retourne les informations spécifiées (projection indiquée dans la requête) pour l'opération donnée.
    uriParameters:
      idOp:
        required: true
        description: Identifiant de l'opération
    get:
      description: Response model for one Logbook operation item.
      is: [LogbookTraits.OperationItemResponse]
    post:
      description: |
        Response model for one Logbook operation item. The request is using POST with X-Http-Method-Override: GET
      is: [LogbookTraits.OperationItemResponse, StandardTraits.OverrideGet]

/logbookunitlifecycles:
  displayName: Unit Life Cycle Logbook
  description: |
    API d'accès aux Journaux de cycle de vie des Units.

    La recherche sur cette API retourne uniquement la première ligne et la dernière connue pour chaque journal du cycle de vie.

  /{id_lfc}:
    uriParameters:
      id_lfc:
        required: true
        description: Identifiant du cycle de vie
    displayName: Unit Life Cycle
    description: |
      Accès à un cycle de vie (Unit).
      La requête utilise le langage de requête (DSL) de Vitam en entrée et retourne les informations spécifiées (projection indiquée dans la requête) pour le cycle de vie recherché.
      Le cycle de vie concerné est retourné en fonction de la projection (si la projection n'est pas indiquée, le cycle de vie est retourné complet).
    get:
      description : |
        Response model for one Logbook unit life cycle item
      is: [LogbookTraits.UnitLifeCycleItemResponse]
    post:
      description : |
        Response model for one Logbook unit life cycle item. The request is using POST with X-Http-Method-Override: GET
      is: [LogbookTraits.UnitLifeCycleItemResponse, StandardTraits.OverrideGet]

/objectlifecycles:
  displayName: Object Life Cycle Logbook
  description: |
    API d'accès aux Journaux du Cycle de Vie des archives (Object).

    La recherche sur cette API retourne uniquement la première ligne et la dernière connue pour chaque journal du cycle de vie.

  /{id_lfc}:
    uriParameters:
      id_lfc:
        required: true
        description: Identifiant du cycle de vie
    displayName: Object Life Cycle
    description: |
      Accès à un cycle de vie (Object).
      La requête utilise le langage de requête (DSL) de Vitam en entrée et retourne les informations spécifiées (projection indiquée dans la requête) pour le cycle de vie recherché.
      Le cycle de vie concerné est retourné en fonction de la projection (si la projection n'est pas indiquée, le cycle de vie est retourné complet).
    get:
      description : Response model for one Logbook object life cycle item
      is: [LogbookTraits.ObjectLifeCycleItemResponse]
    post:
      description : |
        Response model for one Logbook object life cycle item. The request is using POST with X-Http-Method-Override: GET
      is: [LogbookTraits.ObjectLifeCycleItemResponse, StandardTraits.OverrideGet]

/:
  displayName: Endpoints
  description: |
   API qui liste les endpoints de la ressource /access-external/{version}.
  options:
    description: |
      Request that will return list of endpoints
    is: [ StandardTraits.StandardHeader200,
      StandardTraits.StandardHeader404, StandardTraits.StandardHeader503 ]

/status:
  get:
    is: [ StandardTraits.StandardHeader204,
      StandardTraits.StandardHeader404, StandardTraits.StandardHeader503 ]
