#%RAML 0.8
title: Moteur d'Execution API
baseUri: http://server/exec/api/{version}
version: v0.0.1
protocols: [ HTTP, HTTPS ]

mediaType: application/json

traits: !include traits/Traits.raml

resourceTypes: !include resourceTypes/ResourceTypes.raml

/operations:
  # root endpoint request
  displayName: Operations
  description: Administration des Workflows Asynchrones (opérations).
  type: { collection-write: { createModel: genericObject, exampleModel: !include ../samples/genericSample.sample, answearModel: genericObject, exampleAnswearModel: !include ../samples/genericSample.sample } }
  is: [ standardErrors ]
  post:
    description: Permet de soumettre une opération (workflow + contexte + lot)
  patch:
    description: Permet si nécessaire d'interagir avec une opération (pause, reprise, repriorisation par exemple)

  /{id_async}:
    displayName: Operation
    type: { collection-item-write: { createModel: task_status, exampleModel: !include ../samples/task_status.sample, answearModel: async_status, exampleAnswearModel: !include ../samples/async_status.sample } }
    is: [ standardErrors ]
    patch:
      description: Permet si nécessaire d'interagir avec une opération (pause, reprise, repriorisation par exemple)

    /result:
      displayName: Operation Result
      description: Permet de récupérer le statut (qui donne accès aux résultats) d'un Workflow asynchrone (si il en a).
      type: base
      is: [ standardErrors ]
      get:
        description: Récupère le statut.
        responses:
          200:
            body:
              application/json:
                schema: genericObject
                example: !include ../samples/genericSample.sample

    /units:
      displayName: Workflow for Units
      description: API de gestion des _Units_ dans le cadre d'une opération.
      type: { complexCollection: { queryModel: query, exampleQueryModel: !include ../samples/query.sample, answearModel: answearList, exampleAnswearModel: !include ../samples/answearList.sample, updateModel: update, exampleUpdateModel: !include ../samples/update.sample, createModel: create, exampleCreateModel: !include ../samples/create.sample } }
      is: [ standardErrors ]
      get:
        description: Permet de sélectionner un sous-ensemble de statut de _Units_, sélection limitée aux _Units_ composant la transaction courante.
      post:
        description: Ajoute un sous-ensemble de nouvelles _Units_.
      delete:
        description: Efface un sous-ensemble de _Units_ (applicable uniquement aux _Units_ nouvellement créées dans la transaction courante).

      /{id_unit}:
        displayName: Workflow for Unit
        description: API permettant l'accès direct à un statut d'une _Unit_.
        type: { collection-item-write: { createModel: genericObject, exampleModel: !include ../samples/sampleUnit.sample, answearModel: genericObject, exampleAnswearModel: !include ../samples/sampleUnit.sample } }
        is: [ standardErrors ]
        get:
          description: Accès à un statut d'une _Unit_.
        patch:
          description: Mise à jour du résultat par un Worker
        delete:
          description: Permet le retrait d'une _Unit_ dans la transaction.

    /object_groups:
      displayName: Workflow for Object Groups
      description: API de gestion des _Groupe_ d'_Objects_ dans le cadre d'une opération.
      type: object-group-item
      is: [ standardErrors ]
      delete:
        description: Efface un sous-ensemble de _Groupe_ d'_Objects_.
      post:
        description: Ajoute un _Groupe_ d'_Objects_.

      /{id_object_group}:
        displayName: Workflow for Unit Object Group
        description: API permettant l'accès direct à un _Groupe_ d'_Objects_.
        type: { collection-item-write: { createModel: genericObject, exampleModel: !include ../samples/sampleUnit.sample, answearModel: genericObject, exampleAnswearModel: !include ../samples/sampleUnit.sample } }
        is: [ standardErrors ]
        get:
          description: Accès à un statut d'un _Groupe_ d'_Objects_.
        patch:
          description: Mise à jour du résultat par un Worker
        delete:
          description: Permet le retrait d'une _Groupe_ d'_Objects_ dans la transaction.


/worker_classes:
  # root endpoint request
  displayName: Worker's Classes
  description: Administration des Classes de Workers.
  type: { collection-write: { createModel: genericObject, exampleModel: !include ../samples/genericSample.sample, answearModel: genericObject, exampleAnswearModel: !include ../samples/genericSample.sample } }
  is: [ standardErrors ]
  post:
    description: Permet de créer une classe de Worker (utile ?)

  /{id_class}:
    displayName: Worker Class
    type: { collection-item-write: { createModel: task_status, exampleModel: !include ../samples/task_status.sample, answearModel: async_status, exampleAnswearModel: !include ../samples/async_status.sample } }
    is: [ standardErrors ]
    patch:
      description: Permet si nécessaire d'interagir avec la classe

    /workers:
      displayName: Workers
      description: API de gestion des Workers d'une Classe.
      type: { complexCollection: { queryModel: query, exampleQueryModel: !include ../samples/query.sample, answearModel: answearList, exampleAnswearModel: !include ../samples/answearList.sample, updateModel: update, exampleUpdateModel: !include ../samples/update.sample, createModel: create, exampleCreateModel: !include ../samples/create.sample } }
      is: [ standardErrors ]
      get:
        description: Permet de sélectionner un sous-ensemble de Workers.
      post:
        description: Ajoute un nouveau Worker (abonnement) dans une Classe.
      delete:
        description: Efface un sous-ensemble de Workers.

      /{id_worker}:
        displayName: Worker
        description: API permettant la gestion d'un Worker.
        type: { collection-item-write: { createModel: genericObject, exampleModel: !include ../samples/sampleUnit.sample, answearModel: genericObject, exampleAnswearModel: !include ../samples/sampleUnit.sample } }
        is: [ standardErrors ]
        get:
          description: Accès à un statut d'un Worker (vision Moteur).
        patch:
          description: Mise à jour d'un paramètre pour ce Worker (vision Moteur)
        delete:
          description: Permet le retrait d'un Worker à cete Classe (désabonnement).

/status:
  displayName: Executor Engine Status
  description: Statut du moteur d'exécution, comme sa charge actuelle.
  type: { collection }
  is: [ standardErrors ]
