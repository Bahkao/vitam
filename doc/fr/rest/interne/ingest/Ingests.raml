# root endpoint request
displayName: Ingests
description: API de versement (Ingest). Ce point d'entrée permet de chercher ou de créer une transaction de versement. Une transaction de versement est volatile, c'est à dire qu'elle disparaîtra dès qu'elle sera terminée.
type: { collection-write: { createModel: genericObject, exampleModel: !include ../samples/genericSample.sample, answearModel: genericObject, exampleAnswearModel: !include ../samples/genericSample.sample } }
is: [ standardErrors ]
post:
  description: |
    Crée une transaction de versement. Ceci peut être :
    - soit une requête unique, avec un 'body' contenant toutes les informations (Métadonnées dans un foirmat SEDA XML ou Json ainsi que tous les binaires) probablement dans un ZIP, 
    - soit le démarrage d'une transaction s'exécutant sur plusieurs requêtes,
      - suivies par plusieurs requêtes pour créer des Unités (Units) ou modifier des Unités existantes, pour créer ou ajouter des version d'Objets (Objects), 
      - suivi in fine par une fin de transaction (commit).

/{id_async}:
  displayName: Ingest
  description: Accès à une transaction de versement.
  type: { collection-item-write: { createModel: task_status, exampleModel: !include ../samples/task_status.sample, answearModel: async_status, exampleAnswearModel: !include ../samples/async_status.sample } }
  is: [ standardErrors ]
  get:
    description: Comme dans /async_tasks/{id_ingest}, retourne le statut courant de cette transaction de versement.
  patch:
  delete:
  
  /units: 
    displayName: Ingest Units
    description: API de gestion des _Units_ dans le cadre d'une transaction de versement.
    type: { complexCollection: { queryModel: query, exampleQueryModel: !include ../samples/query.sample, answearModel: answearList, exampleAnswearModel: !include ../samples/answearList.sample, updateModel: update, exampleUpdateModel: !include ../samples/update.sample, createModel: create, exampleCreateModel: !include ../samples/create.sample } }
    is: [ standardErrors ]
    get:
      description: Permet de sélectionner un sous-ensemble de _Units_, sélection limitée aux _Units_ composant la transaction courante. Toutes les autres _Units_ doivent être accédées directement via le point d'accès **/units**.
    patch:
      description: Mise à jour d'un sous-ensemble de _Units_. Peut concerner des _Units_ pré-existantes (hors transaction initiale).
    post:
      description: Ajoute un sous-ensemble de nouvelles _Units_.
    delete:
      description: Efface un sous-ensemble de _Units_ (applicable uniquement aux _Units_ nouvellement créées dans la transaction courante).
    
    /{id_unit}:
      displayName: Ingest Unit
      description: API permettant l'accès direct à une _Unit_ selon des modes de requête/création/mise à jour/effacement.
      type: { collection-item-write: { createModel: genericObject, exampleModel: !include ../samples/sampleUnit.sample, answearModel: genericObject, exampleAnswearModel: !include ../samples/sampleUnit.sample } }
      is: [ standardErrors ]
      get:
        description: Accès à une _Unit_. Le 'body' optionnel permet de décider quelle partie des métadonnées sont requises en résultat (projection).
      patch:
      delete:
    
      /object_groups:
        displayName: Ingest Unit Object Groups
        description: API permettant l'accès à un unique _Groupe_ d'_Objects_ rattaché à la _Unit_ courante.
        type: object-group-item
        is: [ standardErrors ]
        delete:
          description: Efface l'association d'un _Groupe_ d'_Objects_ avec la _Unit_ courante.
        post:
          description: Ajoute une association unique d'un _Groupe_ d'_Objects_ avec la _Unit_ courante.
        put:
          description: Ajoute un ou plusieurs sous-objets (versions) à l'association avec la _Unit_ courante.

        /{id_object_group}:
          displayName: Ingest Unit Object Group
          description: API permettant l'accès direct à un _Groupe_ d'_Objects_ selon des modes de requête/création/mise à jour/effacement.
          type: { collection-item-write: { createModel: genericObject, exampleModel: !include ../samples/sampleUnit.sample, answearModel: genericObject, exampleAnswearModel: !include ../samples/sampleUnit.sample } }
          is: [ standardErrors ]
          get:
            description: Accès à un _Groupe_ d'_Objects_. Le 'body' optionnel permet de décider quelle partie des métadonnées sont requises en résultat (projection).
          patch:
          delete:
        
          /objects:
            displayName: Ingest Unit Objects
            description: API permettant l'accès à un unique d'_Object_ rattaché au _Groupe_ courant.
            type: object-item
            is: [ standardErrors ]
            delete:
              description: Efface l'association d'un _Object_ avec le _Groupe_ courant.
            post:
              description: Ajoute une association unique d'un _Object_ avec le _Groupe_ courant.
            put:
              description: Ajoute un ou plusieurs sous-objets (versions) à l'association avec le _Groupe_ courant.

            /{id_object}:
              displayName: Ingest Unit Object
              description: API permettant l'accès direct à un _Object_ selon des modes de requête/création/mise à jour/effacement.
              type: { collection-item-write: { createModel: genericObject, exampleModel: !include ../samples/sampleUnit.sample, answearModel: genericObject, exampleAnswearModel: !include ../samples/sampleUnit.sample } }
              is: [ standardErrors ]
              get:
                description: Accès à un _Object_. Le 'body' optionnel permet de décider quelle partie des métadonnées sont requises en résultat (projection).
              patch:
              delete:

            /check:
              displayName: Ingest Unit Object Check
              description: API permettant de vérifier un _Object_ particulier.
              type: object-item-check

          /check:
            displayName: Ingest Unit Objects Check
            description: API permettant de vérifier un ensemble d'_Objects_ associé à un _Groupe_ (similaire à /object_groups/id\_object\_group/check).
            type: object-item-check

        /check:
          displayName: Ingest Unit Object Group Check
          description: API permettant de vérifier un _Groupe_ d'_Objects_ particulier.
          type: object-group-item-check

      /check:
        displayName: Ingest Unit Object Groups Check
        description: API permettant de vérifier les _Groupes_ d'_Objects_.
        type: object-group-item-check

  /object_groups:
    displayName: Ingest of Object Groups
    description: API permettant l'accès à tous les _Groupes_ d'_Objects_ de la transaction.
    type: { complexCollection: { queryModel: query, exampleQueryModel: !include ../samples/query.sample, answearModel: answearList, exampleAnswearModel: !include ../samples/answearList.sample, updateModel: update, exampleUpdateModel: !include ../samples/update.sample, createModel: create, exampleCreateModel: !include ../samples/create.sample } }
    is: [ standardErrors ]
    delete:
      description: Efface un ensemble de _Groupes_ d'_Objects_ de la transaction courante.
    post:
      description: Ajoute un unique _Groupe_ d'_Objects_ à la transaction.
    
    /{id_object_group}:
      displayName: Ingest Object Group
      description: API permettant l'accès à un unique _Groupe_ d'_Objects_.
      type: object-group-item
      is: [ standardErrors ]
      delete:
        description: Efface un _Object_ ou un sous-objet (version) de la transaction, applicable uniquement sur les nouveaux _Objects_ créés pour cette transaction.
      put:
        description: Ajoute un sous-objet (version à à la transaction pour ce _Groupe_).

      /objects:
        displayName: Ingest of Objects
        description: API permettant l'accès à tous les _Objects_ d'un _Groupe_.
        type: { complexCollection: { queryModel: query, exampleQueryModel: !include ../samples/query.sample, answearModel: answearList, exampleAnswearModel: !include ../samples/answearList.sample, updateModel: update, exampleUpdateModel: !include ../samples/update.sample, createModel: create, exampleCreateModel: !include ../samples/create.sample } }
        is: [ standardErrors ]
        delete:
          description: Efface un ensemble d'_Object_ du _Groupe_ courant.
        post:
          description: Ajoute un unique _Object_ à la transaction.

        /{id_object}:
          displayName: Ingest Object
          description: API permettant l'accès à un unique _Object_.
          type: object-item
          is: [ standardErrors ]
          delete:
            description: Efface un _Object_ du _Groupe_, applicable uniquement sur les nouveaux _Objects_ créés pour cette transaction.

          /check:
            displayName: Ingest Unit Object Check
            description: API permettant de vérifier un _Object_ particulier.
            type: object-item-check

        /check:
          displayName: Ingest Unit Objects Check
          description: API permettant de vérifier un ensemble d'_Objects_ associé à un _Groupe_ (similaire à /object_groups/id\_object\_group/check).
          type: object-item-check

      /check:
        displayName: Ingest Object Check
        description: API permettant de vérifier un _Groupe_ d'_Objects_ particulier.
        type: object-group-item-check
    
    /check:
      displayName: Ingest Object Groups Check
      description: API permettant de vérifier un ensemble de _Groupes_ d'_Objects_, applicable uniquement sur les nouveaux _Objects_ créés pour cette transaction.
      type: collection
