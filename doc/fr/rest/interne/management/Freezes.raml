# root endpoint request
displayName: Freezes
description: API pour les procédures de Gel. Une procédure de gel est volatile, ce qui signifie qu'elle peut disparaître dès qu'elle est terminée. Cependant les Journaux (logbooks) garderont une trace de celle-ci.
type: { collection-write: { createModel: freeze, exampleModel: !include ../samples/freeze.sample, answearModel: freeze, exampleAnswearModel: !include ../samples/freeze.sample } }
is: [ standardErrors ]
delete:
post:
  description: |
    Permet de créer une procédure de Gel, selon différents modes :
    - soit via une requête unique, avec un "body" contenant toutes les informations (listes des _Units_ et les propriétés de Gel),
    - soit via une transaction de démarrage, 
      - suivie par plusieurs requêtes pour ajouter ou enlever des _Units_ pré-existantes,
      - puis in fine suivi par une fin de procédure (commit).

/{id_async}:
  displayName: Freeze
  description: |
    Permet l'accès à une procédure de Gel. Elle peut contenir les informations suivantes :
    - la liste des identifiants uniques des _Units_ originaux,
    - la liste des identifiants uniques des contrats d'accès,
    - l'identifiant unique du contrat de préservation à appliqué à l'ensemble des _Units_ et _Objects_,
    - d'autres propriétés comme _access\_log\_enable_ pour spécifier si tous les accès doivent être loggués.
    Chaque _Unit_ sera copiée et aura un nouvel identifiant unique mais conservera une métadonnées additionnelle nommée _original\_id_ qui contiendra l'id original au moment de la réalisation du gel. Les _Objects_ conserveront leur identifiant unique d'origine.
  type: { collection-item-write: { createModel: task_status, exampleModel: !include ../samples/task_status.sample, answearModel: freeze, exampleAnswearModel: !include ../samples/freeze.sample } }
  is: [ standardErrors ]
  patch:
  delete:

  /units:
    displayName: Freeze Units
    description: API permettant l'accès aux _Units_ d'une procédure de gel en mode requête, ajout ou retrait. Aucune mise à jour n'est autorisée, seulement des ajouts (POST) ou des retraits (DELETE) ou des accès (GET).
    type: { complexCollection: { queryModel: query, exampleQueryModel: !include ../samples/query.sample, answearModel: answearList, exampleAnswearModel: !include ../samples/answearList.sample, updateModel: update, exampleUpdateModel: !include ../samples/update.sample, createModel: create, exampleCreateModel: !include ../samples/create.sample } }
    is: [ standardErrors ]
    post:
      description: Ajoute un ensemble de _Units_.
    delete:
      description: Retire un ensemble de _Units_.
        
    /{id_unit}:
      displayName: Freeze Unit
      description: API permettant l'accès direct à une _Unit_ d'une procédure de Gel en mode requête ou retrait.
      type: { collection-item: { answearModel: genericObject, exampleAnswearModel: !include ../samples/sampleUnit.sample } }
      is: [ standardErrors ]
      delete:
        responses:
          200:
            body:
              application/json:
                schema: genericObject
                example: !include ../samples/sampleUnit.sample

      /object_groups:
        displayName: Destruction Unit Object Groups
        description: API permettant l'accès à un unique _Groupe_ d'_Objects_ rattaché à la _Unit_ courante.
        type: object-group-item

        /{id_object_group}:
          displayName: Ingest Unit Object Group
          description: API permettant l'accès direct à un _Groupe_ d'_Objects_ selon des modes de requête.
          type: { collection-item-write: { createModel: genericObject, exampleModel: !include ../samples/sampleUnit.sample, answearModel: genericObject, exampleAnswearModel: !include ../samples/sampleUnit.sample } }
          is: [ standardErrors ]
          get:
            description: Accès à un _Groupe_ d'_Objects_. Le 'body' optionnel permet de décider quelle partie des métadonnées sont requises en résultat (projection).
        
          /objects:
            displayName: Ingest Unit Objects
            description: API permettant l'accès à un unique d'_Object_ rattaché au _Groupe_ courant.
            type: object-item
            is: [ standardErrors ]

            /{id_object}:
              displayName: Ingest Unit Object
              description: API permettant l'accès direct à un _Object_ selon des modes de requête.
              type: { collection-item-write: { createModel: genericObject, exampleModel: !include ../samples/sampleUnit.sample, answearModel: genericObject, exampleAnswearModel: !include ../samples/sampleUnit.sample } }
              is: [ standardErrors ]
              get:
                description: Accès à un _Object_. Le 'body' optionnel permet de décider quelle partie des métadonnées sont requises en résultat (projection).

            /check:
              displayName: Ingest Unit Object Check
              description: API permettant de vérifier un _Object_ particulier.
              type: object-item-check

          /check:
            displayName: Ingest Unit Objects Check
            description: API permettant de vérifier un ensemble d'_Objects_ associé à un _Groupe_ (similaire à /object_groups/id\_object\_group/check).
            type: object-item-check

        /check:
          displayName: Ingest Unit Object Group Check
          description: API permettant de vérifier un _Groupe_ d'_Objects_ particulier.
          type: object-group-item-check

      /check:
        displayName: Ingest Unit Object Groups Check
        description: API permettant de vérifier les _Groupes_ d'_Objects_.
        type: object-group-item-check
