- base: !include Base.raml

- complexCollection: !include ComplexCollection.raml

- object-group-item: !include Object-group-item.raml

- object-group-item-check: !include Object-group-item-check.raml

- object-item: !include Object-item.raml

- object-item-check: !include Object-item-check.raml

- stats: !include Stats.raml

- collection:
    description: API de Gestion standard d'une collection de <<resourcePathName>>.
    type: base
    get:
      is: [ standardErrors ]
      description: Liste du contenu d'une collection.
      body:
        application/json:
          schema: collectionQuery
          example: !include ../samples/collectionQuery.sample
      responses:
        200:
          body:
            application/json:
              schema: collectionList
              example: !include ../samples/collectionList.sample

- collection-write:
    description: API de Gestion standard d'une collection de <<resourcePathName>> autorisant les écritures.
    type: base
    is: [ standardErrors ]
    get:
      description: Liste du contenu d'une collection.
      body:
        application/json:
          schema: collectionQuery
          example: !include ../samples/collectionQuery.sample
      responses:
        200:
          body:
            application/json:
              schema: collectionList
              example: !include ../samples/collectionList.sample
    post:
      description: Création d'un item dans la collection <<resourcePathName>>.
      body:
        application/json:
          schema: <<createModel>>
          example: <<exampleModel>>
      responses:
        201:
          body:
            application/json:
              schema: <<answearModel>>
              example: <<exampleAnswearModel>>
    patch:
      description: Mise à jour d'un ensemble d'items dans la collection <<resourcePathName>>.
      body:
        application/json:
          schema: <<createModel>>
          example: <<exampleModel>>
      responses:
        200:
          body:
            application/json:
              schema: collectionList
              example: !include ../samples/collectionList.sample
    delete?:
      description: Effacement d'un ensemble d'items depuis la collection <<resourcePathName>>.
      body:
        application/json:
          schema: collectionQuery
          example: !include ../samples/collectionQuery.sample
      responses:
        200:
          body:
            application/json:
              schema: collectionList
              example: !include ../samples/collectionList.sample

- collection-write-nopatch:
    description: API de Gestion standard d'une collection de <<resourcePathName>> autorisant les écritures.
    type: base
    is: [ standardErrors ]
    get:
      description: Liste du contenu d'une collection.
      body:
        application/json:
          schema: collectionQuery
          example: !include ../samples/collectionQuery.sample
      responses:
        200:
          body:
            application/json:
              schema: collectionList
              example: !include ../samples/collectionList.sample
    post:
      description: Création d'un item dans la collection <<resourcePathName>>.
      body:
        application/json:
          schema: <<createModel>>
          example: <<exampleModel>>
      responses:
        201:
          body:
            application/json:
              schema: <<answearModel>>
              example: <<exampleAnswearModel>>
    patch?:
      description: Mise à jour d'un ensemble d'items dans la collection <<resourcePathName>>.
      body:
        application/json:
          schema: <<createModel>>
          example: <<exampleModel>>
      responses:
        200:
          body:
            application/json:
              schema: collectionList
              example: !include ../samples/collectionList.sample
    delete?:
      description: Effacement d'un ensemble d'items depuis la collection <<resourcePathName>>.
      body:
        application/json:
          schema: collectionQuery
          example: !include ../samples/collectionQuery.sample
      responses:
        200:
          body:
            application/json:
              schema: collectionList
              example: !include ../samples/collectionList.sample

- collection-item:
    description: API de Gestion standard d'un item d'une collection de <<resourcePathName>>.
    type: base
    get:
      is: [ standardErrors, allows ]
      description: Accès à un item dans la collection.
      body:
        application/json:
          schema: projection
          example: !include ../samples/projection.sample
      responses:
        200:
          body:
            application/json:
              schema: <<answearModel>>
              example: <<exampleAnswearModel>>

- collection-item-write:
    description: API de Gestion standard d'un item d'une collection de <<resourcePathName>> autorisant les écritures et/ou les effacements.
    type: base
    is: [ standardErrors ]
    get:
      is: [ allows ]
      description: Accès à un item dans la collection.
      body:
        application/json:
          schema: projection
          example: !include ../samples/projection.sample
      responses:
        200:
          body:
            application/json:
              schema: <<answearModel>>
              example: <<exampleAnswearModel>>
    post?:
      description: Création d'un item dans la collection.
      body:
        application/json:
          schema: <<createModel>>
          example: <<exampleModel>>
      responses:
        201:
          body:
            application/json:
              schema: <<answearModel>>
              example: <<exampleAnswearModel>>
    put?:
      description: Mise à jour intégrale (annule et remplace) d'un item dans la collection.
      body:
        application/json:
          schema: <<createModel>>
          example: <<exampleModel>>
      responses:
        200:
          body:
            application/json:
              schema: <<answearModel>>
              example: <<exampleAnswearModel>>
    patch?:
      description: Mise à jour d'un item dans la collection.
      body:
        application/json:
          schema: <<createModel>>
          example: <<exampleModel>>
      responses:
        200:
          body:
            application/json:
              schema: <<answearModel>>
              example: <<exampleAnswearModel>>
    delete?:
      description: Effacement d'un item dans la collection.
      responses:
        204:
