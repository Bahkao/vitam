#############################
 Fichiers
#############################
* story-tests.xml : fichier XML généré par SOAPUI contenant l'ensemble des tests d'intégration à jouer.
* data/ : dossier contenant l'ensemble des jeux de test utilisés (les SIP) par les tests définis dans story-tests.xml
* pom.xml : contient le plugin permettant de jouer les tests d'intégration via la commande 'mvn test'. A noter que certains paramètres, tels que les adresses des hosts  sont attendus (Cf. test.sh)
* test.sh : exemple de ligne de commande maven lançant l'exécution des tests avec des paramètres prédéfinis

#############################
 Description générale
#############################
Les tests sont structuré de la manière suivante :
- 1 test suite par scénario (exemple : story 655)
-- 1 test case par Cas d'Acceptance (éventuellement plusieurs CA par test case si jamais le même SIP permet la verification des différents CA)
--- N step par test case : en général chaque step effectue une requête http et vérifie la réponse associée
---- N tests d'acceptation par step pour valider les conditions du CA concerné

Exemple récurrent de steps dans les différents tests cases :
============================================================
1. Upload d'un SIP vers ingest-ext (avec vérification du statut de la réponse http)
2. Récupération de la dernière opération du journal des opération
3. Extraction de l'ID de cette opération
4. Récupération du détail de l'opération (avec vérification des CA dans le JSON de l'opération : outcome, outcommeMessage etc.)

#############################
 Modification des tests
#############################
Les tests ont été réalisés avec SoapUI 5.2.1 (https://www.soapui.org/downloads/soapui.html)
Pour modifier les tests il suffit de lancer SoapUI et d'importer le projet à partir du XML.

#############################
 Lancement des tests
#############################
Les tests peuvent être exécuté directement depuis l'outil SoapUI (sous réserve de renseigner les variables "*host" en propriété globale du projet).
Il peuvent aussi être lancé via maven avec la commande "mvn test". Le fichier "test.sh" fourni un exemple de lancement des tests via maven.
Les résultats apparaissent dans la console mais aussi dans le dossier target/soapui/ sous forme de rapport JUnit.

#############################
 Configuration des tests
#############################
Un ensemble de variables sont définis dans le projet XML pour permettre de configurer les éléments qui dépendent de l'environnement :
- ingestHost : adresse du serveur ingest externe (exemple pour un docker local : http://172.17.0.1:8102)
- ihmdemoHost : adresse du serveur ihm demo
- logbookHost : adresse du serveur logbook
- dataFolder : chemin filesystem absolue vers le dossier contenant les SIP de test (ex: /home/bobby/sips)

Note : Prendre exemple sur les step qui utilisent ces variables pour bien les ré-utiliser
Attention : en cas d'upload de fichier, bien spécifier la valeur "application/octet-stream" au niveau du content-type du fichier (Cf. steps tests case existant)
