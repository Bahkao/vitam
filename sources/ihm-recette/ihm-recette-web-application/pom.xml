<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>fr.gouv.vitam</groupId>
    <artifactId>ihm-recette</artifactId>
    <version>0.11.0-SNAPSHOT</version>
  </parent>
  <artifactId>ihm-recette-web-application</artifactId>
  <name>ihm-recette-web-application</name>
  
  	<properties>
		<!-- Activate javascript sonar analysis -->
		<sonar.sources>src/main</sonar.sources>
		<sonar.exclusions>**/bower_components/**</sonar.exclusions>
		<unix.name>ihm-recette</unix.name>
		<unix.user>vitam</unix.user>
		<unix.group>vitam</unix.group>
	</properties>
	
	<dependencies>
		<dependency>
			<groupId>fr.gouv.vitam</groupId>
			<artifactId>ihm-recette-soap-ui</artifactId>
			<version>${project.version}</version>
		</dependency>
		<dependency>
			<groupId>fr.gouv.vitam</groupId>
			<artifactId>common-private</artifactId>
			<version>${project.version}</version>
		</dependency>
		<dependency>
			<groupId>fr.gouv.vitam</groupId>
			<artifactId>functional-administration-format-core</artifactId>
			<version>${project.version}</version>
		</dependency>
		<dependency>
			<groupId>fr.gouv.vitam</groupId>
			<artifactId>functional-administration-rules-core</artifactId>
			<version>${project.version}</version>
		</dependency>
		<dependency>
			<groupId>fr.gouv.vitam</groupId>
			<artifactId>ihm-core</artifactId>
			<version>${project.version}</version>
		</dependency>
		<dependency>
			<groupId>fr.gouv.vitam</groupId>
			<artifactId>ihm-demo-common</artifactId>
			<version>${project.version}</version>
		</dependency>
		<dependency>
			<groupId>fr.gouv.vitam</groupId>
			<artifactId>ingest-external-client</artifactId>
			<version>${project.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.shiro</groupId>
			<artifactId>shiro-core</artifactId>
		</dependency>
		<dependency>
			<groupId>org.apache.shiro</groupId>
			<artifactId>shiro-web</artifactId>
		</dependency>

		<!-- Jetty -->
		<dependency>
			<groupId>org.eclipse.jetty</groupId>
			<artifactId>jetty-webapp</artifactId>
		</dependency>

		<!-- Servlet API -->
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>javax.servlet-api</artifactId>
		</dependency>

		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>com.jayway.restassured</groupId>
			<artifactId>rest-assured</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>fr.gouv.vitam</groupId>
			<artifactId>common-junit</artifactId>
			<version>${project.version}</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-core</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.powermock</groupId>
			<artifactId>powermock-module-junit4</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.powermock</groupId>
			<artifactId>powermock-api-mockito</artifactId>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<build>
		<resources>
			<resource>
				<directory>src/main/resources</directory>
			</resource>
		</resources>

		<plugins>
			<plugin>
				<!-- Dependency manipulation (copy, unpack) and analysis. -->
				<artifactId>maven-dependency-plugin</artifactId>
				<executions>
					<execution>
						<id>copy-dependencies</id>
						<phase>package</phase>
						<goals>
							<goal>copy-dependencies</goal>
						</goals>
						<configuration>
							<outputDirectory>${project.build.directory}/dependencies</outputDirectory>
							<overWriteReleases>false</overWriteReleases>
							<overWriteSnapshots>false</overWriteSnapshots>
							<overWriteIfNewer>true</overWriteIfNewer>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<artifactId>maven-resources-plugin</artifactId>
				<executions>
					<execution>
						<id>copy-config-resources</id>
						<phase>validate</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<outputDirectory>${project.build.directory}/conf/sysconfig</outputDirectory>
							<resources>
								<resource>
									<directory>${basedir}/src/main/conf</directory>
									<filtering>true</filtering>
								</resource>
							</resources>
						</configuration>
					</execution>
					<execution>
						<id>copy-systemd-resources</id>
						<phase>validate</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<outputDirectory>${project.build.directory}/systemd</outputDirectory>
							<resources>
								<resource>
									<directory>src/main/systemd</directory>
									<filtering>true</filtering>
								</resource>
							</resources>
						</configuration>
					</execution>

				</executions>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<configuration>
					<archive>
						<manifest>
							<addClasspath>true</addClasspath>
							<mainClass>fr.gouv.vitam.ihmrecette.appserver.ServerApplication</mainClass>
						</manifest>
					</archive>
				</configuration>
			</plugin>


			<plugin>
				<groupId>com.spotify</groupId>
				<artifactId>docker-maven-plugin</artifactId>
				<configuration>
					<!-- Activate docker build -->
					<skipDockerBuild>false</skipDockerBuild>
					<skipDockerTag>false</skipDockerTag>
					<!-- Images specification -->
					<baseImage>${vitam.docker.registry.pull}/${vitam.docker.baseimage}</baseImage>
					<imageName>${vitam.docker.registry.push}/vitam/ihm-recette</imageName>
					<!-- copy the service's jar file from target into the root directory 
					of the image -->
					<resources>
						<resource>
							<targetPath>/vitam/lib</targetPath>
							<directory>${project.build.directory}</directory>
							<include>${project.build.finalName}.jar</include>
						</resource>
						<resource>
							<targetPath>/vitam/conf</targetPath>
							<directory>${basedir}/src/main/config</directory>
						</resource>
						<resource>
							<targetPath>/vitam/bin</targetPath>
							<directory>${project.build.directory}/bin</directory>
						</resource>
						<resource>
							<targetPath>/vitam/lib</targetPath>
							<directory>${project.build.directory}/dependencies</directory>
						</resource>
					</resources>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>rpm-maven-plugin</artifactId>
				<configuration>
					<disabled>false</disabled>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.eclipse.jetty</groupId>
				<artifactId>jetty-maven-plugin</artifactId>
				<version>${jetty.version}</version>
			</plugin>

		</plugins>
	</build>
  
</project>