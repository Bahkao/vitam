<?xml version='1.0' encoding='UTF-8'?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>fr.gouv.vitam</groupId>
	<artifactId>parent</artifactId>
	<version>0.9.0-SNAPSHOT</version>
	<packaging>pom</packaging>
	<name>vitam-parent</name>
	<description>${project.artifactId}</description>

	<organization>
		<name>Vitam</name>
	</organization>

	<!-- ++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->
	<!-- Modules -->
	<!-- ++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->

	<modules>
		<module>common</module>
		<module>access</module>
		<module>ingest</module>
		<module>processing</module>
		<module>worker</module>
		<module>logbook</module>
		<module>workspace</module>
		<module>storage</module>
		<module>metadata</module>
		<module>functional-administration</module>
		<module>technical-administration</module>
		<module>ihm-demo</module>
	</modules>

	<!-- ++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->
	<!-- Définition des SCM, ciManagement et distributionMngt -->
	<!-- ++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->

	<!-- Définition de l'url du gestionnaire de source à utiliser -->
	<scm>
		<connection>scm:git:https://dev.programmevitam.fr/gitlab/vitam/vitam.git</connection>
		<developerConnection>scm:git:https://dev.programmevitam.fr/gitlab/vitam/vitam.git</developerConnection>
		<url>https://dev.programmevitam.fr/gitlab/vitam/vitam.git</url>
		<tag>HEAD</tag>
	</scm>

	<!-- Définition de l'url de l'intégration continue du projet -->
	<ciManagement>
		<system>jenkins</system>
		<url>https://dev.programmevitam.fr/jenkins/</url>
	</ciManagement>

	<!-- Dépôts Maven privés -->
	<distributionManagement>
		<repository>
			<id>releases</id>
			<url>https://dev.programmevitam.fr/nexus/content/repositories/releases/</url>
		</repository>
		<snapshotRepository>
			<id>snapshots</id>
			<url>https://dev.programmevitam.fr/nexus/content/repositories/snapshots/</url>
		</snapshotRepository>
	</distributionManagement>

	<repositories>
		<repository>
			<id>vitam</id>
			<url>https://dev.programmevitam.fr/nexus/content/groups/public/</url>
		</repository>
	</repositories>

	<prerequisites>
		<maven>3.3.9</maven>
	</prerequisites>

	<!-- Maven plugins repositories -->
	<pluginRepositories>
		<pluginRepository>
			<id>vitam</id>
			<url>https://dev.programmevitam.fr/nexus/content/groups/public/</url>
			<releases>
				<enabled>true</enabled>
			</releases>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
		</pluginRepository>
	</pluginRepositories>

	<!-- ++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->
	<!-- Définition des properties -->
	<!-- ++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->
	<properties>
		<!-- Global Properties -->
		<java.version>1.8</java.version>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

		<!-- Build environment Properties -->
		<project.scm.id>vitam-gitlab</project.scm.id>
		<vitam.docker.registry.pull>docker.programmevitam.fr</vitam.docker.registry.pull>
		<vitam.docker.registry.push>docker.programmevitam.fr</vitam.docker.registry.push>
		<vitam.docker.baseimage>vitam/java:0.2.0</vitam.docker.baseimage>
		<vitam.docker.baseimage.antivirus>vitam/vitam-virus-java</vitam.docker.baseimage.antivirus>

		<!-- ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->
		<!-- Sonar properties -->
		<!-- ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->
		<sonar.core.codeCoveragePlugin>jacoco</sonar.core.codeCoveragePlugin>
		<!-- <sonar.profile>MonPetitProfil</sonar.profile> -->
		<!-- <sonar.branch>1.0</sonar.branch> -->
		<!-- <sonar.jacoco.reportPath>${project.build.directory}/jacoco-unit.exec</sonar.jacoco.reportPath> -->
		<!-- <sonar.jacoco.itReportPath>${project.build.directory}/jacoco-it.exec</sonar.jacoco.itReportPath> -->
		<!-- <sonar.jacoco.includes></sonar.jacoco.includes> -->
		<!-- <sonar.jacoco.excludes></sonar.jacoco.excludes> -->

		<!-- ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->
		<!-- Dependencies versions -->
		<!-- ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->
		<jacoco-maven-plugin.version>0.7.6.201602180812</jacoco-maven-plugin.version>
		<slf4j.version>1.7.21</slf4j.version>
		<logback.version>1.1.7</logback.version>
		<jersey.version>2.23</jersey.version>
		<jclouds.version>1.9.2</jclouds.version>
		<jackson.version>2.7.4</jackson.version>
		<guava.version>19.0</guava.version>
		<log4j.version>1.2.17</log4j.version>
		<commons-logging.version>1.2</commons-logging.version>
		<commons-io.version>1.3.2</commons-io.version>
		<commons-lang3>3.4</commons-lang3>
		<easymock.version>3.4</easymock.version>
		<jmeter.version>2.11</jmeter.version>
		<elasticsearch.version>2.3.3</elasticsearch.version>
		<mongo.version>3.2.2</mongo.version>
		<!-- 1.0.5 ? -->
		<testcontainers.version>1.0.4</testcontainers.version>
		<yamlbeans.version>1.09</yamlbeans.version>
		<apache-shiro.version>1.3.0</apache-shiro.version>
		<jetty.version>9.3.9.v20160517</jetty.version>
		<assertj.version>2.4.0</assertj.version>
		<rest-assured.version>2.9.0</rest-assured.version>
		<junit.version>4.12</junit.version>
		<mockito.version>1.10.19</mockito.version>
		<grizzly.version>2.3.24</grizzly.version>
		<grizzly.rcm.version>2.3.4</grizzly.rcm.version>
		<grizzly.utils.version>2.0.0-RC3</grizzly.utils.version>
		<grizzly.servlet.webserver.version>2.0.0-M2</grizzly.servlet.webserver.version>
		<org.simpleframework>5.1.4</org.simpleframework>
		<mockrunner.servlet.version>1.1.1</mockrunner.servlet.version>
		<!-- 1.50.5 -->
		<flapdoodle.version>1.50.3</flapdoodle.version>
		<staxon.version>1.3</staxon.version>
		<org.json.version>20160212</org.json.version>
		<commons-lang.version>2.6</commons-lang.version>
		<jhades.version>1.0.4</jhades.version>
		<javax.servlet.version>3.1.0</javax.servlet.version>
		<javax.inject.version>1</javax.inject.version>
		<powermock.version>1.6.5</powermock.version>
		<json-sanitize.version>1.1</json-sanitize.version>
		<commons-collections4.version>4.0</commons-collections4.version>
		<unix.user>vitam</unix.user>
		<unix.group>vitam</unix.group>
		<esapi.version>2.1.0.1</esapi.version>
		<xerces.version>2.11.0</xerces.version>
		<cglib.version>2.2.2</cglib.version>
		<opencsv.version>2.3</opencsv.version>
		<commons-csv.version>1.4</commons-csv.version>
		<jackson-dataformat-csv.version>2.5.1</jackson-dataformat-csv.version>
		<bouncycastle.version>1.54</bouncycastle.version>
		<diffutils.version>1.2.1</diffutils.version>

		<skipITs>false</skipITs>
	</properties>

	<!-- ++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->
	<!-- Définition des profils -->
	<!-- ++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->
	<profiles>
		<profile>
			<id>pic</id>
			<properties>
				<vitam.docker.registry.push>vitam-prod-app-6.internet.agri:8082</vitam.docker.registry.push>
			</properties>
		</profile>
		<profile>
			<id>doc</id>
			<build>
				<plugins>
					<plugin>
						<artifactId>maven-javadoc-plugin</artifactId>
						<executions>
							<execution>
								<phase>package</phase>
								<goals>
									<goal>aggregate-jar</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>

	<build>
		<pluginManagement>
			<plugins>
				<!-- ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->
				<!-- Main Maven plugins, see http://maven.apache.org/plugins/index.html -->
				<!-- ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->

				<!-- ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->
				<!-- Core plugins : Plugins corresponding to default core phases (ie. 
					clean, compile). They may have muliple goals as well. -->
				<!-- ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->
				<plugin>
					<!-- Clean up after the build. -->
					<artifactId>maven-clean-plugin</artifactId>
					<version>3.0.0</version>
				</plugin>
				<plugin>
					<!-- Compiles Java sources. -->
					<artifactId>maven-compiler-plugin</artifactId>
					<version>3.5.1</version>
					<configuration>
						<source>${java.version}</source>
						<target>${java.version}</target>
						<encoding>${project.build.sourceEncoding}</encoding>
					</configuration>
				</plugin>
				<plugin>
					<!-- Deploy the built artifact to the remote repository. -->
					<artifactId>maven-deploy-plugin</artifactId>
					<version>2.8.2</version>
				</plugin>
				<plugin>
					<!-- Run the Junit integration tests in an isolated classloader. -->
					<artifactId>maven-failsafe-plugin</artifactId>
					<version>2.19.1</version>
					<executions>
						<execution>
							<id>integration-test</id>
							<goals>
								<goal>integration-test</goal>
								<goal>verify</goal>
							</goals>
						</execution>
					</executions>
				</plugin>
				<plugin>
					<!-- Install the built artifact into the local repository. -->
					<artifactId>maven-install-plugin</artifactId>
					<version>2.5.2</version>
				</plugin>
				<plugin>
					<!-- Copy the resources to the output directory for including in the 
						JAR. -->
					<artifactId>maven-resources-plugin</artifactId>
					<!-- 3.0 ? -->
					<version>2.7</version>
					<configuration>
						<encoding>${project.build.sourceEncoding}</encoding>
					</configuration>
				</plugin>
				<plugin>
					<!-- Generate a site for the current project. -->
					<artifactId>maven-site-plugin</artifactId>
					<version>3.5.1</version>
				</plugin>
				<plugin>
					<groupId>org.jacoco</groupId>
					<artifactId>jacoco-maven-plugin</artifactId>
					<version>${jacoco-maven-plugin.version}</version>
					<executions>
						<execution>
							<id>jacoco-prepare-agent</id>
							<goals>
								<goal>prepare-agent</goal>
							</goals>
							<configuration>
								<propertyName>coverageAgent</propertyName>
							</configuration>
						</execution>
						<execution>
							<id>report</id>
							<phase>prepare-package</phase>
							<goals>
								<goal>report</goal>
							</goals>
						</execution>
					</executions>
				</plugin>
				<plugin>
					<!-- Run the Junit unit tests in an isolated classloader. -->
					<artifactId>maven-surefire-plugin</artifactId>
					<version>2.19.1</version>
					<configuration>
						<argLine>-Xmx2048m -Dvitam.tmp.folder=/tmp ${coverageAgent}</argLine>
						<!-- obsolete <forkMode>always</forkMode> -->
						<!-- Non Parallel mode -->
						<parallel>classes</parallel>
						<threadCount>3</threadCount>
						<perCoreThreadCount>true</perCoreThreadCount>
						<forkCount>3C</forkCount>
						<reuseForks>false</reuseForks>
						<!-- Non Parallel mode -->
						<!-- <parallel>classes</parallel> <threadCount>1</threadCount> <perCoreThreadCount>false</perCoreThreadCount> 
							<forkCount>1</forkCount> <reuseForks>false</reuseForks> -->
					</configuration>
					<executions>
						<execution>
							<id>integration-test</id>
							<goals>
								<goal>test</goal>
							</goals>
							<phase>integration-test</phase>
							<configuration>
								<skip>${skipITs}</skip>
								<excludes>
									<exclude>none</exclude>
								</excludes>
								<includes>
									<include>**/*IT.java</include>
								</includes>
							</configuration>
						</execution>
					</executions>
				</plugin>
				<plugin>
					<!-- Useful for integration tests - verifies the existence of certain 
						conditions. -->
					<artifactId>maven-verifier-plugin</artifactId>
					<version>1.1</version>
				</plugin>

				<!-- ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->
				<!-- Packaging types / tools : These plugins relate to packaging respective 
					artifact types. -->
				<!-- ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->
				<plugin>
					<!-- Build a JAR from the current project. -->
					<artifactId>maven-jar-plugin</artifactId>
					<!-- 3.0 ? -->
					<version>2.6</version>
					<configuration>
						<archive>
							<manifestEntries>
								<Maven-groupId>${project.groupId}</Maven-groupId>
								<Maven-artefactId>${project.artifactId}</Maven-artefactId>
								<Maven-version>${project.version}</Maven-version>
								<Maven-build-timestamp>${maven.build.timestamp}</Maven-build-timestamp>
								<!-- <Sealed>true</Sealed> -->
							</manifestEntries>
							<manifest>
								<useUniqueVersions>false</useUniqueVersions>
							</manifest>
						</archive>
					</configuration>
				</plugin>

				<plugin>
					<!-- Build Docker Container from Project -->
					<groupId>com.spotify</groupId>
					<artifactId>docker-maven-plugin</artifactId>
					<!-- com.spotify 0.4.10 ? -->
					<version>0.4.9</version>
					<configuration>
						<skipDockerBuild>true</skipDockerBuild> <!-- Skip build by default -->
						<skipDockerTag>true</skipDockerTag> <!-- Skip tag by default -->
						<imageTags>
							<imageTag>${project.version}</imageTag>
							<imageTag>latest</imageTag>
						</imageTags>
						<forceTags>true</forceTags> <!-- Allow to build the same docker name twice on the build machine -->
						<useConfigFile>true</useConfigFile> <!-- Use credentials of ~/.docker/config.json -->
					</configuration>
				</plugin>
				<!-- ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->
				<!-- Reporting plugins : Plugins which generate reports, are configured 
					as reports in the POM and run under the site generation lifecycle. -->
				<!-- ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->
				<plugin>
					<!-- The Javadoc Plugin uses the Javadoc tool to generate javadocs for 
						the specified project. -->
					<artifactId>maven-javadoc-plugin</artifactId>
					<version>2.10.4</version>
					<configuration>
						<source>${java.version}</source>
						<additionalparam>-Xdoclint:none</additionalparam>
					</configuration>
				</plugin>
				<plugin>
					<!-- The Surefire Report Plugin parses the generated TEST-*.xml files 
						under ${basedir}/target/surefire-reports and renders them to DOXIA which 
						creates the web interface version of the test results. -->
					<artifactId>maven-surefire-report-plugin</artifactId>
					<version>2.19.1</version>
				</plugin>
				<plugin>
					<groupId>org.owasp</groupId>
					<artifactId>dependency-check-maven</artifactId>
					<version>1.4.0</version>
				</plugin>

				<!-- ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->
				<!-- Tools : These are miscellaneous tools available through Maven by 
					default. -->
				<!-- ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->
				<plugin>
					<!-- Build an assembly (distribution) of sources and/or binaries. -->
					<artifactId>maven-assembly-plugin</artifactId>
					<version>2.6</version>
				</plugin>
				<plugin>
					<!-- Dependency manipulation (copy, unpack) and analysis. -->
					<artifactId>maven-dependency-plugin</artifactId>
					<version>2.10</version>
				</plugin>
				<plugin>
					<!-- Environmental constraint checking (Maven Version, JDK etc), User 
						Custom Rule Execution. -->
					<artifactId>maven-enforcer-plugin</artifactId>
					<version>1.4.1</version>
				</plugin>
				<plugin>
					<!-- Get information about the working environment for the project. -->
					<artifactId>maven-help-plugin</artifactId>
					<version>2.2</version>
				</plugin>
				<plugin>
					<!-- SCM plugin ; set as using jgit for git (essentially for the release 
						plugin) -->
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-scm-plugin</artifactId>
					<version>1.9.4</version>
					<configuration>
						<providerImplementations>
							<git>jgit</git>
						</providerImplementations>
					</configuration>
					<dependencies>
						<dependency>
							<groupId>org.apache.maven.scm</groupId>
							<artifactId>maven-scm-provider-jgit</artifactId>
							<version>1.9.4</version>
						</dependency>
					</dependencies>
				</plugin>
				<plugin>
					<!-- Release the current project - updating the POM and tagging in the 
						SCM. -->
					<artifactId>maven-release-plugin</artifactId>
					<version>2.5.3</version>
					<configuration>
						<autoVersionSubmodules>true</autoVersionSubmodules>
						<!-- Ask only once per SNAPSHOT artifact -->
						<!--<forceUniqueArtifactVersion>true</forceUniqueArtifactVersion> -->
						<!-- Don't ask if you want to resolve snapshots, do it -->
						<!-- <alwaysResolveSnapshots>true</alwaysResolveSnapshots> -->
						<!-- Don't ask which dependencies to resolve ( 0:All 1:Project Dependencies 
							2:Plugins 3:Reports 4:Extensions ) -->
						<!--<alwaysResolveDependencyType>1</alwaysResolveDependencyType> -->
						<providerImplementations>
							<git>jgit</git>
						</providerImplementations>
					</configuration>
					<dependencies>
						<dependency>
							<groupId>org.apache.maven.scm</groupId>
							<artifactId>maven-scm-provider-jgit</artifactId>
							<version>1.9.4</version>
						</dependency>
					</dependencies>
				</plugin>
				<plugin>
					<!-- Build a JAR of sources for use in IDEs and distribution to the 
						repository. -->
					<artifactId>maven-source-plugin</artifactId>
					<version>3.0.0</version>
				</plugin>
				<plugin>
					<!-- Maven/Sonarqube integration -->
					<groupId>org.sonarsource.scanner.maven</groupId>
					<artifactId>sonar-maven-plugin</artifactId>
					<version>3.0.2</version>
				</plugin>
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>rpm-maven-plugin</artifactId>
					<version>2.1.5</version>
					<configuration>
						<name>vitam-${unix.name}</name>
						<disabled>true</disabled>
						<licence>CeCILL 2.1</licence>
						<distribution>Vitam Project</distribution>
						<group>Application/Archiving</group>
						<packager>Vitam Package Team</packager>
						<defineStatements />
						<targetOS>linux</targetOS>
						<requires>
							<require>java-1.8.0</require>
							<require>vitam-user-${unix.user}</require>
						</requires>
						<defaultDirMode>750</defaultDirMode>
						<defaultFileMode>640</defaultFileMode>
						<defaultUsername>${unix.user}</defaultUsername>
						<defaultGroupname>${unix.group}</defaultGroupname>
						<mappings>
							<mapping>
								<directory>/vitam/lib/${unix.name}</directory>
								<artifact />
								<dependency />
							</mapping>
							<mapping>
								<directory>/vitam/conf/${unix.name}</directory>
								<sources>
									<source>
										<location>${basedir}/src/main/config</location>
									</source>
								</sources>
							</mapping>

							<mapping>
								<directory>/vitam/script/${unix.name}</directory>
								<sources>
									<source>
										<location>${project.build.directory}/bin</location>
									</source>
								</sources>
							</mapping>
							<!-- OMA : added for future use -->


							<mapping>
								<directory>/usr/lib/systemd/system/</directory>
								<filemode>644</filemode>
								<username>root</username>
								<groupname>root</groupname>
								<directoryIncluded>false</directoryIncluded>
								<sources>
									<source>
										<location>${project.build.directory}/systemd</location>
									</source>
								</sources>
							</mapping>
						</mappings>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-antrun-plugin</artifactId>
					<version>1.6</version>
					<executions>
						<execution>
							<id>process-test-classes</id>
							<phase>process-test-classes</phase>
							<configuration>
								<target>
									<chmod file="target/test-classes/test.sh" perm="755" />
								</target>
							</configuration>
							<goals>
								<goal>run</goal>
							</goals>
						</execution>
					</executions>
				</plugin>
			</plugins>
		</pluginManagement>

		<plugins>
			<plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
			</plugin>
		</plugins>
	</build>

	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>org.apache.jclouds</groupId>
				<artifactId>jclouds-core</artifactId>
				<version>${jclouds.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.jclouds.api</groupId>
				<artifactId>filesystem</artifactId>
				<version>${jclouds.version}</version>
			</dependency>
			<dependency>
				<groupId>org.elasticsearch</groupId>
				<artifactId>elasticsearch</artifactId>
				<version>${elasticsearch.version}</version>
			</dependency>
			<dependency>
				<groupId>org.mongodb</groupId>
				<artifactId>mongo-java-driver</artifactId>
				<version>${mongo.version}</version>
			</dependency>

			<dependency>
				<groupId>com.fasterxml.jackson.core</groupId>
				<artifactId>jackson-core</artifactId>
				<version>${jackson.version}</version>
			</dependency>
			<dependency>
				<groupId>com.fasterxml.jackson.core</groupId>
				<artifactId>jackson-databind</artifactId>
				<version>${jackson.version}</version>
			</dependency>
			<dependency>
				<groupId>com.fasterxml.jackson.core</groupId>
				<artifactId>jackson-annotations</artifactId>
				<version>${jackson.version}</version>
			</dependency>
			<dependency>
				<groupId>com.fasterxml.jackson.datatype</groupId>
				<artifactId>jackson-datatype-jsr310</artifactId>
				<version>${jackson.version}</version>
			</dependency>
			<dependency>
				<groupId>org.json</groupId>
				<artifactId>json</artifactId>
				<version>${org.json.version}</version>
			</dependency>
			<dependency>
				<groupId>com.google.guava</groupId>
				<artifactId>guava</artifactId>
				<version>${guava.version}</version>
			</dependency>
			<dependency>
				<groupId>com.googlecode.java-diff-utils</groupId>
				<artifactId>diffutils</artifactId>
				<version>${diffutils.version}</version>
			</dependency>
			<dependency>
				<groupId>commons-io</groupId>
				<artifactId>commons-io</artifactId>
				<version>${commons-io.version}</version>
			</dependency>
			<dependency>
				<groupId>commons-lang</groupId>
				<artifactId>commons-lang</artifactId>
				<version>${commons-lang.version}</version>
			</dependency>

			<dependency>
				<groupId>de.odysseus.staxon</groupId>
				<artifactId>staxon</artifactId>
				<version>${staxon.version}</version>
			</dependency>

			<dependency>
				<groupId>org.glassfish.jersey.core</groupId>
				<artifactId>jersey-client</artifactId>
				<version>${jersey.version}</version>
			</dependency>
			<dependency>
				<groupId>org.glassfish.jersey.containers</groupId>
				<artifactId>jersey-container-servlet-core</artifactId>
				<version>${jersey.version}</version>
			</dependency>
			<dependency>
				<groupId>org.glassfish.jersey.containers</groupId>
				<artifactId>jersey-container-jetty-http</artifactId>
				<version>${jersey.version}</version>
				<exclusions>
					<exclusion>
						<groupId>org.eclipse.jetty</groupId>
						<artifactId>jetty-util</artifactId>
					</exclusion>
				</exclusions>
			</dependency>
			<dependency>
				<groupId>org.glassfish.jersey.connectors</groupId>
				<artifactId>jersey-jetty-connector</artifactId>
				<version>${jersey.version}</version>
			</dependency>
			<dependency>
				<groupId>org.glassfish.jersey.media</groupId>
				<artifactId>jersey-media-json-jackson</artifactId>
				<version>${jersey.version}</version>
			</dependency>

			<dependency>
				<groupId>org.glassfish.jersey.media</groupId>
				<artifactId>jersey-media-multipart</artifactId>
				<version>${jersey.version}</version>
			</dependency>
			<dependency>
				<groupId>com.fasterxml.jackson.dataformat</groupId>
				<artifactId>jackson-dataformat-yaml</artifactId>
				<version>${jackson.version}</version>
			</dependency>
			<dependency>
				<groupId>org.eclipse.jetty</groupId>
				<artifactId>jetty-http</artifactId>
				<version>${jetty.version}</version>
			</dependency>
			<dependency>
				<groupId>org.eclipse.jetty</groupId>
				<artifactId>jetty-server</artifactId>
				<version>${jetty.version}</version>
			</dependency>
			<dependency>
				<groupId>org.eclipse.jetty</groupId>
				<artifactId>jetty-client</artifactId>
				<version>${jetty.version}</version>
			</dependency>
			<dependency>
				<groupId>org.eclipse.jetty</groupId>
				<artifactId>jetty-servlet</artifactId>
				<version>${jetty.version}</version>
			</dependency>
			<dependency>
				<groupId>org.eclipse.jetty</groupId>
				<artifactId>jetty-webapp</artifactId>
				<version>${jetty.version}</version>
			</dependency>
			<dependency>
				<groupId>org.eclipse.jetty</groupId>
				<artifactId>jetty-xml</artifactId>
				<version>${jetty.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.commons</groupId>
				<artifactId>commons-io</artifactId>
				<version>${commons-io.version}</version>
			</dependency>
			<dependency>
				<groupId>javax.servlet</groupId>
				<artifactId>javax.servlet-api</artifactId>
				<version>${javax.servlet.version}</version>
			</dependency>

			<dependency>
				<groupId>org.apache.commons</groupId>
				<artifactId>commons-lang3</artifactId>
				<version>${commons-lang3}</version>
			</dependency>

			<!-- ########################## Security ########################## -->

			<dependency>
				<groupId>com.mikesamuel</groupId>
				<artifactId>json-sanitizer</artifactId>
				<version>${json-sanitize.version}</version>
			</dependency>
			<dependency>
				<groupId>org.owasp.esapi</groupId>
				<artifactId>esapi</artifactId>
				<version>${esapi.version}</version>
				<exclusions>
					<exclusion>
						<artifactId>log4j</artifactId>
						<groupId>log4j</groupId>
					</exclusion>
					<exclusion>
						<artifactId>commons-fileupload</artifactId>
						<groupId>commons-fileupload</groupId>
					</exclusion>
				</exclusions>
			</dependency>
			<dependency>
				<groupId>org.apache.shiro</groupId>
				<artifactId>shiro-core</artifactId>
				<version>${apache-shiro.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.shiro</groupId>
				<artifactId>shiro-web</artifactId>
				<version>${apache-shiro.version}</version>
			</dependency>
			<dependency>
				<groupId>xerces</groupId>
				<artifactId>xercesImpl</artifactId>
				<version>${xerces.version}</version>
			</dependency>

			<dependency>

				<groupId>org.bouncycastle</groupId>
				<artifactId>bcprov-jdk15on</artifactId>
				<version>${bouncycastle.version}</version>
			</dependency>

			<!-- ########################## Logger ########################## -->

			<dependency>
				<groupId>ch.qos.logback</groupId>
				<artifactId>logback-core</artifactId>
				<version>${logback.version}</version>
				<!--<scope>provided</scope> -->
			</dependency>
			<dependency>
				<groupId>ch.qos.logback</groupId>
				<artifactId>logback-classic</artifactId>
				<version>${logback.version}</version>
			</dependency>
			<dependency>
				<groupId>ch.qos.logback</groupId>
				<artifactId>logback-access</artifactId>
				<version>${logback.version}</version>
			</dependency>
			<dependency>
				<groupId>org.slf4j</groupId>
				<artifactId>slf4j-api</artifactId>
				<version>${slf4j.version}</version>
				<!--<scope>provided</scope> -->
			</dependency>
			<dependency>
				<groupId>org.slf4j</groupId>
				<artifactId>jcl-over-slf4j</artifactId>
				<version>${slf4j.version}</version>
				<!--<scope>provided</scope> -->
			</dependency>
			<dependency>
				<groupId>org.slf4j</groupId>
				<artifactId>log4j-over-slf4j</artifactId>
				<version>${slf4j.version}</version>
				<!--<scope>provided</scope> -->
			</dependency>
			<dependency>
				<groupId>org.slf4j</groupId>
				<artifactId>jul-to-slf4j</artifactId>
				<version>${slf4j.version}</version>
				<!--<scope>provided</scope> -->
			</dependency>

			<!-- ####################### Extra Logger ####################### -->

			<dependency>
				<groupId>log4j</groupId>
				<artifactId>log4j</artifactId>
				<version>${log4j.version}</version>
				<optional>true</optional>
			</dependency>

			<!-- ####################### Tests ####################### -->

			<dependency>
				<groupId>junit</groupId>
				<artifactId>junit</artifactId>
				<version>${junit.version}</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.mockito</groupId>
				<artifactId>mockito-all</artifactId>
				<version>${mockito.version}</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.assertj</groupId>
				<artifactId>assertj-core</artifactId>
				<version>${assertj.version}</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>com.jayway.restassured</groupId>
				<artifactId>rest-assured</artifactId>
				<version>${rest-assured.version}</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.easymock</groupId>
				<artifactId>easymock</artifactId>
				<version>${easymock.version}</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.apache.jmeter</groupId>
				<artifactId>ApacheJMeter_java</artifactId>
				<version>${jmeter.version}</version>
				<exclusions>
					<exclusion>
						<artifactId>slf4j-nop</artifactId>
						<groupId>org.slf4j</groupId>
					</exclusion>
				</exclusions>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.testcontainers</groupId>
				<artifactId>testcontainers</artifactId>
				<version>${testcontainers.version}</version>
			</dependency>
			<dependency>
				<groupId>org.glassfish.jersey.test-framework.providers</groupId>
				<artifactId>jersey-test-framework-provider-grizzly2</artifactId>
				<version>${jersey.version}</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.glassfish.jersey.test-framework.providers</groupId>
				<artifactId>jersey-test-framework-provider-jetty</artifactId>
				<version>${jersey.version}</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.glassfish.jersey.test-framework</groupId>
				<artifactId>jersey-test-framework-core</artifactId>
				<version>${jersey.version}</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.glassfish.jersey.containers</groupId>
				<artifactId>jersey-container-servlet</artifactId>
				<version>${jersey.version}</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.mockito</groupId>
				<artifactId>mockito-core</artifactId>
				<version>${mockito.version}</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.powermock</groupId>
				<artifactId>powermock-module-junit4</artifactId>
				<version>${powermock.version}</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.powermock</groupId>
				<artifactId>powermock-api-mockito</artifactId>
				<version>${powermock.version}</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.powermock</groupId>
				<artifactId>powermock-api-mockito-common</artifactId>
				<version>${powermock.version}</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>de.flapdoodle.embed</groupId>
				<artifactId>de.flapdoodle.embed.mongo</artifactId>
				<version>${flapdoodle.version}</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.jhades</groupId>
				<artifactId>jhades</artifactId>
				<version>${jhades.version}</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.apache.commons</groupId>
				<artifactId>commons-collections4</artifactId>
				<version>${commons-collections4.version}</version>
			</dependency>
			<dependency>
				<groupId>cglib</groupId>
				<artifactId>cglib</artifactId>
				<version>${cglib.version}</version>
				<scope>test</scope>
			</dependency>
			<!-- https://mvnrepository.com/artifact/net.sf.opencsv/opencsv -->
			<dependency>
				<groupId>net.sf.opencsv</groupId>
				<artifactId>opencsv</artifactId>
				<version>${opencsv.version}</version>
			</dependency>
			<!-- https://mvnrepository.com/artifact/org.apache.commons/commons-csv -->
			<dependency>
				<groupId>org.apache.commons</groupId>
				<artifactId>commons-csv</artifactId>
				<version>${commons-csv.version}</version>
			</dependency>

			<dependency>
				<groupId>com.fasterxml.jackson.dataformat</groupId>
				<artifactId>jackson-dataformat-csv</artifactId>
				<version>${jackson-dataformat-csv.version}</version>
			</dependency>
		</dependencies>
	</dependencyManagement>
</project>
